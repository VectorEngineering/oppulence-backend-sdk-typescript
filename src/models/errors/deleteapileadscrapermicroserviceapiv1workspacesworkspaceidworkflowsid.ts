/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Standard error response object
 */
export type DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponseData =
  {
    error: string;
    code?: string | undefined;
    details?: any | null | undefined;
  };

/**
 * Standard error response object
 */
export class DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse
  extends Error
{
  error: string;
  code?: string | undefined;
  details?: any | null | undefined;

  /** The original data that was passed to this error instance. */
  data$:
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponseData;

  constructor(
    err:
      DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponseData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;
    if (err.code != null) this.code = err.code;
    if (err.details != null) this.details = err.details;

    this.name =
      "DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse";
  }
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.string(),
    code: z.string().optional(),
    details: z.nullable(z.any()).optional(),
  })
    .transform((v) => {
      return new DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse(
        v,
      );
    });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$Outbound =
  {
    error: string;
    code?: string | undefined;
    details?: any | null | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse
  > = z.instanceof(
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.string(),
      code: z.string().optional(),
      details: z.nullable(z.any()).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsIdErrorResponse$Outbound;
}
