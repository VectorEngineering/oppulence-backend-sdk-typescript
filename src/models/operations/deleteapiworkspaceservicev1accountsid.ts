/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiWorkspaceServiceV1AccountsIdRequest = {
  id: string;
};

export type DeleteApiWorkspaceServiceV1AccountsIdResponseBody = {
  success?: boolean | undefined;
};

/** @internal */
export const DeleteApiWorkspaceServiceV1AccountsIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1AccountsIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type DeleteApiWorkspaceServiceV1AccountsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiWorkspaceServiceV1AccountsIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1AccountsIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiWorkspaceServiceV1AccountsIdRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkspaceServiceV1AccountsIdRequest$ {
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiWorkspaceServiceV1AccountsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiWorkspaceServiceV1AccountsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiWorkspaceServiceV1AccountsIdRequest$Outbound;
}

export function deleteApiWorkspaceServiceV1AccountsIdRequestToJSON(
  deleteApiWorkspaceServiceV1AccountsIdRequest:
    DeleteApiWorkspaceServiceV1AccountsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiWorkspaceServiceV1AccountsIdRequest$outboundSchema.parse(
      deleteApiWorkspaceServiceV1AccountsIdRequest,
    ),
  );
}

export function deleteApiWorkspaceServiceV1AccountsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiWorkspaceServiceV1AccountsIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiWorkspaceServiceV1AccountsIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiWorkspaceServiceV1AccountsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiWorkspaceServiceV1AccountsIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiWorkspaceServiceV1AccountsIdResponseBody$Outbound = {
  success?: boolean | undefined;
};

/** @internal */
export const DeleteApiWorkspaceServiceV1AccountsIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkspaceServiceV1AccountsIdResponseBody$ {
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1AccountsIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody$Outbound;
}

export function deleteApiWorkspaceServiceV1AccountsIdResponseBodyToJSON(
  deleteApiWorkspaceServiceV1AccountsIdResponseBody:
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiWorkspaceServiceV1AccountsIdResponseBody$outboundSchema.parse(
      deleteApiWorkspaceServiceV1AccountsIdResponseBody,
    ),
  );
}

export function deleteApiWorkspaceServiceV1AccountsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiWorkspaceServiceV1AccountsIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiWorkspaceServiceV1AccountsIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiWorkspaceServiceV1AccountsIdResponseBody' from JSON`,
  );
}
