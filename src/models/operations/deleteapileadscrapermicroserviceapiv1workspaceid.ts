/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest = {
  id: string;
};

/**
 * Deletes a specific workspace
 */
export type DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody = {
  success?: boolean | undefined;
};

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1WorkspaceIdResponseBody' from JSON`,
  );
}
