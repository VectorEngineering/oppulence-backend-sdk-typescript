/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus>;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang>;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay>;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours = {
  id?: string | undefined;
  day?: PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours = {
  id?: string | undefined;
  day?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours>
    | undefined;
  specialHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads>
    | undefined;
  url?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus
    | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?:
    | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody = {
  workflow?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow
    | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/**
 * Updates the details of a specific workflow
 */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody = {
  workflow?:
    | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow
    | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus
  > = PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang
  > = PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay
  > = PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours
  > = z.object({
    id: z.string().optional(),
    day: PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$Outbound>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workflow: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$Outbound =
  {
    workflow?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody
  > = z.object({
    workflow: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflow$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBodyToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponse200Status$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobsToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat
  > =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsResponseStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflowToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflowFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workflow: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$Outbound =
  {
    workflow?:
      | PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody
  > = z.object({
    workflow: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowWorkflowsWorkflow$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBodyToJSON(
  putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody:
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody),
  );
}

export function putApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1WorkspacesWorkflowResponseBody' from JSON`,
  );
}
