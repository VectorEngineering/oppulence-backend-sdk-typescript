/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest =
  {
    workspaceId: string;
    complianceType?: string | undefined;
  };

export type Violations = {
  ruleId?: string | undefined;
  severity?: string | undefined;
  description?: string | undefined;
  affectedResources?: Array<string> | undefined;
  remediationSteps?: string | undefined;
};

export type CategoryScores = {
  category?: string | undefined;
  score?: number | undefined;
  status?: string | undefined;
  improvements?: Array<string> | undefined;
};

export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData =
  {
    overallScore?: number | undefined;
    complianceStatus?: string | undefined;
    violations?: Array<Violations> | undefined;
    categoryScores?: Array<CategoryScores> | undefined;
    reportGeneratedAt?: Date | undefined;
    certificationId?: string | undefined;
  };

export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody =
  {
    data: GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData;
  };

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$inboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workspaceId: z.string(),
    complianceType: z.string().optional(),
  });

/** @internal */
export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$Outbound =
  {
    workspaceId: string;
    complianceType?: string | undefined;
  };

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$outboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$Outbound,
    z.ZodTypeDef,
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest
  > = z.object({
    workspaceId: z.string(),
    complianceType: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$ {
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$inboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$outboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$Outbound` instead. */
  export type Outbound =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$Outbound;
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequestToJSON(
  getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest:
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest,
): string {
  return JSON.stringify(
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$outboundSchema
      .parse(
        getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest,
      ),
  );
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdRequest' from JSON`,
  );
}

/** @internal */
export const Violations$inboundSchema: z.ZodType<
  Violations,
  z.ZodTypeDef,
  unknown
> = z.object({
  ruleId: z.string().optional(),
  severity: z.string().optional(),
  description: z.string().optional(),
  affectedResources: z.array(z.string()).optional(),
  remediationSteps: z.string().optional(),
});

/** @internal */
export type Violations$Outbound = {
  ruleId?: string | undefined;
  severity?: string | undefined;
  description?: string | undefined;
  affectedResources?: Array<string> | undefined;
  remediationSteps?: string | undefined;
};

/** @internal */
export const Violations$outboundSchema: z.ZodType<
  Violations$Outbound,
  z.ZodTypeDef,
  Violations
> = z.object({
  ruleId: z.string().optional(),
  severity: z.string().optional(),
  description: z.string().optional(),
  affectedResources: z.array(z.string()).optional(),
  remediationSteps: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Violations$ {
  /** @deprecated use `Violations$inboundSchema` instead. */
  export const inboundSchema = Violations$inboundSchema;
  /** @deprecated use `Violations$outboundSchema` instead. */
  export const outboundSchema = Violations$outboundSchema;
  /** @deprecated use `Violations$Outbound` instead. */
  export type Outbound = Violations$Outbound;
}

export function violationsToJSON(violations: Violations): string {
  return JSON.stringify(Violations$outboundSchema.parse(violations));
}

export function violationsFromJSON(
  jsonString: string,
): SafeParseResult<Violations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Violations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Violations' from JSON`,
  );
}

/** @internal */
export const CategoryScores$inboundSchema: z.ZodType<
  CategoryScores,
  z.ZodTypeDef,
  unknown
> = z.object({
  category: z.string().optional(),
  score: z.number().optional(),
  status: z.string().optional(),
  improvements: z.array(z.string()).optional(),
});

/** @internal */
export type CategoryScores$Outbound = {
  category?: string | undefined;
  score?: number | undefined;
  status?: string | undefined;
  improvements?: Array<string> | undefined;
};

/** @internal */
export const CategoryScores$outboundSchema: z.ZodType<
  CategoryScores$Outbound,
  z.ZodTypeDef,
  CategoryScores
> = z.object({
  category: z.string().optional(),
  score: z.number().optional(),
  status: z.string().optional(),
  improvements: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CategoryScores$ {
  /** @deprecated use `CategoryScores$inboundSchema` instead. */
  export const inboundSchema = CategoryScores$inboundSchema;
  /** @deprecated use `CategoryScores$outboundSchema` instead. */
  export const outboundSchema = CategoryScores$outboundSchema;
  /** @deprecated use `CategoryScores$Outbound` instead. */
  export type Outbound = CategoryScores$Outbound;
}

export function categoryScoresToJSON(categoryScores: CategoryScores): string {
  return JSON.stringify(CategoryScores$outboundSchema.parse(categoryScores));
}

export function categoryScoresFromJSON(
  jsonString: string,
): SafeParseResult<CategoryScores, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CategoryScores$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CategoryScores' from JSON`,
  );
}

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$inboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    overallScore: z.number().optional(),
    complianceStatus: z.string().optional(),
    violations: z.array(z.lazy(() => Violations$inboundSchema)).optional(),
    categoryScores: z.array(z.lazy(() => CategoryScores$inboundSchema))
      .optional(),
    reportGeneratedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    certificationId: z.string().optional(),
  });

/** @internal */
export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$Outbound =
  {
    overallScore?: number | undefined;
    complianceStatus?: string | undefined;
    violations?: Array<Violations$Outbound> | undefined;
    categoryScores?: Array<CategoryScores$Outbound> | undefined;
    reportGeneratedAt?: string | undefined;
    certificationId?: string | undefined;
  };

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$outboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$Outbound,
    z.ZodTypeDef,
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData
  > = z.object({
    overallScore: z.number().optional(),
    complianceStatus: z.string().optional(),
    violations: z.array(z.lazy(() => Violations$outboundSchema)).optional(),
    categoryScores: z.array(z.lazy(() => CategoryScores$outboundSchema))
      .optional(),
    reportGeneratedAt: z.date().transform(v => v.toISOString()).optional(),
    certificationId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$ {
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$inboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$outboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$Outbound` instead. */
  export type Outbound =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$Outbound;
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdDataToJSON(
  getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData:
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData,
): string {
  return JSON.stringify(
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$outboundSchema
      .parse(getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData),
  );
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData' from JSON`,
  );
}

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$inboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$inboundSchema
    ),
  });

/** @internal */
export type GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$Outbound =
  {
    data:
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$Outbound;
  };

/** @internal */
export const GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$outboundSchema:
  z.ZodType<
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$ {
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$inboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$outboundSchema;
  /** @deprecated use `GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$Outbound;
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBodyToJSON(
  getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody:
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody,
): string {
  return JSON.stringify(
    GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$outboundSchema
      .parse(
        getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody,
      ),
  );
}

export function getApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiWorkspaceServiceV1WorkspacesComplianceReportWorkspaceIdResponseBody' from JSON`,
  );
}
