/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1OrganizationRequest = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan = {
  BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
  BillingPlanStartup: "BILLING_PLAN_STARTUP",
  BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
  BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationRoles = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationRoles
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationPermissions =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationPermissions>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTimezone = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationTimezone
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
    >
    | undefined;
  specialHours?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
    >
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
    | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1OrganizationJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationLang
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationDay
>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1OrganizationDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours = {
  id?: string | undefined;
  day?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1OrganizationLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationMetadata = {};

export type GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents>
    | undefined;
  includedFields?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: GetApiLeadScraperMicroserviceApiV1OrganizationMetadata | undefined;
  webhookName?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks>
    | undefined;
  workspaceType?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
    | undefined;
  roles?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationRoles>
    | undefined;
  permissions?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: GetApiLeadScraperMicroserviceApiV1OrganizationTimezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces>
    | undefined;
  settings?: GetApiLeadScraperMicroserviceApiV1OrganizationSettings | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationScopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationScopes = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationScopes
>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys = {
  id?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
    | undefined;
  scopes?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationScopes>
    | undefined;
  maxUses?: number | undefined;
  allowedIps?: Array<string> | undefined;
  useCount?: number | undefined;
  expiresAt?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenants = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationAccounts>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
    | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier = {
  PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
  PlanTierFree: "PLAN_TIER_FREE",
  PlanTierStarter: "PLAN_TIER_STARTER",
  PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
  PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode = {
  BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
  BillingModeLicensed: "BILLING_MODE_LICENSED",
  BillingModeMetered: "BILLING_MODE_METERED",
  BillingModeHybrid: "BILLING_MODE_HYBRID",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval = {
  IntervalUnspecified: "INTERVAL_UNSPECIFIED",
  IntervalMonthly: "INTERVAL_MONTHLY",
  IntervalYearly: "INTERVAL_YEARLY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus = {
  PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
  PaymentStatusPaid: "PAYMENT_STATUS_PAID",
  PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
  PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
  PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier?: GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier | undefined;
  billingMode?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode
    | undefined;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: Date | undefined;
  currentPeriodEnd?: Date | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
    | undefined;
  autoRenew?: boolean | undefined;
  paymentStatus?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
    | undefined;
  isTrial?: boolean | undefined;
  trialStart?: Date | undefined;
  trialEnd?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  canceledAt?: Date | undefined;
  endedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationStatus = {
  StatusUnspecified: "STATUS_UNSPECIFIED",
  StatusActive: "STATUS_ACTIVE",
  StatusSuspended: "STATUS_SUSPENDED",
  StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
  StatusRevoked: "STATUS_REVOKED",
  StatusExpired: "STATUS_EXPIRED",
  StatusRateLimited: "STATUS_RATE_LIMITED",
  StatusPendingReview: "STATUS_PENDING_REVIEW",
  StatusDeprecated: "STATUS_DEPRECATED",
  StatusMaintenance: "STATUS_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationStatus
>;

export type Organizations = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
    | undefined;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationTenants>
    | undefined;
  subscriptions?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  createdBy?: string | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1OrganizationStatus | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationData = {
  organizations?: Array<Organizations> | undefined;
  totalCount?: number | undefined;
  nextPageNumber?: number | undefined;
};

/**
 * Retrieves a list of all organizations in a tenant
 */
export type GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1OrganizationData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationRequest$Outbound = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest
  > = z.object({
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationRequestToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationRequest:
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationRequest$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationRequest,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > = GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationRoles);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    GetApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationRoles$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationPermissions);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationTimezone);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound
    >
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationWorkflows:
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationWorkflows),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationLang> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationLang> =
    GetApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationDay> =
    GetApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationReviews,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound>
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > = GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > = GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound =
  {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationMetadata:
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationMetadata,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationWebhooks:
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > = GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound>
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound>
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationWorkspaces:
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationWorkspaces),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationSettings$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSettingsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationSettings:
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationSettings,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationSettings' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound>
    | undefined;
  settings?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound
    | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationAccountsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationAccounts:
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationAccounts,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationAccounts' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationScopes> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationScopes);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationScopes> =
    GetApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationScopes$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound = {
  id?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  status: string;
  scopes?: Array<string> | undefined;
  maxUses?: number | undefined;
  allowedIps?: Array<string> | undefined;
  useCount?: number | undefined;
  expiresAt?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenants$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenants:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationTenants,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenants' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > = GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    canceledAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier: string;
    billingMode: string;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval: string;
    autoRenew?: boolean | undefined;
    paymentStatus: string;
    isTrial?: boolean | undefined;
    trialStart?: string | undefined;
    trialEnd?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    canceledAt?: string | undefined;
    endedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      GetApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      GetApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      GetApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    endedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationSubscriptions:
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationSubscriptions),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationStatus> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationStatus> =
    GetApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema;
}

/** @internal */
export const Organizations$inboundSchema: z.ZodType<
  Organizations,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  website: z.string().optional(),
  description: z.string().optional(),
  billingEmail: z.string().optional(),
  technicalEmail: z.string().optional(),
  phone: z.string().optional(),
  address: z.string().optional(),
  ssoEnabled: z.boolean().optional(),
  ssoProvider: z.string().optional(),
  ssoDomain: z.string().optional(),
  allowedDomains: z.array(z.string()).optional(),
  enforce2fa: z.boolean().optional(),
  billingPlan:
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema
      .default("BILLING_PLAN_UNSPECIFIED"),
  billingCurrency: z.string().optional(),
  autoBilling: z.boolean().optional(),
  taxId: z.string().optional(),
  complianceFrameworks: z.array(z.string()).optional(),
  dataProcessingAgreement: z.boolean().optional(),
  dataRegion: z.string().optional(),
  maxTenants: z.number().int().optional(),
  totalStorageLimit: z.string().optional(),
  maxApiKeys: z.number().int().optional(),
  maxUsers: z.number().int().optional(),
  tenants: z.array(
    z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema
    ),
  ).optional(),
  subscriptions: z.lazy(() =>
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
  ).optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  createdBy: z.string().optional(),
  status: GetApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema
    .default("STATUS_UNSPECIFIED"),
});

/** @internal */
export type Organizations$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan: string;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound>
    | undefined;
  subscriptions?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound
    | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  createdBy?: string | undefined;
  status: string;
};

/** @internal */
export const Organizations$outboundSchema: z.ZodType<
  Organizations$Outbound,
  z.ZodTypeDef,
  Organizations
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  website: z.string().optional(),
  description: z.string().optional(),
  billingEmail: z.string().optional(),
  technicalEmail: z.string().optional(),
  phone: z.string().optional(),
  address: z.string().optional(),
  ssoEnabled: z.boolean().optional(),
  ssoProvider: z.string().optional(),
  ssoDomain: z.string().optional(),
  allowedDomains: z.array(z.string()).optional(),
  enforce2fa: z.boolean().optional(),
  billingPlan:
    GetApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema
      .default("BILLING_PLAN_UNSPECIFIED"),
  billingCurrency: z.string().optional(),
  autoBilling: z.boolean().optional(),
  taxId: z.string().optional(),
  complianceFrameworks: z.array(z.string()).optional(),
  dataProcessingAgreement: z.boolean().optional(),
  dataRegion: z.string().optional(),
  maxTenants: z.number().int().optional(),
  totalStorageLimit: z.string().optional(),
  maxApiKeys: z.number().int().optional(),
  maxUsers: z.number().int().optional(),
  tenants: z.array(
    z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema
    ),
  ).optional(),
  subscriptions: z.lazy(() =>
    GetApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
  ).optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  createdBy: z.string().optional(),
  status: GetApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema
    .default("STATUS_UNSPECIFIED"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Organizations$ {
  /** @deprecated use `Organizations$inboundSchema` instead. */
  export const inboundSchema = Organizations$inboundSchema;
  /** @deprecated use `Organizations$outboundSchema` instead. */
  export const outboundSchema = Organizations$outboundSchema;
  /** @deprecated use `Organizations$Outbound` instead. */
  export type Outbound = Organizations$Outbound;
}

export function organizationsToJSON(organizations: Organizations): string {
  return JSON.stringify(Organizations$outboundSchema.parse(organizations));
}

export function organizationsFromJSON(
  jsonString: string,
): SafeParseResult<Organizations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Organizations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Organizations' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organizations: z.array(z.lazy(() => Organizations$inboundSchema))
      .optional(),
    totalCount: z.number().int().optional(),
    nextPageNumber: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationData$Outbound = {
  organizations?: Array<Organizations$Outbound> | undefined;
  totalCount?: number | undefined;
  nextPageNumber?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationData
  > = z.object({
    organizations: z.array(z.lazy(() => Organizations$outboundSchema))
      .optional(),
    totalCount: z.number().int().optional(),
    nextPageNumber: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationDataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationData:
    GetApiLeadScraperMicroserviceApiV1OrganizationData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound =
  {
    data: GetApiLeadScraperMicroserviceApiV1OrganizationData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationResponseBody:
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationResponseBody' from JSON`,
  );
}
