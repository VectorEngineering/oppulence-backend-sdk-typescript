/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1WorkspacesRequest = {
  accountId?: string | undefined;
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1WorkspacesStatus
>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat>;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1WorkspacesStatus | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1WorkspacesJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1WorkspacesLang
>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1WorkspacesDay
>;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1WorkspacesDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay>;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1WorkspacesLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?: Array<GetApiLeadScraperMicroserviceApiV1WorkspacesLeads> | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields>;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat>;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata = {};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents>
    | undefined;
  includedFields?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata | undefined;
  webhookName?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType>;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks>
    | undefined;
  workspaceType?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesData = {
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces>
    | undefined;
  nextPageNumber?: number | undefined;
};

/**
 * Retrieves a list of workspaces for a given account
 */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1WorkspacesData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accountId: z.string().optional(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$Outbound = {
  accountId?: string | undefined;
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest
  > = z.object({
    accountId: z.string().optional(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesRequestToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesRequest:
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesRequest,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesStatus> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesStatus> =
    GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$Outbound
    >
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponse200Status$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesJobsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesJobs:
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status: GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$inboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status: GetApiLeadScraperMicroserviceApiV1WorkspacesStatus$outboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkflows:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesWorkflows,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesLang> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesLang> =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1WorkspacesDay> =
    GetApiLeadScraperMicroserviceApiV1WorkspacesDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1WorkspacesDay$inboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1WorkspacesDay$outboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesRegularHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesReviews:
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesReviews,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesLeads:
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1WorkspacesLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$Outbound>
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1WorkspacesLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesApiKeys:
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesApiKeys,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$Outbound = {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesMetadata:
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesMetadata,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWebhooks:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesWebhooks,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType
  > = GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$Outbound>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: string | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$Outbound>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$Outbound>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$Outbound>
    | undefined;
  workspaceType: string;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$inboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesData$Outbound = {
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$Outbound>
    | undefined;
  nextPageNumber?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesData
  > = z.object({
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaces$outboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesDataToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesData:
    GetApiLeadScraperMicroserviceApiV1WorkspacesData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1WorkspacesData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$Outbound =
  {
    data: GetApiLeadScraperMicroserviceApiV1WorkspacesData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesResponseBody:
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1WorkspacesResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesResponseBody' from JSON`,
  );
}
