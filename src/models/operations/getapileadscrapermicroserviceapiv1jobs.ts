/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1JobsRequest = {
  authPlatformUserId: string;
  orgId: string;
  tenantId: string;
};

export const GetApiLeadScraperMicroserviceApiV1JobsStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsStatus
>;

export const GetApiLeadScraperMicroserviceApiV1JobsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsLang
>;

export const GetApiLeadScraperMicroserviceApiV1JobsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsDay
>;

export type GetApiLeadScraperMicroserviceApiV1JobsRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1JobsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1JobsJobsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsJobsDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsJobsDay
>;

export type GetApiLeadScraperMicroserviceApiV1JobsSpecialHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1JobsJobsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1JobsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1JobsRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsRevenueRange = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsRevenueRange
>;

export const GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits
>;

export type GetApiLeadScraperMicroserviceApiV1JobsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?: Array<GetApiLeadScraperMicroserviceApiV1JobsReviews> | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?: GetApiLeadScraperMicroserviceApiV1JobsRevenueRange | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1JobsJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1JobsStatus | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1JobsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?: Array<GetApiLeadScraperMicroserviceApiV1JobsLeads> | undefined;
  url?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1JobsData = {
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1JobsJobs> | undefined;
};

/**
 * This endpoint retrieves all Google Maps scraping jobs
 */
export type GetApiLeadScraperMicroserviceApiV1JobsResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1JobsData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    authPlatformUserId: z.string(),
    orgId: z.string(),
    tenantId: z.string(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsRequest$Outbound = {
  authPlatformUserId: string;
  orgId: string;
  tenantId: string;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsRequest
  > = z.object({
    authPlatformUserId: z.string(),
    orgId: z.string(),
    tenantId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRequest$Outbound` instead. */
  export type Outbound = GetApiLeadScraperMicroserviceApiV1JobsRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsRequestToJSON(
  getApiLeadScraperMicroserviceApiV1JobsRequest:
    GetApiLeadScraperMicroserviceApiV1JobsRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsRequest$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsRequest,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsStatus> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsStatus> =
    GetApiLeadScraperMicroserviceApiV1JobsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsLang> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsLang> =
    GetApiLeadScraperMicroserviceApiV1JobsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsDay> =
    GetApiLeadScraperMicroserviceApiV1JobsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1JobsDay$inboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsRegularHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1JobsDay$outboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1JobsRegularHours:
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsRegularHours$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsRegularHours,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsRegularHours$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsJobsDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsJobsDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsJobsDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsJobsDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsJobsDay> =
    GetApiLeadScraperMicroserviceApiV1JobsJobsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsJobsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsJobsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsJobsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsJobsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsJobsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1JobsJobsDay$inboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1JobsJobsDay$outboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1JobsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsSpecialHours,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsReviews$Outbound` instead. */
  export type Outbound = GetApiLeadScraperMicroserviceApiV1JobsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1JobsReviews:
    GetApiLeadScraperMicroserviceApiV1JobsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsReviews$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsReviews,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsRevenueRange> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsRevenueRange);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1JobsRevenueRange> =
    GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits
  > = GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1JobsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() => GetApiLeadScraperMicroserviceApiV1JobsReviews$inboundSchema),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$inboundSchema.default(
        "REVENUE_RANGE_UNSPECIFIED",
      ),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1JobsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1JobsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1JobsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1JobsRevenueRange$outboundSchema.default(
        "REVENUE_RANGE_UNSPECIFIED",
      ),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1JobsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsLeads$Outbound` instead. */
  export type Outbound = GetApiLeadScraperMicroserviceApiV1JobsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1JobsLeads:
    GetApiLeadScraperMicroserviceApiV1JobsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsJobs$inboundSchema:
  z.ZodType<GetApiLeadScraperMicroserviceApiV1JobsJobs, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string().optional(),
      priority: z.number().int().optional(),
      payloadType: z.string().optional(),
      payload: z.string().optional(),
      createdAt: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ).optional(),
      status: GetApiLeadScraperMicroserviceApiV1JobsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
      name: z.string().optional(),
      keywords: z.array(z.string()).optional(),
      lang: GetApiLeadScraperMicroserviceApiV1JobsLang$inboundSchema.default(
        "LANGUAGE_UNSPECIFIED",
      ),
      zoom: z.number().int().optional(),
      lat: z.string().optional(),
      lon: z.string().optional(),
      fastMode: z.boolean().optional(),
      radius: z.number().int().optional(),
      depth: z.number().int().optional(),
      email: z.boolean().optional(),
      maxTime: z.number().int().optional(),
      proxies: z.array(z.string()).optional(),
      updatedAt: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ).optional(),
      deletedAt: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ).optional(),
      leads: z.array(
        z.lazy(() => GetApiLeadScraperMicroserviceApiV1JobsLeads$inboundSchema),
      ).optional(),
      url: z.string().optional(),
    });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1JobsLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status: GetApiLeadScraperMicroserviceApiV1JobsStatus$outboundSchema.default(
      "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    ),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1JobsLang$outboundSchema.default(
      "LANGUAGE_UNSPECIFIED",
    ),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() => GetApiLeadScraperMicroserviceApiV1JobsLeads$outboundSchema),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsJobs$Outbound` instead. */
  export type Outbound = GetApiLeadScraperMicroserviceApiV1JobsJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsJobsToJSON(
  getApiLeadScraperMicroserviceApiV1JobsJobs:
    GetApiLeadScraperMicroserviceApiV1JobsJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsData$inboundSchema:
  z.ZodType<GetApiLeadScraperMicroserviceApiV1JobsData, z.ZodTypeDef, unknown> =
    z.object({
      jobs: z.array(
        z.lazy(() => GetApiLeadScraperMicroserviceApiV1JobsJobs$inboundSchema),
      ).optional(),
    });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsData$Outbound = {
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1JobsJobs$Outbound> | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsData
  > = z.object({
    jobs: z.array(
      z.lazy(() => GetApiLeadScraperMicroserviceApiV1JobsJobs$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsData$Outbound` instead. */
  export type Outbound = GetApiLeadScraperMicroserviceApiV1JobsData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsDataToJSON(
  getApiLeadScraperMicroserviceApiV1JobsData:
    GetApiLeadScraperMicroserviceApiV1JobsData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1JobsData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1JobsResponseBody$Outbound = {
  data: GetApiLeadScraperMicroserviceApiV1JobsData$Outbound;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1JobsResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1JobsData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1JobsResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1JobsResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1JobsResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1JobsResponseBody:
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1JobsResponseBody$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1JobsResponseBody,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1JobsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1JobsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1JobsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1JobsResponseBody' from JSON`,
  );
}
