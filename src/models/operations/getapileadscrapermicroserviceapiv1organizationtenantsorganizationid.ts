/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest =
  {
    organizationId: string;
    pageSize?: number | undefined;
    pageNumber?: number | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus =
  {
    AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
    AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
    AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
    AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles =
  {
    RoleUnspecified: "ROLE_UNSPECIFIED",
    RoleAdmin: "ROLE_ADMIN",
    RoleUser: "ROLE_USER",
    RoleViewer: "ROLE_VIEWER",
    RoleManager: "ROLE_MANAGER",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions =
  {
    PermissionUnspecified: "PERMISSION_UNSPECIFIED",
    PermissionRead: "PERMISSION_READ",
    PermissionWrite: "PERMISSION_WRITE",
    PermissionDelete: "PERMISSION_DELETE",
    PermissionManageUsers: "PERMISSION_MANAGE_USERS",
    PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
    PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
    PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone =
  {
    TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
    TimezoneUtc: "TIMEZONE_UTC",
    TimezoneEst: "TIMEZONE_EST",
    TimezoneCst: "TIMEZONE_CST",
    TimezoneMst: "TIMEZONE_MST",
    TimezonePst: "TIMEZONE_PST",
    TimezoneGmt: "TIMEZONE_GMT",
    TimezoneCet: "TIMEZONE_CET",
    TimezoneIst: "TIMEZONE_IST",
    TimezoneJst: "TIMEZONE_JST",
    TimezoneAest: "TIMEZONE_AEST",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents =
  {
    TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
    TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
    TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
    TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
    TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
    TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
    TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
    TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
    TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
    TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
    TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields =
  {
    IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
    IncludedFieldName: "INCLUDED_FIELD_NAME",
    IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
    IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
    IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
    IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
    IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
    IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
    IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
    IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
    IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
    IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
    IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
    IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
    IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
    IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
    IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
    IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
    IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
    IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
    IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
    IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
    IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
    IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
    IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
    IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
    IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
    IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
    IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
    IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
    IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat =
  {
    PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
    PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
    PayloadFormatXml: "PAYLOAD_FORMAT_XML",
    PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
    PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
    PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata =
  {};

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents
      >
      | undefined;
    includedFields?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields
      >
      | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat
      | undefined;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    lastTriggeredAt?: Date | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata
      | undefined;
    webhookName?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType =
  {
    WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
    WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
    WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
    WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    workflows?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: Date | undefined;
    scrapingJobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys
      >
      | undefined;
    webhooks?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks
      >
      | undefined;
    workspaceType?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType
      | undefined;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: Date | undefined;
    createdAt?: Date | undefined;
    accountStatus?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus
      | undefined;
    roles?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles
      >
      | undefined;
    permissions?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions
      >
      | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: Date | undefined;
    timezone?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone
      | undefined;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces
      >
      | undefined;
    settings?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings
      | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes =
  {
    TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
    TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
    TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
    TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
    TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
    TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
    TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
    TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
    TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
    TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
    TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
    TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
    TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
    TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
    TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
    TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
    TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
    TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus
      | undefined;
    scopes?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes
      >
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    description?: string | undefined;
    apiBaseUrl?: string | undefined;
    environmentVariables?: { [k: string]: string } | undefined;
    allowedOrigins?: Array<string> | undefined;
    storageQuota?: string | undefined;
    monthlyRequestLimit?: string | undefined;
    maxConcurrentJobs?: number | undefined;
    enableCaching?: boolean | undefined;
    enableRateLimiting?: boolean | undefined;
    enableRequestLogging?: boolean | undefined;
    accounts?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys
      >
      | undefined;
    totalRequests?: string | undefined;
    totalStorageUsed?: string | undefined;
    averageResponseTime?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus
      | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData =
  {
    tenants?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants
      >
      | undefined;
    nextPageNumber?: number | undefined;
  };

/**
 * Retrieves a list of all tenants in the system
 */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody =
  {
    data:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organizationId: z.string(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$Outbound =
  {
    organizationId: string;
    pageSize?: number | undefined;
    pageNumber?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest
  > = z.object({
    organizationId: z.string(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequestToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200Status$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponse200ApplicationJSONStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$Outbound =
  {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$Outbound
      >
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettingsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$Outbound =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: string | undefined;
    createdAt?: string | undefined;
    accountStatus: string;
    roles?: Array<string> | undefined;
    permissions?: Array<string> | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: string | undefined;
    timezone: string;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$Outbound
      >
      | undefined;
    settings?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$Outbound
      | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    description?: string | undefined;
    apiBaseUrl?: string | undefined;
    environmentVariables?: { [k: string]: string } | undefined;
    allowedOrigins?: Array<string> | undefined;
    storageQuota?: string | undefined;
    monthlyRequestLimit?: string | undefined;
    maxConcurrentJobs?: number | undefined;
    enableCaching?: boolean | undefined;
    enableRateLimiting?: boolean | undefined;
    enableRequestLogging?: boolean | undefined;
    accounts?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$Outbound
      >
      | undefined;
    totalRequests?: string | undefined;
    totalStorageUsed?: string | undefined;
    averageResponseTime?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    status: string;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    tenants: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$inboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$Outbound =
  {
    tenants?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$Outbound
      >
      | undefined;
    nextPageNumber?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData
  > = z.object({
    tenants: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenants$outboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$Outbound =
  {
    data:
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody:
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdResponseBody' from JSON`,
  );
}
