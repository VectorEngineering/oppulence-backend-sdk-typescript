/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest =
  {
    organizationId: string;
    tenantId: string;
  };

/**
 * Permanently deletes a tenant and all associated resources
 */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organizationId: z.string(),
    tenantId: z.string(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$Outbound =
  {
    organizationId: string;
    tenantId: string;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest
  > = z.object({
    organizationId: z.string(),
    tenantId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$outboundSchema
      .parse(
        deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest,
      ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$outboundSchema
      .parse(
        deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody,
      ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1OrganizationTenantsOrganizationIdTenantIdResponseBody' from JSON`,
  );
}
