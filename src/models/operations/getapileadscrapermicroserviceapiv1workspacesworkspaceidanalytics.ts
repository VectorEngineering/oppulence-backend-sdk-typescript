/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest =
  {
    workspaceId: string;
    startTime?: string | undefined;
    endTime?: string | undefined;
  };

export type SuccessRates = {
  workflowId?: string | undefined;
  successRate?: number | undefined;
  totalRuns?: number | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData =
  {
    totalLeads?: number | undefined;
    activeWorkflows?: number | undefined;
    jobsLast30Days?: number | undefined;
    successRates?: Array<SuccessRates> | undefined;
  };

/**
 * Retrieves analytics data for a specific workspace
 */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody =
  {
    data: GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workspaceId: z.string(),
    startTime: z.string().optional(),
    endTime: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$Outbound =
  {
    workspaceId: string;
    startTime?: string | undefined;
    endTime?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest
  > = z.object({
    workspaceId: z.string(),
    startTime: z.string().optional(),
    endTime: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequestToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsRequest' from JSON`,
  );
}

/** @internal */
export const SuccessRates$inboundSchema: z.ZodType<
  SuccessRates,
  z.ZodTypeDef,
  unknown
> = z.object({
  workflowId: z.string().optional(),
  successRate: z.number().optional(),
  totalRuns: z.number().int().optional(),
});

/** @internal */
export type SuccessRates$Outbound = {
  workflowId?: string | undefined;
  successRate?: number | undefined;
  totalRuns?: number | undefined;
};

/** @internal */
export const SuccessRates$outboundSchema: z.ZodType<
  SuccessRates$Outbound,
  z.ZodTypeDef,
  SuccessRates
> = z.object({
  workflowId: z.string().optional(),
  successRate: z.number().optional(),
  totalRuns: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuccessRates$ {
  /** @deprecated use `SuccessRates$inboundSchema` instead. */
  export const inboundSchema = SuccessRates$inboundSchema;
  /** @deprecated use `SuccessRates$outboundSchema` instead. */
  export const outboundSchema = SuccessRates$outboundSchema;
  /** @deprecated use `SuccessRates$Outbound` instead. */
  export type Outbound = SuccessRates$Outbound;
}

export function successRatesToJSON(successRates: SuccessRates): string {
  return JSON.stringify(SuccessRates$outboundSchema.parse(successRates));
}

export function successRatesFromJSON(
  jsonString: string,
): SafeParseResult<SuccessRates, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SuccessRates$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SuccessRates' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    totalLeads: z.number().int().optional(),
    activeWorkflows: z.number().int().optional(),
    jobsLast30Days: z.number().int().optional(),
    successRates: z.array(z.lazy(() => SuccessRates$inboundSchema)).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$Outbound =
  {
    totalLeads?: number | undefined;
    activeWorkflows?: number | undefined;
    jobsLast30Days?: number | undefined;
    successRates?: Array<SuccessRates$Outbound> | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData
  > = z.object({
    totalLeads: z.number().int().optional(),
    activeWorkflows: z.number().int().optional(),
    jobsLast30Days: z.number().int().optional(),
    successRates: z.array(z.lazy(() => SuccessRates$outboundSchema)).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsDataToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$Outbound =
  {
    data:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdAnalyticsResponseBody' from JSON`,
  );
}
