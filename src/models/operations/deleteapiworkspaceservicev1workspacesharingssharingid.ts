/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest = {
  sharingId: string;
};

export type DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    sharingId: z.string(),
  });

/** @internal */
export type DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$Outbound =
  {
    sharingId: string;
  };

/** @internal */
export const DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest
  > = z.object({
    sharingId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$ {
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$Outbound;
}

export function deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequestToJSON(
  deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest:
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest,
): string {
  return JSON.stringify(
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$outboundSchema
      .parse(deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest),
  );
}

export function deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$ {
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$Outbound;
}

export function deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBodyToJSON(
  deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody:
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$outboundSchema
      .parse(deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody),
  );
}

export function deleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWorkspaceServiceV1WorkspaceSharingsSharingIdResponseBody' from JSON`,
  );
}
