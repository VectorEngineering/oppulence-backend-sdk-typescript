/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody = {
  sharedWithEmail?: string | undefined;
  permissionLevel?: string | undefined;
  expiresAt?: Date | undefined;
};

export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest = {
  workspaceId: string;
  requestBody: PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody;
};

export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing = {
  id?: string | undefined;
  sharedWithEmail?: string | undefined;
  permissionLevel?: string | undefined;
  expiresAt?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody = {
  sharing?:
    | PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing
    | undefined;
};

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$inboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    sharedWithEmail: z.string().optional(),
    permissionLevel: z.string().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$Outbound =
  {
    sharedWithEmail?: string | undefined;
    permissionLevel?: string | undefined;
    expiresAt?: string | undefined;
  };

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$outboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$Outbound,
    z.ZodTypeDef,
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody
  > = z.object({
    sharedWithEmail: z.string().optional(),
    permissionLevel: z.string().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$ {
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$inboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$outboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$Outbound;
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBodyToJSON(
  postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody:
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody,
): string {
  return JSON.stringify(
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$outboundSchema
      .parse(postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody),
  );
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$inboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workspaceId: z.string(),
    RequestBody: z.lazy(() =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$Outbound =
  {
    workspaceId: string;
    RequestBody:
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$Outbound;
  };

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$outboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$Outbound,
    z.ZodTypeDef,
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest
  > = z.object({
    workspaceId: z.string(),
    requestBody: z.lazy(() =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$ {
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$inboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$outboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$Outbound` instead. */
  export type Outbound =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$Outbound;
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestToJSON(
  postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest:
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest,
): string {
  return JSON.stringify(
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$outboundSchema
      .parse(postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest),
  );
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareRequest' from JSON`,
  );
}

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$inboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    sharedWithEmail: z.string().optional(),
    permissionLevel: z.string().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$Outbound =
  {
    id?: string | undefined;
    sharedWithEmail?: string | undefined;
    permissionLevel?: string | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
  };

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$outboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$Outbound,
    z.ZodTypeDef,
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing
  > = z.object({
    id: z.string().optional(),
    sharedWithEmail: z.string().optional(),
    permissionLevel: z.string().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$ {
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$inboundSchema` instead. */
  export const inboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$inboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$outboundSchema` instead. */
  export const outboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$outboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$Outbound` instead. */
  export type Outbound =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$Outbound;
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharingToJSON(
  postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing:
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing,
): string {
  return JSON.stringify(
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$outboundSchema
      .parse(postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing),
  );
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharingFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing' from JSON`,
  );
}

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$inboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    sharing: z.lazy(() =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$inboundSchema
    ).optional(),
  });

/** @internal */
export type PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$Outbound =
  {
    sharing?:
      | PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$Outbound
      | undefined;
  };

/** @internal */
export const PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$outboundSchema:
  z.ZodType<
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$Outbound,
    z.ZodTypeDef,
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody
  > = z.object({
    sharing: z.lazy(() =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareSharing$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$ {
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$inboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$outboundSchema;
  /** @deprecated use `PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$Outbound` instead. */
  export type Outbound =
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$Outbound;
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBodyToJSON(
  postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody:
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody,
): string {
  return JSON.stringify(
    PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$outboundSchema
      .parse(postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody),
  );
}

export function postApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiWorkspaceServiceV1WorkspacesWorkspaceIdShareResponseBody' from JSON`,
  );
}
