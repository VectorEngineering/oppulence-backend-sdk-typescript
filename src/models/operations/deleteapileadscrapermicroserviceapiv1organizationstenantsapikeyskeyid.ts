/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest =
  {
    keyId: string;
    organizationId?: string | undefined;
    tenantId?: string | undefined;
  };

/**
 * Permanently deletes a tenant API key
 */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    keyId: z.string(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$Outbound =
  {
    keyId: string;
    organizationId?: string | undefined;
    tenantId?: string | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest
  > = z.object({
    keyId: z.string(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$outboundSchema
      .parse(
        deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest,
      ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$outboundSchema
      .parse(
        deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody,
      ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysKeyIdResponseBody' from JSON`,
  );
}
