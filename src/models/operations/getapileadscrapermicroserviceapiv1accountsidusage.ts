/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest = {
  id: string;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData = {
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  remainingJobs?: number | undefined;
  resetTime?: Date | undefined;
};

/**
 * Retrieves usage details for a given account
 */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$Outbound =
  {
    id: string;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageRequestToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest:
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdUsageRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    remainingJobs: z.number().int().optional(),
    resetTime: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$Outbound = {
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  remainingJobs?: number | undefined;
  resetTime?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData
  > = z.object({
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    remainingJobs: z.number().int().optional(),
    resetTime: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageDataToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdUsageData:
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdUsageData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$Outbound =
  {
    data: GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdUsageData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody:
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdUsageResponseBody' from JSON`,
  );
}
