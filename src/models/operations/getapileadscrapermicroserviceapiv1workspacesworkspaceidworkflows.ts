/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest =
  {
    workspaceId: string;
    pageSize?: number | undefined;
    pageNumber?: number | undefined;
    filter?: string | undefined;
    organizationId?: string | undefined;
    tenantId?: string | undefined;
    accountId?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData =
  {
    workflows?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows
      >
      | undefined;
    nextPageNumber?: number | undefined;
  };

/**
 * Retrieves a list of workflows for a given workspace
 */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody =
  {
    data: GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workspaceId: z.string(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    filter: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$Outbound =
  {
    workspaceId: string;
    pageSize?: number | undefined;
    pageNumber?: number | undefined;
    filter?: string | undefined;
    organizationId?: string | undefined;
    tenantId?: string | undefined;
    accountId?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest
  > = z.object({
    workspaceId: z.string(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    filter: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequestToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkspacesStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat
  > =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$inboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$Outbound =
  {
    workflows?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$Outbound
      >
      | undefined;
    nextPageNumber?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData
  > = z.object({
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsWorkflows$outboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDataToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$Outbound =
  {
    data:
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody:
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1WorkspacesWorkspaceIdWorkflowsResponseBody' from JSON`,
  );
}
