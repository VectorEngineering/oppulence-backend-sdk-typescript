/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest = {
  webhookId: string;
  organizationId?: string | undefined;
  workspaceId?: string | undefined;
  tenantId?: string | undefined;
  accountId?: string | undefined;
};

/**
 * Deletes a webhook configuration
 */
export type DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    webhookId: z.string(),
    organizationId: z.string().optional(),
    workspaceId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$Outbound =
  {
    webhookId: string;
    organizationId?: string | undefined;
    workspaceId?: string | undefined;
    tenantId?: string | undefined;
    accountId?: string | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest
  > = z.object({
    webhookId: z.string(),
    organizationId: z.string().optional(),
    workspaceId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$outboundSchema
      .parse(
        deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody,
      ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1WebhooksWebhookIdResponseBody' from JSON`,
  );
}
