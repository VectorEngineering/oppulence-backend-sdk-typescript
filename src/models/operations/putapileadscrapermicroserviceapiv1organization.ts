/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan = {
  BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
  BillingPlanStartup: "BILLING_PLAN_STARTUP",
  BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
  BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationRoles = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationRoles
>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationPermissions =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationPermissions>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationTimezone = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationTimezone
>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationStatus = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationStatus
>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationLang = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationLang
>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationDay = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationDay
>;

export type PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours = {
  id?: string | undefined;
  day?: PutApiLeadScraperMicroserviceApiV1OrganizationDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours = {
  id?: string | undefined;
  day?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours>
    | undefined;
  specialHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PutApiLeadScraperMicroserviceApiV1OrganizationLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationLeads>
    | undefined;
  url?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat>;

export type PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: PutApiLeadScraperMicroserviceApiV1OrganizationStatus | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<PutApiLeadScraperMicroserviceApiV1OrganizationJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
    >
    | undefined;
  specialHours?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
    >
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads>
    | undefined;
  url?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationMetadata = {};

export type PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents>
    | undefined;
  includedFields?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: PutApiLeadScraperMicroserviceApiV1OrganizationMetadata | undefined;
  webhookName?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys>
    | undefined;
  webhooks?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks>
    | undefined;
  workspaceType?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
    | undefined;
  roles?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationRoles>
    | undefined;
  permissions?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: PutApiLeadScraperMicroserviceApiV1OrganizationTimezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces>
    | undefined;
  settings?: PutApiLeadScraperMicroserviceApiV1OrganizationSettings | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationScopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationScopes = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationScopes
>;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
      | undefined;
    scopes?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationScopes>
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationTenants = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationAccounts>
    | undefined;
  apiKeys?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
    | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier = {
  PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
  PlanTierFree: "PLAN_TIER_FREE",
  PlanTierStarter: "PLAN_TIER_STARTER",
  PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
  PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier = ClosedEnum<
  typeof PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier
>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode = {
  BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
  BillingModeLicensed: "BILLING_MODE_LICENSED",
  BillingModeMetered: "BILLING_MODE_METERED",
  BillingModeHybrid: "BILLING_MODE_HYBRID",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval = {
  IntervalUnspecified: "INTERVAL_UNSPECIFIED",
  IntervalMonthly: "INTERVAL_MONTHLY",
  IntervalYearly: "INTERVAL_YEARLY",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus = {
  PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
  PaymentStatusPaid: "PAYMENT_STATUS_PAID",
  PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
  PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
  PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier?: PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier | undefined;
  billingMode?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode
    | undefined;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: Date | undefined;
  currentPeriodEnd?: Date | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
    | undefined;
  autoRenew?: boolean | undefined;
  paymentStatus?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
    | undefined;
  isTrial?: boolean | undefined;
  trialStart?: Date | undefined;
  trialEnd?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  canceledAt?: Date | undefined;
  endedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1 =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1 =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganization = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
    | undefined;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationTenants>
    | undefined;
  subscriptions?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  createdBy?: string | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
    | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody = {
  organization?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganization
    | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan =
  {
    BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
    BillingPlanStartup: "BILLING_PLAN_STARTUP",
    BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
    BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus =
  {
    AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
    AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
    AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
    AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles =
  {
    RoleUnspecified: "ROLE_UNSPECIFIED",
    RoleAdmin: "ROLE_ADMIN",
    RoleUser: "ROLE_USER",
    RoleViewer: "ROLE_VIEWER",
    RoleManager: "ROLE_MANAGER",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions =
  {
    PermissionUnspecified: "PERMISSION_UNSPECIFIED",
    PermissionRead: "PERMISSION_READ",
    PermissionWrite: "PERMISSION_WRITE",
    PermissionDelete: "PERMISSION_DELETE",
    PermissionManageUsers: "PERMISSION_MANAGE_USERS",
    PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
    PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
    PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone =
  {
    TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
    TimezoneUtc: "TIMEZONE_UTC",
    TimezoneEst: "TIMEZONE_EST",
    TimezoneCst: "TIMEZONE_CST",
    TimezoneMst: "TIMEZONE_MST",
    TimezonePst: "TIMEZONE_PST",
    TimezoneGmt: "TIMEZONE_GMT",
    TimezoneCet: "TIMEZONE_CET",
    TimezoneIst: "TIMEZONE_IST",
    TimezoneJst: "TIMEZONE_JST",
    TimezoneAest: "TIMEZONE_AEST",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads
    >
    | undefined;
  url?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents =
  {
    TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
    TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
    TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
    TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
    TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
    TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
    TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
    TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
    TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
    TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
    TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields =
  {
    IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
    IncludedFieldName: "INCLUDED_FIELD_NAME",
    IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
    IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
    IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
    IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
    IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
    IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
    IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
    IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
    IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
    IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
    IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
    IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
    IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
    IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
    IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
    IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
    IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
    IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
    IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
    IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
    IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
    IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
    IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
    IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
    IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
    IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
    IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
    IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
    IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat =
  {
    PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
    PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
    PayloadFormatXml: "PAYLOAD_FORMAT_XML",
    PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
    PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
    PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata =
  {};

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
      >
      | undefined;
    includedFields?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
      >
      | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
      | undefined;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    lastTriggeredAt?: Date | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata
      | undefined;
    webhookName?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType =
  {
    WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
    WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
    WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
    WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    workflows?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: Date | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys
      >
      | undefined;
    webhooks?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks
      >
      | undefined;
    workspaceType?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
      | undefined;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: Date | undefined;
    createdAt?: Date | undefined;
    accountStatus?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
      | undefined;
    roles?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles>
      | undefined;
    permissions?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
      >
      | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: Date | undefined;
    timezone?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
      | undefined;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces
      >
      | undefined;
    settings?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings
      | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes =
  {
    TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
    TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
    TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
    TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
    TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
    TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
    TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
    TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
    TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
    TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
    TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
    TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
    TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
    TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
    TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
    TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
    TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
    TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
      | undefined;
    scopes?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes>
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    description?: string | undefined;
    apiBaseUrl?: string | undefined;
    environmentVariables?: { [k: string]: string } | undefined;
    allowedOrigins?: Array<string> | undefined;
    storageQuota?: string | undefined;
    monthlyRequestLimit?: string | undefined;
    maxConcurrentJobs?: number | undefined;
    enableCaching?: boolean | undefined;
    enableRateLimiting?: boolean | undefined;
    enableRequestLogging?: boolean | undefined;
    accounts?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys
      >
      | undefined;
    totalRequests?: string | undefined;
    totalStorageUsed?: string | undefined;
    averageResponseTime?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
      | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier =
  {
    PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
    PlanTierFree: "PLAN_TIER_FREE",
    PlanTierStarter: "PLAN_TIER_STARTER",
    PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
    PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode =
  {
    BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
    BillingModeLicensed: "BILLING_MODE_LICENSED",
    BillingModeMetered: "BILLING_MODE_METERED",
    BillingModeHybrid: "BILLING_MODE_HYBRID",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval =
  {
    IntervalUnspecified: "INTERVAL_UNSPECIFIED",
    IntervalMonthly: "INTERVAL_MONTHLY",
    IntervalYearly: "INTERVAL_YEARLY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus =
  {
    PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
    PaymentStatusPaid: "PAYMENT_STATUS_PAID",
    PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
    PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
    PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier
      | undefined;
    billingMode?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode
      | undefined;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: Date | undefined;
    currentPeriodEnd?: Date | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval
      | undefined;
    autoRenew?: boolean | undefined;
    paymentStatus?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus
      | undefined;
    isTrial?: boolean | undefined;
    trialStart?: Date | undefined;
    trialEnd?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    canceledAt?: Date | undefined;
    endedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    website?: string | undefined;
    description?: string | undefined;
    billingEmail?: string | undefined;
    technicalEmail?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    ssoEnabled?: boolean | undefined;
    ssoProvider?: string | undefined;
    ssoDomain?: string | undefined;
    allowedDomains?: Array<string> | undefined;
    enforce2fa?: boolean | undefined;
    billingPlan?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan
      | undefined;
    billingCurrency?: string | undefined;
    autoBilling?: boolean | undefined;
    taxId?: string | undefined;
    complianceFrameworks?: Array<string> | undefined;
    dataProcessingAgreement?: boolean | undefined;
    dataRegion?: string | undefined;
    maxTenants?: number | undefined;
    totalStorageLimit?: string | undefined;
    maxApiKeys?: number | undefined;
    maxUsers?: number | undefined;
    tenants?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants
      >
      | undefined;
    subscriptions?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    createdBy?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
      | undefined;
  };

/**
 * Updates the configuration of a specific organization
 */
export type PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody = {
  organization?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization
    | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > = PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationRoles);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    PutApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationRoles$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationPermissions);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationTimezone);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationStatus> =
    z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationStatus);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationStatus> =
    PutApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationLang> = z
    .nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationLang);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationLang> =
    PutApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationDay> = z
    .nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationDay);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationDay> =
    PutApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: PutApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours
  > = z.object({
    id: z.string().optional(),
    day: PutApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationRegularHours),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationSpecialHours),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationReviews,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationLeads,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PutApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PutApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationJobs,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status: PutApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status: PutApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWorkflowsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationWorkflows:
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationWorkflows),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > = PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > = PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound =
  {};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationMetadataToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationMetadata:
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationMetadata,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWebhooksToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationWebhooks:
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > = PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound>
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound>
      | undefined;
    webhooks?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound>
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWorkspacesToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationWorkspaces:
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationWorkspaces),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationSettings$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSettingsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationSettings:
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationSettings,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationSettings' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound>
    | undefined;
  settings?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound
    | undefined;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationAccountsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationAccounts:
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationAccounts,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationAccounts' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationScopes> =
    z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationScopes);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema:
  z.ZodNativeEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationScopes> =
    PutApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound>
    | undefined;
  apiKeys?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationTenants$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationTenantsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationTenants:
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema.parse(
      putApiLeadScraperMicroserviceApiV1OrganizationTenants,
    ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationTenants' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > = PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    canceledAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier: string;
    billingMode: string;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval: string;
    autoRenew?: boolean | undefined;
    paymentStatus: string;
    isTrial?: boolean | undefined;
    trialStart?: string | undefined;
    trialEnd?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    canceledAt?: string | undefined;
    endedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PutApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    endedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationSubscriptions:
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationSubscriptions),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
    ).optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdBy: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    website?: string | undefined;
    description?: string | undefined;
    billingEmail?: string | undefined;
    technicalEmail?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    ssoEnabled?: boolean | undefined;
    ssoProvider?: string | undefined;
    ssoDomain?: string | undefined;
    allowedDomains?: Array<string> | undefined;
    enforce2fa?: boolean | undefined;
    billingPlan: string;
    billingCurrency?: string | undefined;
    autoBilling?: boolean | undefined;
    taxId?: string | undefined;
    complianceFrameworks?: Array<string> | undefined;
    dataProcessingAgreement?: boolean | undefined;
    dataRegion?: string | undefined;
    maxTenants?: number | undefined;
    totalStorageLimit?: string | undefined;
    maxApiKeys?: number | undefined;
    maxUsers?: number | undefined;
    tenants?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound>
      | undefined;
    subscriptions?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound
      | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    createdBy?: string | undefined;
    status: string;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PutApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
    ).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdBy: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganization:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationOrganization),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganization,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganization' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound =
  {
    organization?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody
  > = z.object({
    organization: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationRequestBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationRequestBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationRequestBody),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200LeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200LeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflowsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound =
  {};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadataToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooksToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound
      >
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspacesToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettingsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$Outbound =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: string | undefined;
    createdAt?: string | undefined;
    accountStatus: string;
    roles?: Array<string> | undefined;
    permissions?: Array<string> | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: string | undefined;
    timezone: string;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound
      >
      | undefined;
    settings?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    description?: string | undefined;
    apiBaseUrl?: string | undefined;
    environmentVariables?: { [k: string]: string } | undefined;
    allowedOrigins?: Array<string> | undefined;
    storageQuota?: string | undefined;
    monthlyRequestLimit?: string | undefined;
    maxConcurrentJobs?: number | undefined;
    enableCaching?: boolean | undefined;
    enableRateLimiting?: boolean | undefined;
    enableRequestLogging?: boolean | undefined;
    accounts?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound
      >
      | undefined;
    totalRequests?: string | undefined;
    totalStorageUsed?: string | undefined;
    averageResponseTime?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    status: string;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenantsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$inboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$inboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$inboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$inboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    canceledAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$Outbound =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier: string;
    billingMode: string;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval: string;
    autoRenew?: boolean | undefined;
    paymentStatus: string;
    isTrial?: boolean | undefined;
    trialStart?: string | undefined;
    trialEnd?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    canceledAt?: string | undefined;
    endedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPlanTier$outboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingMode$outboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingInterval$outboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPaymentStatus$outboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    endedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptionsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$inboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$inboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$inboundSchema
    ).optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdBy: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    website?: string | undefined;
    description?: string | undefined;
    billingEmail?: string | undefined;
    technicalEmail?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    ssoEnabled?: boolean | undefined;
    ssoProvider?: string | undefined;
    ssoDomain?: string | undefined;
    allowedDomains?: Array<string> | undefined;
    enforce2fa?: boolean | undefined;
    billingPlan: string;
    billingCurrency?: string | undefined;
    autoBilling?: boolean | undefined;
    taxId?: string | undefined;
    complianceFrameworks?: Array<string> | undefined;
    dataProcessingAgreement?: boolean | undefined;
    dataRegion?: string | undefined;
    maxTenants?: number | undefined;
    totalStorageLimit?: string | undefined;
    maxApiKeys?: number | undefined;
    maxUsers?: number | undefined;
    tenants?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$Outbound
      >
      | undefined;
    subscriptions?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$Outbound
      | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    createdBy?: string | undefined;
    status: string;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsBillingPlan$outboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTenants$outboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSubscriptions$outboundSchema
    ).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdBy: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganizationToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization:
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganizationFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound =
  {
    organization?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody
  > = z.object({
    organization: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOrganization$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationResponseBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationResponseBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationResponseBody),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationResponseBody' from JSON`,
  );
}
