/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1AccountsIdRequest = {
  id: string;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdRoles = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRoles
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsIdStatus
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours = {
  id?: string | undefined;
  day?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours = {
  id?: string | undefined;
  day?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat>;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1AccountsIdStatus | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1AccountsIdJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsIdLang
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsIdDay
>;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1AccountsIdDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay>;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1AccountsIdLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?: Array<GetApiLeadScraperMicroserviceApiV1AccountsIdLeads> | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields>;

export const GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat>;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata = {};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents>
    | undefined;
  includedFields?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata | undefined;
  webhookName?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType>;

export type GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks>
    | undefined;
  workspaceType?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccount = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus
    | undefined;
  roles?: Array<GetApiLeadScraperMicroserviceApiV1AccountsIdRoles> | undefined;
  permissions?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces>
    | undefined;
  settings?: GetApiLeadScraperMicroserviceApiV1AccountsIdSettings | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsIdData = {
  account?: GetApiLeadScraperMicroserviceApiV1AccountsIdAccount | undefined;
};

/**
 * Retrieves details of a specific account
 */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1AccountsIdData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$Outbound = {
  id: string;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest
  > = z.object({
    id: z.string(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdRequestToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdRequest:
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdRequest,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRoles> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdRoles);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRoles> =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone> =
    GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdStatus> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdStatus> =
    GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours:
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews:
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads:
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponse200Status$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdJobsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdJobs:
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status: GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$inboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status: GetApiLeadScraperMicroserviceApiV1AccountsIdStatus$outboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsIdOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdWorkflows:
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdWorkflows,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdLang> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdLang> =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsIdDay> =
    GetApiLeadScraperMicroserviceApiV1AccountsIdDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsIdDay$inboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsIdDay$outboundSchema.default(
      "DAY_OF_WEEK_UNSPECIFIED",
    ),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdRegularHours:
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours:
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdReviews:
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdReviews,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsIdRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdLeads:
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1AccountsIdLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$Outbound>
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1AccountsIdLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdApiKeys:
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdApiKeys,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$Outbound = {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdMetadata:
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdMetadata,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsIdPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdWebhooks:
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdWebhooks,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType
  > = GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$Outbound>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: string | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$Outbound>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$Outbound>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$Outbound>
    | undefined;
  workspaceType: string;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces:
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdSettingsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdSettings:
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdSettings,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdSettings' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone: GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$inboundSchema
      .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$Outbound>
    | undefined;
  settings?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$Outbound
    | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsIdPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1AccountsIdTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsIdWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdAccount:
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdAccount,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdAccountFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdAccount,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdAccount' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdData$Outbound = {
  account?:
    | GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$Outbound
    | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdData
  > = z.object({
    account: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdAccount$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdDataToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdData:
    GetApiLeadScraperMicroserviceApiV1AccountsIdData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsIdData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$Outbound =
  {
    data: GetApiLeadScraperMicroserviceApiV1AccountsIdData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsIdResponseBody:
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsIdResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsIdResponseBody' from JSON`,
  );
}
