/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1AccountsListRequest = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
  filter?: string | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListRoles = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsListRoles
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListPermissions =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListPermissions>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListTimezone = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsListTimezone
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsListStatus
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsListJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat>;

export type GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1AccountsListStatus | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<GetApiLeadScraperMicroserviceApiV1AccountsListJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsListLang
>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1AccountsListDay
>;

export type GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1AccountsListDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay>;

export type GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsListReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange>;

export const GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1AccountsListLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields
  >;

export const GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListMetadata = {};

export type GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents>
    | undefined;
  includedFields?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: GetApiLeadScraperMicroserviceApiV1AccountsListMetadata | undefined;
  webhookName?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType
  >;

export type GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys>
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks>
    | undefined;
  workspaceType?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsListSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1AccountsListAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus
    | undefined;
  roles?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListRoles>
    | undefined;
  permissions?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: GetApiLeadScraperMicroserviceApiV1AccountsListTimezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces>
    | undefined;
  settings?: GetApiLeadScraperMicroserviceApiV1AccountsListSettings | undefined;
};

export type Data = {
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccounts>
    | undefined;
  nextPageNumber?: number | undefined;
};

/**
 * Retrieves a list of accounts
 */
export type GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody = {
  data: Data;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    filter: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListRequest$Outbound = {
  pageSize?: number | undefined;
  pageNumber?: number | undefined;
  filter?: string | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest
  > = z.object({
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
    filter: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListRequestToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListRequest:
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListRequest$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListRequest,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus
  > = GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRoles$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListRoles> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListRoles);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRoles$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListRoles> =
    GetApiLeadScraperMicroserviceApiV1AccountsListRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListRoles$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRoles$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRoles$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRoles$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRoles$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListPermissions
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListPermissions);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListPermissions
  > = GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListTimezone
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListTimezone);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListTimezone
  > = GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListStatus> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListStatus> =
    GetApiLeadScraperMicroserviceApiV1AccountsListStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang
  > = GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours:
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews:
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads:
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$Outbound
    >
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponse200Status$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccountsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListJobsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListJobs:
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat
  > = GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status: GetApiLeadScraperMicroserviceApiV1AccountsListStatus$inboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status: GetApiLeadScraperMicroserviceApiV1AccountsListStatus$outboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsListOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListWorkflows:
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListWorkflows),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListLang> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListLang> =
    GetApiLeadScraperMicroserviceApiV1AccountsListLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListDay> = z
    .nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1AccountsListDay> =
    GetApiLeadScraperMicroserviceApiV1AccountsListDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsListDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsListDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListRegularHours:
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay
  > = GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListSpecialHours:
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListReviews:
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListReviews$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListReviews,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange
  > = GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1AccountsListRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListLeads:
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1AccountsListLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<GetApiLeadScraperMicroserviceApiV1AccountsListLeads$Outbound>
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1AccountsListLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListApiKeys:
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListApiKeys,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents
  > = GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields
  > =
    GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat
  > = GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$Outbound =
  {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListMetadata:
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListMetadata,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1AccountsListPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsListMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListWebhooks:
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListWebhooks,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType
  > = GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$Outbound>
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$Outbound>
      | undefined;
    webhooks?:
      | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$Outbound>
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListWorkspaces:
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListWorkspaces),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListSettings$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListSettings$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListSettings$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSettings$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSettings$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListSettings$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListSettingsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListSettings:
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListSettings$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListSettings,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListSettings' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsListSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$Outbound>
    | undefined;
  settings?:
    | GetApiLeadScraperMicroserviceApiV1AccountsListSettings$Outbound
    | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1AccountsListAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1AccountsListPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1AccountsListTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1AccountsListSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListAccounts:
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1AccountsListAccounts,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListAccounts' from JSON`,
  );
}

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z
  .object({
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$inboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/** @internal */
export type Data$Outbound = {
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$Outbound>
    | undefined;
  nextPageNumber?: number | undefined;
};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> =
  z.object({
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1AccountsListAccounts$outboundSchema
      ),
    ).optional(),
    nextPageNumber: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
  /** @deprecated use `Data$inboundSchema` instead. */
  export const inboundSchema = Data$inboundSchema;
  /** @deprecated use `Data$outboundSchema` instead. */
  export const outboundSchema = Data$outboundSchema;
  /** @deprecated use `Data$Outbound` instead. */
  export type Outbound = Data$Outbound;
}

export function dataToJSON(data: Data): string {
  return JSON.stringify(Data$outboundSchema.parse(data));
}

export function dataFromJSON(
  jsonString: string,
): SafeParseResult<Data, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Data$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Data' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() => Data$inboundSchema),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$Outbound =
  {
    data: Data$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody
  > = z.object({
    data: z.lazy(() => Data$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1AccountsListResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1AccountsListResponseBody:
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1AccountsListResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1AccountsListResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1AccountsListResponseBody' from JSON`,
  );
}
