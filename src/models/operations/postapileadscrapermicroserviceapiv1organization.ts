/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const BillingPlan = {
  BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
  BillingPlanStartup: "BILLING_PLAN_STARTUP",
  BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
  BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
} as const;
export type BillingPlan = ClosedEnum<typeof BillingPlan>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationRoles = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1OrganizationRoles
>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationPermissions =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationPermissions>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationTimezone =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationTimezone>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationStatus = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1OrganizationStatus
>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationLang = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1OrganizationLang
>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationDay = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1OrganizationDay
>;

export type PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours = {
  id?: string | undefined;
  day?: PostApiLeadScraperMicroserviceApiV1OrganizationDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours = {
  id?: string | undefined;
  day?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1OrganizationReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours>
    | undefined;
  specialHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1OrganizationJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PostApiLeadScraperMicroserviceApiV1OrganizationLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationLeads>
    | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: PostApiLeadScraperMicroserviceApiV1OrganizationStatus | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<PostApiLeadScraperMicroserviceApiV1OrganizationJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads>
    | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationMetadata = {};

export type PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents>
    | undefined;
  includedFields?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationMetadata
    | undefined;
  webhookName?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys>
    | undefined;
  webhooks?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks>
    | undefined;
  workspaceType?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1OrganizationSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type Accounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
    | undefined;
  roles?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationRoles>
    | undefined;
  permissions?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationTimezone
    | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces>
    | undefined;
  settings?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationSettings
    | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  >;

export const Scopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type Scopes = ClosedEnum<typeof Scopes>;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
      | undefined;
    scopes?: Array<Scopes> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  >;

export type Tenants = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?: Array<Accounts> | undefined;
  apiKeys?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
    | undefined;
};

export const PlanTier = {
  PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
  PlanTierFree: "PLAN_TIER_FREE",
  PlanTierStarter: "PLAN_TIER_STARTER",
  PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
  PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
} as const;
export type PlanTier = ClosedEnum<typeof PlanTier>;

export const BillingMode = {
  BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
  BillingModeLicensed: "BILLING_MODE_LICENSED",
  BillingModeMetered: "BILLING_MODE_METERED",
  BillingModeHybrid: "BILLING_MODE_HYBRID",
} as const;
export type BillingMode = ClosedEnum<typeof BillingMode>;

export const BillingInterval = {
  IntervalUnspecified: "INTERVAL_UNSPECIFIED",
  IntervalMonthly: "INTERVAL_MONTHLY",
  IntervalYearly: "INTERVAL_YEARLY",
} as const;
export type BillingInterval = ClosedEnum<typeof BillingInterval>;

export const PaymentStatus = {
  PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
  PaymentStatusPaid: "PAYMENT_STATUS_PAID",
  PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
  PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
  PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
} as const;
export type PaymentStatus = ClosedEnum<typeof PaymentStatus>;

export type Subscriptions = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier?: PlanTier | undefined;
  billingMode?: BillingMode | undefined;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: Date | undefined;
  currentPeriodEnd?: Date | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval?: BillingInterval | undefined;
  autoRenew?: boolean | undefined;
  paymentStatus?: PaymentStatus | undefined;
  isTrial?: boolean | undefined;
  trialStart?: Date | undefined;
  trialEnd?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  canceledAt?: Date | undefined;
  endedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1 =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1 =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  >;

export type Organization = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan?: BillingPlan | undefined;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?: Array<Tenants> | undefined;
  subscriptions?: Subscriptions | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  createdBy?: string | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
    | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody = {
  organization?: Organization | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan = {
  BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
  BillingPlanStartup: "BILLING_PLAN_STARTUP",
  BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
  BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus =
  {
    AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
    AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
    AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
    AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles =
  {
    RoleUnspecified: "ROLE_UNSPECIFIED",
    RoleAdmin: "ROLE_ADMIN",
    RoleUser: "ROLE_USER",
    RoleViewer: "ROLE_VIEWER",
    RoleManager: "ROLE_MANAGER",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions =
  {
    PermissionUnspecified: "PERMISSION_UNSPECIFIED",
    PermissionRead: "PERMISSION_READ",
    PermissionWrite: "PERMISSION_WRITE",
    PermissionDelete: "PERMISSION_DELETE",
    PermissionManageUsers: "PERMISSION_MANAGE_USERS",
    PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
    PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
    PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone =
  {
    TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
    TimezoneUtc: "TIMEZONE_UTC",
    TimezoneEst: "TIMEZONE_EST",
    TimezoneCst: "TIMEZONE_CST",
    TimezoneMst: "TIMEZONE_MST",
    TimezonePst: "TIMEZONE_PST",
    TimezoneGmt: "TIMEZONE_GMT",
    TimezoneCet: "TIMEZONE_CET",
    TimezoneIst: "TIMEZONE_IST",
    TimezoneJst: "TIMEZONE_JST",
    TimezoneAest: "TIMEZONE_AEST",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads
    >
    | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents =
  {
    TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
    TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
    TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
    TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
    TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
    TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
    TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
    TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
    TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
    TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
    TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields =
  {
    IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
    IncludedFieldName: "INCLUDED_FIELD_NAME",
    IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
    IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
    IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
    IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
    IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
    IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
    IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
    IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
    IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
    IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
    IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
    IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
    IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
    IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
    IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
    IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
    IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
    IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
    IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
    IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
    IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
    IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
    IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
    IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
    IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
    IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
    IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
    IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
    IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat =
  {
    PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
    PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
    PayloadFormatXml: "PAYLOAD_FORMAT_XML",
    PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
    PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
    PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata =
  {};

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
      >
      | undefined;
    includedFields?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
      >
      | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
      | undefined;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    lastTriggeredAt?: Date | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata
      | undefined;
    webhookName?: string | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType =
  {
    WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
    WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
    WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
    WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    workflows?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: Date | undefined;
    scrapingJobs?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs
      >
      | undefined;
    apiKeys?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys
      >
      | undefined;
    webhooks?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks
      >
      | undefined;
    workspaceType?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
      | undefined;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1OrganizationAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
    | undefined;
  roles?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles>
    | undefined;
  permissions?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
    >
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
    | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces
    >
    | undefined;
  settings?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings
    | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationScopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationScopes = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1OrganizationScopes
>;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
      | undefined;
    scopes?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationScopes>
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationTenants = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationAccounts>
    | undefined;
  apiKeys?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
    | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier = {
  PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
  PlanTierFree: "PLAN_TIER_FREE",
  PlanTierStarter: "PLAN_TIER_STARTER",
  PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
  PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode = {
  BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
  BillingModeLicensed: "BILLING_MODE_LICENSED",
  BillingModeMetered: "BILLING_MODE_METERED",
  BillingModeHybrid: "BILLING_MODE_HYBRID",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode>;

export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval = {
  IntervalUnspecified: "INTERVAL_UNSPECIFIED",
  IntervalMonthly: "INTERVAL_MONTHLY",
  IntervalYearly: "INTERVAL_YEARLY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  >;

export const PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus = {
  PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
  PaymentStatusPaid: "PAYMENT_STATUS_PAID",
  PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
  PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
  PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
} as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier
    | undefined;
  billingMode?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode
    | undefined;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: Date | undefined;
  currentPeriodEnd?: Date | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
    | undefined;
  autoRenew?: boolean | undefined;
  paymentStatus?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
    | undefined;
  isTrial?: boolean | undefined;
  trialStart?: Date | undefined;
  trialEnd?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  canceledAt?: Date | undefined;
  endedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  >;

export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganization = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
    | undefined;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationTenants>
    | undefined;
  subscriptions?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  createdBy?: string | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
    | undefined;
};

/**
 * Creates a new organization within a tenant
 */
export type PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody = {
  organization?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganization
    | undefined;
};

/** @internal */
export const BillingPlan$inboundSchema: z.ZodNativeEnum<typeof BillingPlan> = z
  .nativeEnum(BillingPlan);

/** @internal */
export const BillingPlan$outboundSchema: z.ZodNativeEnum<typeof BillingPlan> =
  BillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillingPlan$ {
  /** @deprecated use `BillingPlan$inboundSchema` instead. */
  export const inboundSchema = BillingPlan$inboundSchema;
  /** @deprecated use `BillingPlan$outboundSchema` instead. */
  export const outboundSchema = BillingPlan$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationRoles);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationRoles> =
    PostApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationRoles$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationPermissions);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPermissions
  > = PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationTimezone);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationTimezone
  > = PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationStatus
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationStatus);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationStatus
  > = PostApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationLang> =
    z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationLang);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationLang> =
    PostApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationDay> = z
    .nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationDay);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1OrganizationDay> =
    PostApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: PostApiLeadScraperMicroserviceApiV1OrganizationDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours
  > = z.object({
    id: z.string().optional(),
    day: PostApiLeadScraperMicroserviceApiV1OrganizationDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationRegularHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationRegularHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationSpecialHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationSpecialHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationReviews:
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1OrganizationReviews,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange
  > = PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$Outbound
    >
    | undefined;
  specialHours?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$Outbound
    >
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationLeads:
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1OrganizationLeads,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationLeads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PostApiLeadScraperMicroserviceApiV1OrganizationLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PostApiLeadScraperMicroserviceApiV1OrganizationLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationJobsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationJobs:
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1OrganizationJobs,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat
  > = PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status: PostApiLeadScraperMicroserviceApiV1OrganizationStatus$inboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationJobs$Outbound>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status: PostApiLeadScraperMicroserviceApiV1OrganizationStatus$outboundSchema
      .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWorkflowsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationWorkflows:
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationWorkflows),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs:
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationApiKeysToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationApiKeys:
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound =
  {};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationMetadataToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationMetadata:
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationMetadata),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationMetadata' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWebhooksToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationWebhooks:
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationWebhooks),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$Outbound>
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$Outbound>
      | undefined;
    webhooks?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$Outbound>
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWorkspacesToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationWorkspaces:
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationWorkspaces),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationSettings$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSettingsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationSettings:
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationSettings),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationSettings' from JSON`,
  );
}

/** @internal */
export const Accounts$inboundSchema: z.ZodType<
  Accounts,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  authPlatformUserId: z.string().optional(),
  email: z.string().optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  accountStatus:
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$inboundSchema
      .default("ACCOUNT_STATUS_UNSPECIFIED"),
  roles: z.array(
    PostApiLeadScraperMicroserviceApiV1OrganizationRoles$inboundSchema,
  ).optional(),
  permissions: z.array(
    PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$inboundSchema,
  ).optional(),
  mfaEnabled: z.boolean().optional(),
  lastLoginAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  timezone:
    PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$inboundSchema
      .default("TIMEZONE_UNSPECIFIED"),
  totalJobsRun: z.number().int().optional(),
  monthlyJobLimit: z.number().int().optional(),
  concurrentJobLimit: z.number().int().optional(),
  workspaces: z.array(
    z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$inboundSchema
    ),
  ).optional(),
  settings: z.lazy(() =>
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$inboundSchema
  ).optional(),
});

/** @internal */
export type Accounts$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$Outbound>
    | undefined;
  settings?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationSettings$Outbound
    | undefined;
};

/** @internal */
export const Accounts$outboundSchema: z.ZodType<
  Accounts$Outbound,
  z.ZodTypeDef,
  Accounts
> = z.object({
  id: z.string().optional(),
  authPlatformUserId: z.string().optional(),
  email: z.string().optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  accountStatus:
    PostApiLeadScraperMicroserviceApiV1OrganizationAccountStatus$outboundSchema
      .default("ACCOUNT_STATUS_UNSPECIFIED"),
  roles: z.array(
    PostApiLeadScraperMicroserviceApiV1OrganizationRoles$outboundSchema,
  ).optional(),
  permissions: z.array(
    PostApiLeadScraperMicroserviceApiV1OrganizationPermissions$outboundSchema,
  ).optional(),
  mfaEnabled: z.boolean().optional(),
  lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
  timezone:
    PostApiLeadScraperMicroserviceApiV1OrganizationTimezone$outboundSchema
      .default("TIMEZONE_UNSPECIFIED"),
  totalJobsRun: z.number().int().optional(),
  monthlyJobLimit: z.number().int().optional(),
  concurrentJobLimit: z.number().int().optional(),
  workspaces: z.array(
    z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationWorkspaces$outboundSchema
    ),
  ).optional(),
  settings: z.lazy(() =>
    PostApiLeadScraperMicroserviceApiV1OrganizationSettings$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Accounts$ {
  /** @deprecated use `Accounts$inboundSchema` instead. */
  export const inboundSchema = Accounts$inboundSchema;
  /** @deprecated use `Accounts$outboundSchema` instead. */
  export const outboundSchema = Accounts$outboundSchema;
  /** @deprecated use `Accounts$Outbound` instead. */
  export type Outbound = Accounts$Outbound;
}

export function accountsToJSON(accounts: Accounts): string {
  return JSON.stringify(Accounts$outboundSchema.parse(accounts));
}

export function accountsFromJSON(
  jsonString: string,
): SafeParseResult<Accounts, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Accounts$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Accounts' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema;
}

/** @internal */
export const Scopes$inboundSchema: z.ZodNativeEnum<typeof Scopes> = z
  .nativeEnum(Scopes);

/** @internal */
export const Scopes$outboundSchema: z.ZodNativeEnum<typeof Scopes> =
  Scopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Scopes$ {
  /** @deprecated use `Scopes$inboundSchema` instead. */
  export const inboundSchema = Scopes$inboundSchema;
  /** @deprecated use `Scopes$outboundSchema` instead. */
  export const outboundSchema = Scopes$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(Scopes$inboundSchema).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(Scopes$outboundSchema).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema;
}

/** @internal */
export const Tenants$inboundSchema: z.ZodType<Tenants, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(z.lazy(() => Accounts$inboundSchema)).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type Tenants$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?: Array<Accounts$Outbound> | undefined;
  apiKeys?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$Outbound
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const Tenants$outboundSchema: z.ZodType<
  Tenants$Outbound,
  z.ZodTypeDef,
  Tenants
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  description: z.string().optional(),
  apiBaseUrl: z.string().optional(),
  environmentVariables: z.record(z.string()).optional(),
  allowedOrigins: z.array(z.string()).optional(),
  storageQuota: z.string().optional(),
  monthlyRequestLimit: z.string().optional(),
  maxConcurrentJobs: z.number().int().optional(),
  enableCaching: z.boolean().optional(),
  enableRateLimiting: z.boolean().optional(),
  enableRequestLogging: z.boolean().optional(),
  accounts: z.array(z.lazy(() => Accounts$outboundSchema)).optional(),
  apiKeys: z.array(
    z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsApiKeys$outboundSchema
    ),
  ).optional(),
  totalRequests: z.string().optional(),
  totalStorageUsed: z.string().optional(),
  averageResponseTime: z.number().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationTenantsStatus$outboundSchema
      .default("STATUS_UNSPECIFIED"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tenants$ {
  /** @deprecated use `Tenants$inboundSchema` instead. */
  export const inboundSchema = Tenants$inboundSchema;
  /** @deprecated use `Tenants$outboundSchema` instead. */
  export const outboundSchema = Tenants$outboundSchema;
  /** @deprecated use `Tenants$Outbound` instead. */
  export type Outbound = Tenants$Outbound;
}

export function tenantsToJSON(tenants: Tenants): string {
  return JSON.stringify(Tenants$outboundSchema.parse(tenants));
}

export function tenantsFromJSON(
  jsonString: string,
): SafeParseResult<Tenants, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Tenants$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Tenants' from JSON`,
  );
}

/** @internal */
export const PlanTier$inboundSchema: z.ZodNativeEnum<typeof PlanTier> = z
  .nativeEnum(PlanTier);

/** @internal */
export const PlanTier$outboundSchema: z.ZodNativeEnum<typeof PlanTier> =
  PlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlanTier$ {
  /** @deprecated use `PlanTier$inboundSchema` instead. */
  export const inboundSchema = PlanTier$inboundSchema;
  /** @deprecated use `PlanTier$outboundSchema` instead. */
  export const outboundSchema = PlanTier$outboundSchema;
}

/** @internal */
export const BillingMode$inboundSchema: z.ZodNativeEnum<typeof BillingMode> = z
  .nativeEnum(BillingMode);

/** @internal */
export const BillingMode$outboundSchema: z.ZodNativeEnum<typeof BillingMode> =
  BillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillingMode$ {
  /** @deprecated use `BillingMode$inboundSchema` instead. */
  export const inboundSchema = BillingMode$inboundSchema;
  /** @deprecated use `BillingMode$outboundSchema` instead. */
  export const outboundSchema = BillingMode$outboundSchema;
}

/** @internal */
export const BillingInterval$inboundSchema: z.ZodNativeEnum<
  typeof BillingInterval
> = z.nativeEnum(BillingInterval);

/** @internal */
export const BillingInterval$outboundSchema: z.ZodNativeEnum<
  typeof BillingInterval
> = BillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillingInterval$ {
  /** @deprecated use `BillingInterval$inboundSchema` instead. */
  export const inboundSchema = BillingInterval$inboundSchema;
  /** @deprecated use `BillingInterval$outboundSchema` instead. */
  export const outboundSchema = BillingInterval$outboundSchema;
}

/** @internal */
export const PaymentStatus$inboundSchema: z.ZodNativeEnum<
  typeof PaymentStatus
> = z.nativeEnum(PaymentStatus);

/** @internal */
export const PaymentStatus$outboundSchema: z.ZodNativeEnum<
  typeof PaymentStatus
> = PaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentStatus$ {
  /** @deprecated use `PaymentStatus$inboundSchema` instead. */
  export const inboundSchema = PaymentStatus$inboundSchema;
  /** @deprecated use `PaymentStatus$outboundSchema` instead. */
  export const outboundSchema = PaymentStatus$outboundSchema;
}

/** @internal */
export const Subscriptions$inboundSchema: z.ZodType<
  Subscriptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  stripeCustomerId: z.string().optional(),
  stripeSubscriptionId: z.string().optional(),
  stripePriceId: z.string().optional(),
  stripeProductId: z.string().optional(),
  planTier: PlanTier$inboundSchema.default("PLAN_TIER_UNSPECIFIED"),
  billingMode: BillingMode$inboundSchema.default("BILLING_MODE_UNSPECIFIED"),
  includedJobs: z.number().int().optional(),
  perJobRate: z.number().optional(),
  maxConcurrentJobs: z.number().int().optional(),
  includedStorage: z.string().optional(),
  perGbRate: z.number().optional(),
  advancedFilteringEnabled: z.boolean().optional(),
  prioritySupportEnabled: z.boolean().optional(),
  customExportsEnabled: z.boolean().optional(),
  apiAccessEnabled: z.boolean().optional(),
  customProxiesEnabled: z.boolean().optional(),
  advancedAnalyticsEnabled: z.boolean().optional(),
  retentionDays: z.number().int().optional(),
  maxResultsPerJob: z.number().int().optional(),
  currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  currentPeriodUsage: z.number().optional(),
  currency: z.string().optional(),
  basePrice: z.number().optional(),
  billingInterval: BillingInterval$inboundSchema.default(
    "INTERVAL_UNSPECIFIED",
  ),
  autoRenew: z.boolean().optional(),
  paymentStatus: PaymentStatus$inboundSchema.default(
    "PAYMENT_STATUS_UNSPECIFIED",
  ),
  isTrial: z.boolean().optional(),
  trialStart: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  canceledAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type Subscriptions$Outbound = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier: string;
  billingMode: string;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: string | undefined;
  currentPeriodEnd?: string | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval: string;
  autoRenew?: boolean | undefined;
  paymentStatus: string;
  isTrial?: boolean | undefined;
  trialStart?: string | undefined;
  trialEnd?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  canceledAt?: string | undefined;
  endedAt?: string | undefined;
};

/** @internal */
export const Subscriptions$outboundSchema: z.ZodType<
  Subscriptions$Outbound,
  z.ZodTypeDef,
  Subscriptions
> = z.object({
  id: z.string().optional(),
  stripeCustomerId: z.string().optional(),
  stripeSubscriptionId: z.string().optional(),
  stripePriceId: z.string().optional(),
  stripeProductId: z.string().optional(),
  planTier: PlanTier$outboundSchema.default("PLAN_TIER_UNSPECIFIED"),
  billingMode: BillingMode$outboundSchema.default("BILLING_MODE_UNSPECIFIED"),
  includedJobs: z.number().int().optional(),
  perJobRate: z.number().optional(),
  maxConcurrentJobs: z.number().int().optional(),
  includedStorage: z.string().optional(),
  perGbRate: z.number().optional(),
  advancedFilteringEnabled: z.boolean().optional(),
  prioritySupportEnabled: z.boolean().optional(),
  customExportsEnabled: z.boolean().optional(),
  apiAccessEnabled: z.boolean().optional(),
  customProxiesEnabled: z.boolean().optional(),
  advancedAnalyticsEnabled: z.boolean().optional(),
  retentionDays: z.number().int().optional(),
  maxResultsPerJob: z.number().int().optional(),
  currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
  currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
  currentPeriodUsage: z.number().optional(),
  currency: z.string().optional(),
  basePrice: z.number().optional(),
  billingInterval: BillingInterval$outboundSchema.default(
    "INTERVAL_UNSPECIFIED",
  ),
  autoRenew: z.boolean().optional(),
  paymentStatus: PaymentStatus$outboundSchema.default(
    "PAYMENT_STATUS_UNSPECIFIED",
  ),
  isTrial: z.boolean().optional(),
  trialStart: z.date().transform(v => v.toISOString()).optional(),
  trialEnd: z.date().transform(v => v.toISOString()).optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  canceledAt: z.date().transform(v => v.toISOString()).optional(),
  endedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Subscriptions$ {
  /** @deprecated use `Subscriptions$inboundSchema` instead. */
  export const inboundSchema = Subscriptions$inboundSchema;
  /** @deprecated use `Subscriptions$outboundSchema` instead. */
  export const outboundSchema = Subscriptions$outboundSchema;
  /** @deprecated use `Subscriptions$Outbound` instead. */
  export type Outbound = Subscriptions$Outbound;
}

export function subscriptionsToJSON(subscriptions: Subscriptions): string {
  return JSON.stringify(Subscriptions$outboundSchema.parse(subscriptions));
}

export function subscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<Subscriptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Subscriptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Subscriptions' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema;
}

/** @internal */
export const Organization$inboundSchema: z.ZodType<
  Organization,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  website: z.string().optional(),
  description: z.string().optional(),
  billingEmail: z.string().optional(),
  technicalEmail: z.string().optional(),
  phone: z.string().optional(),
  address: z.string().optional(),
  ssoEnabled: z.boolean().optional(),
  ssoProvider: z.string().optional(),
  ssoDomain: z.string().optional(),
  allowedDomains: z.array(z.string()).optional(),
  enforce2fa: z.boolean().optional(),
  billingPlan: BillingPlan$inboundSchema.default("BILLING_PLAN_UNSPECIFIED"),
  billingCurrency: z.string().optional(),
  autoBilling: z.boolean().optional(),
  taxId: z.string().optional(),
  complianceFrameworks: z.array(z.string()).optional(),
  dataProcessingAgreement: z.boolean().optional(),
  dataRegion: z.string().optional(),
  maxTenants: z.number().int().optional(),
  totalStorageLimit: z.string().optional(),
  maxApiKeys: z.number().int().optional(),
  maxUsers: z.number().int().optional(),
  tenants: z.array(z.lazy(() => Tenants$inboundSchema)).optional(),
  subscriptions: z.lazy(() => Subscriptions$inboundSchema).optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  createdBy: z.string().optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$inboundSchema
      .default("STATUS_UNSPECIFIED"),
});

/** @internal */
export type Organization$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan: string;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?: Array<Tenants$Outbound> | undefined;
  subscriptions?: Subscriptions$Outbound | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  createdBy?: string | undefined;
  status: string;
};

/** @internal */
export const Organization$outboundSchema: z.ZodType<
  Organization$Outbound,
  z.ZodTypeDef,
  Organization
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  website: z.string().optional(),
  description: z.string().optional(),
  billingEmail: z.string().optional(),
  technicalEmail: z.string().optional(),
  phone: z.string().optional(),
  address: z.string().optional(),
  ssoEnabled: z.boolean().optional(),
  ssoProvider: z.string().optional(),
  ssoDomain: z.string().optional(),
  allowedDomains: z.array(z.string()).optional(),
  enforce2fa: z.boolean().optional(),
  billingPlan: BillingPlan$outboundSchema.default("BILLING_PLAN_UNSPECIFIED"),
  billingCurrency: z.string().optional(),
  autoBilling: z.boolean().optional(),
  taxId: z.string().optional(),
  complianceFrameworks: z.array(z.string()).optional(),
  dataProcessingAgreement: z.boolean().optional(),
  dataRegion: z.string().optional(),
  maxTenants: z.number().int().optional(),
  totalStorageLimit: z.string().optional(),
  maxApiKeys: z.number().int().optional(),
  maxUsers: z.number().int().optional(),
  tenants: z.array(z.lazy(() => Tenants$outboundSchema)).optional(),
  subscriptions: z.lazy(() => Subscriptions$outboundSchema).optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  createdBy: z.string().optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRequestRequestBodyOrganizationStatus1$outboundSchema
      .default("STATUS_UNSPECIFIED"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Organization$ {
  /** @deprecated use `Organization$inboundSchema` instead. */
  export const inboundSchema = Organization$inboundSchema;
  /** @deprecated use `Organization$outboundSchema` instead. */
  export const outboundSchema = Organization$outboundSchema;
  /** @deprecated use `Organization$Outbound` instead. */
  export type Outbound = Organization$Outbound;
}

export function organizationToJSON(organization: Organization): string {
  return JSON.stringify(Organization$outboundSchema.parse(organization));
}

export function organizationFromJSON(
  jsonString: string,
): SafeParseResult<Organization, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Organization$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Organization' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization: z.lazy(() => Organization$inboundSchema).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound =
  {
    organization?: Organization$Outbound | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody
  > = z.object({
    organization: z.lazy(() => Organization$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationRequestBodyToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationRequestBody:
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationRequestBody),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan
  > = PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200SpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Reviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200RevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200EmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200LeadsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200LeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsAccountsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Lang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Leads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflowsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONResponseBodyOrganizationTenantsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeysToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound =
  {};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadataToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooksToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$Outbound
      >
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspacesToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettingsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$Outbound
    >
    | undefined;
  settings?:
    | PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$Outbound
    | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationAccountsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationAccounts:
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationAccounts),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationAccounts' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationScopes
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationScopes);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationScopes
  > = PostApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationScopes$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200ApplicationJSONStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PostApiLeadScraperMicroserviceApiV1OrganizationScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeysToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$Outbound>
    | undefined;
  apiKeys?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$Outbound
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponse200Status$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationTenants$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationTenantsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationTenants:
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1OrganizationTenants,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationTenants' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier
  > = PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode
  > = PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$inboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$inboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$inboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$inboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    canceledAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier: string;
    billingMode: string;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval: string;
    autoRenew?: boolean | undefined;
    paymentStatus: string;
    isTrial?: boolean | undefined;
    trialStart?: string | undefined;
    trialEnd?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    canceledAt?: string | undefined;
    endedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      PostApiLeadScraperMicroserviceApiV1OrganizationPlanTier$outboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingMode$outboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingInterval$outboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      PostApiLeadScraperMicroserviceApiV1OrganizationPaymentStatus$outboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    endedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationSubscriptions:
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationSubscriptions),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus
  > =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$inboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationTenants$inboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$inboundSchema
    ).optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdBy: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    website?: string | undefined;
    description?: string | undefined;
    billingEmail?: string | undefined;
    technicalEmail?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    ssoEnabled?: boolean | undefined;
    ssoProvider?: string | undefined;
    ssoDomain?: string | undefined;
    allowedDomains?: Array<string> | undefined;
    enforce2fa?: boolean | undefined;
    billingPlan: string;
    billingCurrency?: string | undefined;
    autoBilling?: boolean | undefined;
    taxId?: string | undefined;
    complianceFrameworks?: Array<string> | undefined;
    dataProcessingAgreement?: boolean | undefined;
    dataRegion?: string | undefined;
    maxTenants?: number | undefined;
    totalStorageLimit?: string | undefined;
    maxApiKeys?: number | undefined;
    maxUsers?: number | undefined;
    tenants?:
      | Array<PostApiLeadScraperMicroserviceApiV1OrganizationTenants$Outbound>
      | undefined;
    subscriptions?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$Outbound
      | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    createdBy?: string | undefined;
    status: string;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      PostApiLeadScraperMicroserviceApiV1OrganizationBillingPlan$outboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1OrganizationTenants$outboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationSubscriptions$outboundSchema
    ).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdBy: z.string().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganizationsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationOrganization:
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationOrganization),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationOrganizationFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationOrganization,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationOrganization' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$inboundSchema
    ).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound =
  {
    organization?:
      | PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$Outbound
      | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody
  > = z.object({
    organization: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1OrganizationOrganization$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1OrganizationResponseBodyToJSON(
  postApiLeadScraperMicroserviceApiV1OrganizationResponseBody:
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1OrganizationResponseBody),
  );
}

export function postApiLeadScraperMicroserviceApiV1OrganizationResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1OrganizationResponseBody' from JSON`,
  );
}
