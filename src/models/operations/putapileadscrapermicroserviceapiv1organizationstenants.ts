/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus =
  {
    AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
    AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
    AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
    AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions =
  {
    PermissionUnspecified: "PERMISSION_UNSPECIFIED",
    PermissionRead: "PERMISSION_READ",
    PermissionWrite: "PERMISSION_WRITE",
    PermissionDelete: "PERMISSION_DELETE",
    PermissionManageUsers: "PERMISSION_MANAGE_USERS",
    PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
    PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
    PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang>;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay =
  ClosedEnum<typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay>;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours =
  {
    id?: string | undefined;
    day?: PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours>
    | undefined;
  specialHours?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads>
    | undefined;
  url?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus
    | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents =
  {
    TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
    TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
    TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
    TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
    TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
    TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
    TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
    TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
    TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
    TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
    TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields =
  {
    IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
    IncludedFieldName: "INCLUDED_FIELD_NAME",
    IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
    IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
    IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
    IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
    IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
    IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
    IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
    IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
    IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
    IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
    IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
    IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
    IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
    IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
    IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
    IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
    IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
    IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
    IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
    IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
    IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
    IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
    IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
    IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
    IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
    IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
    IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
    IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
    IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat =
  {
    PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
    PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
    PayloadFormatXml: "PAYLOAD_FORMAT_XML",
    PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
    PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
    PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata = {};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents>
    | undefined;
  includedFields?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields
    >
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata
    | undefined;
  webhookName?: string | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType =
  {
    WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
    WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
    WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
    WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys>
    | undefined;
  webhooks?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks>
    | undefined;
  workspaceType?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus
    | undefined;
  roles?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles>
    | undefined;
  permissions?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone
    | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces>
    | undefined;
  settings?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings
    | undefined;
};

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus
      | undefined;
    scopes?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes>
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1 =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1 =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1
  >;

export type Tenant = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts>
    | undefined;
  apiKeys?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1
    | undefined;
};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody =
  {
    tenant?: Tenant | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus =
  {
    AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
    AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
    AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
    AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles =
  {
    RoleUnspecified: "ROLE_UNSPECIFIED",
    RoleAdmin: "ROLE_ADMIN",
    RoleUser: "ROLE_USER",
    RoleViewer: "ROLE_VIEWER",
    RoleManager: "ROLE_MANAGER",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions =
  {
    PermissionUnspecified: "PERMISSION_UNSPECIFIED",
    PermissionRead: "PERMISSION_READ",
    PermissionWrite: "PERMISSION_WRITE",
    PermissionDelete: "PERMISSION_DELETE",
    PermissionManageUsers: "PERMISSION_MANAGE_USERS",
    PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
    PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
    PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone =
  {
    TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
    TimezoneUtc: "TIMEZONE_UTC",
    TimezoneEst: "TIMEZONE_EST",
    TimezoneCst: "TIMEZONE_CST",
    TimezoneMst: "TIMEZONE_MST",
    TimezonePst: "TIMEZONE_PST",
    TimezoneGmt: "TIMEZONE_GMT",
    TimezoneCet: "TIMEZONE_CET",
    TimezoneIst: "TIMEZONE_IST",
    TimezoneJst: "TIMEZONE_JST",
    TimezoneAest: "TIMEZONE_AEST",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads
      >
      | undefined;
    url?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat =
  {
    OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
    OutputFormatJson: "OUTPUT_FORMAT_JSON",
    OutputFormatCsv: "OUTPUT_FORMAT_CSV",
    OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
    OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: Date | undefined;
    lastRunTime?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    jobs?:
      | Array<PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat
      | undefined;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: Date | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus
      | undefined;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang
      | undefined;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads
      >
      | undefined;
    url?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents =
  {
    TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
    TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
    TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
    TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
    TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
    TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
    TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
    TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
    TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
    TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
    TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields =
  {
    IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
    IncludedFieldName: "INCLUDED_FIELD_NAME",
    IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
    IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
    IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
    IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
    IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
    IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
    IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
    IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
    IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
    IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
    IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
    IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
    IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
    IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
    IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
    IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
    IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
    IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
    IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
    IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
    IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
    IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
    IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
    IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
    IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
    IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
    IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
    IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
    IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat =
  {
    PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
    PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
    PayloadFormatXml: "PAYLOAD_FORMAT_XML",
    PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
    PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
    PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata =
  {};

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents
      >
      | undefined;
    includedFields?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields
      >
      | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat
      | undefined;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    lastTriggeredAt?: Date | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata
      | undefined;
    webhookName?: string | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType =
  {
    WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
    WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
    WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
    WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    workflows?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: Date | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys
      >
      | undefined;
    webhooks?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks
      >
      | undefined;
    workspaceType?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType
      | undefined;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: Date | undefined;
    createdAt?: Date | undefined;
    accountStatus?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus
      | undefined;
    roles?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles
      >
      | undefined;
    permissions?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions
      >
      | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: Date | undefined;
    timezone?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone
      | undefined;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces
      >
      | undefined;
    settings?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings
      | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes =
  {
    TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
    TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
    TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
    TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
    TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
    TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
    TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
    TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
    TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
    TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
    TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
    TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
    TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
    TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
    TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
    TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
    TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
    TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status
      | undefined;
    scopes?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes
      >
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts
    >
    | undefined;
  apiKeys?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus
    | undefined;
};

/**
 * Updates the configuration of a specific tenant
 */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody =
  {
    tenant?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles
  > = PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang
  > = PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay
  > = z.nativeEnum(PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay);

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay
  > = PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflowsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$Outbound =
  {};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadataToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooksToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$Outbound
      >
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspacesToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettingsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$Outbound =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: string | undefined;
    createdAt?: string | undefined;
    accountStatus: string;
    roles?: Array<string> | undefined;
    permissions?: Array<string> | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: string | undefined;
    timezone: string;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$Outbound
      >
      | undefined;
    settings?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$outboundSchema;
}

/** @internal */
export const Tenant$inboundSchema: z.ZodType<Tenant, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type Tenant$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$Outbound
    >
    | undefined;
  apiKeys?:
    | Array<
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$Outbound
    >
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const Tenant$outboundSchema: z.ZodType<
  Tenant$Outbound,
  z.ZodTypeDef,
  Tenant
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  displayName: z.string().optional(),
  description: z.string().optional(),
  apiBaseUrl: z.string().optional(),
  environmentVariables: z.record(z.string()).optional(),
  allowedOrigins: z.array(z.string()).optional(),
  storageQuota: z.string().optional(),
  monthlyRequestLimit: z.string().optional(),
  maxConcurrentJobs: z.number().int().optional(),
  enableCaching: z.boolean().optional(),
  enableRateLimiting: z.boolean().optional(),
  enableRequestLogging: z.boolean().optional(),
  accounts: z.array(
    z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsAccounts$outboundSchema
    ),
  ).optional(),
  apiKeys: z.array(
    z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsApiKeys$outboundSchema
    ),
  ).optional(),
  totalRequests: z.string().optional(),
  totalStorageUsed: z.string().optional(),
  averageResponseTime: z.number().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  status:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRequestRequestBodyTenantStatus1$outboundSchema
      .default("STATUS_UNSPECIFIED"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tenant$ {
  /** @deprecated use `Tenant$inboundSchema` instead. */
  export const inboundSchema = Tenant$inboundSchema;
  /** @deprecated use `Tenant$outboundSchema` instead. */
  export const outboundSchema = Tenant$outboundSchema;
  /** @deprecated use `Tenant$Outbound` instead. */
  export type Outbound = Tenant$Outbound;
}

export function tenantToJSON(tenant: Tenant): string {
  return JSON.stringify(Tenant$outboundSchema.parse(tenant));
}

export function tenantFromJSON(
  jsonString: string,
): SafeParseResult<Tenant, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Tenant$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Tenant' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    tenant: z.lazy(() => Tenant$inboundSchema).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$Outbound =
  {
    tenant?: Tenant$Outbound | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody
  > = z.object({
    tenant: z.lazy(() => Tenant$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200SpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Reviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200RevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200EmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200LeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200LeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantAccountsStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Lang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Leads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$Outbound
      >
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflowsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHoursToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviewsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeadsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$Outbound
      >
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONResponseBodyTenantStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApplicationJSONStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$Outbound =
  {};

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadataToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooksToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$Outbound
      >
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200ApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspacesToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettingsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$Outbound =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: string | undefined;
    createdAt?: string | undefined;
    accountStatus: string;
    roles?: Array<string> | undefined;
    permissions?: Array<string> | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: string | undefined;
    timezone: string;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$Outbound
      >
      | undefined;
    settings?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountsToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponse200Status$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeysToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    description?: string | undefined;
    apiBaseUrl?: string | undefined;
    environmentVariables?: { [k: string]: string } | undefined;
    allowedOrigins?: Array<string> | undefined;
    storageQuota?: string | undefined;
    monthlyRequestLimit?: string | undefined;
    maxConcurrentJobs?: number | undefined;
    enableCaching?: boolean | undefined;
    enableRateLimiting?: boolean | undefined;
    enableRequestLogging?: boolean | undefined;
    accounts?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$Outbound
      >
      | undefined;
    totalRequests?: string | undefined;
    totalStorageUsed?: string | undefined;
    averageResponseTime?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    status: string;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$outboundSchema
      .parse(putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenantFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    tenant: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$Outbound =
  {
    tenant?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody
  > = z.object({
    tenant: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsTenant$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsResponseBody' from JSON`,
  );
}
