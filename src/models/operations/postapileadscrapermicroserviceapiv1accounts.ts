/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const AccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type AccountStatus = ClosedEnum<typeof AccountStatus>;

export const Roles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type Roles = ClosedEnum<typeof Roles>;

export const Permissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type Permissions = ClosedEnum<typeof Permissions>;

export const Timezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type Timezone = ClosedEnum<typeof Timezone>;

export const Status = {
  WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
  WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
  WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
  WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
  WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
  WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
  WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
  WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
  WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
  WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
  WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
} as const;
export type Status = ClosedEnum<typeof Status>;

export const PostApiLeadScraperMicroserviceApiV1AccountsStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsStatus = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsStatus
>;

export const Lang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type Lang = ClosedEnum<typeof Lang>;

export const Day = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type Day = ClosedEnum<typeof Day>;

export type RegularHours = {
  id?: string | undefined;
  day?: Day | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsDay = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsDay
>;

export type SpecialHours = {
  id?: string | undefined;
  day?: PostApiLeadScraperMicroserviceApiV1AccountsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type Reviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const RevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type RevenueRange = ClosedEnum<typeof RevenueRange>;

export const EmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type EmployeeBenefits = ClosedEnum<typeof EmployeeBenefits>;

export type Leads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?: Array<RegularHours> | undefined;
  specialHours?: Array<SpecialHours> | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?: Array<Reviews> | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?: RevenueRange | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<EmployeeBenefits> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type Jobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?: PostApiLeadScraperMicroserviceApiV1AccountsStatus | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: Lang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?: Array<Leads> | undefined;
  url?: string | undefined;
};

export const OutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type OutputFormat = ClosedEnum<typeof OutputFormat>;

export type Workflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?: Status | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<Jobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?: OutputFormat | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus = {
  BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
  BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
  BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
  BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
  BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
  BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
  BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus>;

export const PostApiLeadScraperMicroserviceApiV1AccountsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsLang = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsLang
>;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay
>;

export type PostApiLeadScraperMicroserviceApiV1AccountsRegularHours = {
  id?: string | undefined;
  day?: PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours = {
  id?: string | undefined;
  day?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange>;

export const PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits = {
  EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
  EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
  EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
  EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
  EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsRegularHours>
    | undefined;
  specialHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type ScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PostApiLeadScraperMicroserviceApiV1AccountsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?: Array<PostApiLeadScraperMicroserviceApiV1AccountsLeads> | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus
  >;

export type ApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const TriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type TriggerEvents = ClosedEnum<typeof TriggerEvents>;

export const IncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type IncludedFields = ClosedEnum<typeof IncludedFields>;

export const PayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type PayloadFormat = ClosedEnum<typeof PayloadFormat>;

export type Metadata = {};

export type Webhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<TriggerEvents> | undefined;
  includedFields?: Array<IncludedFields> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?: PayloadFormat | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: Metadata | undefined;
  webhookName?: string | undefined;
};

export const WorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type WorkspaceType = ClosedEnum<typeof WorkspaceType>;

export type Workspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?: Array<Workflows> | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?: Array<ScrapingJobs> | undefined;
  apiKeys?: Array<ApiKeys> | undefined;
  webhooks?: Array<Webhooks> | undefined;
  workspaceType?: WorkspaceType | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type Settings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type Account = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?: AccountStatus | undefined;
  roles?: Array<Roles> | undefined;
  permissions?: Array<Permissions> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: Timezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?: Array<Workspaces> | undefined;
  settings?: Settings | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsRequestBody = {
  account?: Account | undefined;
  initialWorkspaceName?: string | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus>;

export const PostApiLeadScraperMicroserviceApiV1AccountsRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsRoles = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsRoles
>;

export const PostApiLeadScraperMicroserviceApiV1AccountsPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsPermissions = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsPermissions
>;

export const PostApiLeadScraperMicroserviceApiV1AccountsTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsTimezone = ClosedEnum<
  typeof PostApiLeadScraperMicroserviceApiV1AccountsTimezone
>;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours =
  {
    id?: string | undefined;
    day?:
      | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours
    >
    | undefined;
  specialHours?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours
    >
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits
    >
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads>
    | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat>;

export type PostApiLeadScraperMicroserviceApiV1AccountsWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus
    | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?: Array<PostApiLeadScraperMicroserviceApiV1AccountsJobs> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang>;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours = {
  id?: string | undefined;
  day?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours = {
  id?: string | undefined;
  day?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange
  >;

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours>
    | undefined;
  specialHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads>
    | undefined;
  url?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus
  >;

export type PostApiLeadScraperMicroserviceApiV1AccountsApiKeys = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: Date | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  expiresAt?: Date | undefined;
  deletedAt?: Date | undefined;
  lastRotatedAt?: Date | undefined;
  lastSecurityReviewAt?: Date | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: Date | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents>;

export const PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields>;

export const PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat>;

export type PostApiLeadScraperMicroserviceApiV1AccountsMetadata = {};

export type PostApiLeadScraperMicroserviceApiV1AccountsWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents>
    | undefined;
  includedFields?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: PostApiLeadScraperMicroserviceApiV1AccountsMetadata | undefined;
  webhookName?: string | undefined;
};

export const PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType =
  ClosedEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType>;

export type PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsApiKeys>
    | undefined;
  webhooks?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWebhooks>
    | undefined;
  workspaceType?:
    | PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type PostApiLeadScraperMicroserviceApiV1AccountsAccount = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus
    | undefined;
  roles?: Array<PostApiLeadScraperMicroserviceApiV1AccountsRoles> | undefined;
  permissions?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?: PostApiLeadScraperMicroserviceApiV1AccountsTimezone | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces>
    | undefined;
  settings?: PostApiLeadScraperMicroserviceApiV1AccountsSettings | undefined;
};

/**
 * Creates a new user account in the workspace service
 */
export type PostApiLeadScraperMicroserviceApiV1AccountsResponseBody = {
  account?: PostApiLeadScraperMicroserviceApiV1AccountsAccount | undefined;
  initialWorkspaceId?: string | undefined;
};

/** @internal */
export const AccountStatus$inboundSchema: z.ZodNativeEnum<
  typeof AccountStatus
> = z.nativeEnum(AccountStatus);

/** @internal */
export const AccountStatus$outboundSchema: z.ZodNativeEnum<
  typeof AccountStatus
> = AccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountStatus$ {
  /** @deprecated use `AccountStatus$inboundSchema` instead. */
  export const inboundSchema = AccountStatus$inboundSchema;
  /** @deprecated use `AccountStatus$outboundSchema` instead. */
  export const outboundSchema = AccountStatus$outboundSchema;
}

/** @internal */
export const Roles$inboundSchema: z.ZodNativeEnum<typeof Roles> = z.nativeEnum(
  Roles,
);

/** @internal */
export const Roles$outboundSchema: z.ZodNativeEnum<typeof Roles> =
  Roles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Roles$ {
  /** @deprecated use `Roles$inboundSchema` instead. */
  export const inboundSchema = Roles$inboundSchema;
  /** @deprecated use `Roles$outboundSchema` instead. */
  export const outboundSchema = Roles$outboundSchema;
}

/** @internal */
export const Permissions$inboundSchema: z.ZodNativeEnum<typeof Permissions> = z
  .nativeEnum(Permissions);

/** @internal */
export const Permissions$outboundSchema: z.ZodNativeEnum<typeof Permissions> =
  Permissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Permissions$ {
  /** @deprecated use `Permissions$inboundSchema` instead. */
  export const inboundSchema = Permissions$inboundSchema;
  /** @deprecated use `Permissions$outboundSchema` instead. */
  export const outboundSchema = Permissions$outboundSchema;
}

/** @internal */
export const Timezone$inboundSchema: z.ZodNativeEnum<typeof Timezone> = z
  .nativeEnum(Timezone);

/** @internal */
export const Timezone$outboundSchema: z.ZodNativeEnum<typeof Timezone> =
  Timezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Timezone$ {
  /** @deprecated use `Timezone$inboundSchema` instead. */
  export const inboundSchema = Timezone$inboundSchema;
  /** @deprecated use `Timezone$outboundSchema` instead. */
  export const outboundSchema = Timezone$outboundSchema;
}

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsStatus$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsStatus> = z
    .nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsStatus);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsStatus$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsStatus> =
    PostApiLeadScraperMicroserviceApiV1AccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsStatus$outboundSchema;
}

/** @internal */
export const Lang$inboundSchema: z.ZodNativeEnum<typeof Lang> = z.nativeEnum(
  Lang,
);

/** @internal */
export const Lang$outboundSchema: z.ZodNativeEnum<typeof Lang> =
  Lang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Lang$ {
  /** @deprecated use `Lang$inboundSchema` instead. */
  export const inboundSchema = Lang$inboundSchema;
  /** @deprecated use `Lang$outboundSchema` instead. */
  export const outboundSchema = Lang$outboundSchema;
}

/** @internal */
export const Day$inboundSchema: z.ZodNativeEnum<typeof Day> = z.nativeEnum(Day);

/** @internal */
export const Day$outboundSchema: z.ZodNativeEnum<typeof Day> =
  Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Day$ {
  /** @deprecated use `Day$inboundSchema` instead. */
  export const inboundSchema = Day$inboundSchema;
  /** @deprecated use `Day$outboundSchema` instead. */
  export const outboundSchema = Day$outboundSchema;
}

/** @internal */
export const RegularHours$inboundSchema: z.ZodType<
  RegularHours,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  day: Day$inboundSchema.default("DAY_OF_WEEK_UNSPECIFIED"),
  openTime: z.string().optional(),
  closeTime: z.string().optional(),
  closed: z.boolean().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type RegularHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const RegularHours$outboundSchema: z.ZodType<
  RegularHours$Outbound,
  z.ZodTypeDef,
  RegularHours
> = z.object({
  id: z.string().optional(),
  day: Day$outboundSchema.default("DAY_OF_WEEK_UNSPECIFIED"),
  openTime: z.string().optional(),
  closeTime: z.string().optional(),
  closed: z.boolean().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RegularHours$ {
  /** @deprecated use `RegularHours$inboundSchema` instead. */
  export const inboundSchema = RegularHours$inboundSchema;
  /** @deprecated use `RegularHours$outboundSchema` instead. */
  export const outboundSchema = RegularHours$outboundSchema;
  /** @deprecated use `RegularHours$Outbound` instead. */
  export type Outbound = RegularHours$Outbound;
}

export function regularHoursToJSON(regularHours: RegularHours): string {
  return JSON.stringify(RegularHours$outboundSchema.parse(regularHours));
}

export function regularHoursFromJSON(
  jsonString: string,
): SafeParseResult<RegularHours, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RegularHours$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsDay$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsDay> = z
    .nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsDay);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsDay$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsDay> =
    PostApiLeadScraperMicroserviceApiV1AccountsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsDay$outboundSchema;
}

/** @internal */
export const SpecialHours$inboundSchema: z.ZodType<
  SpecialHours,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  day: PostApiLeadScraperMicroserviceApiV1AccountsDay$inboundSchema.default(
    "DAY_OF_WEEK_UNSPECIFIED",
  ),
  openTime: z.string().optional(),
  closeTime: z.string().optional(),
  closed: z.boolean().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type SpecialHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const SpecialHours$outboundSchema: z.ZodType<
  SpecialHours$Outbound,
  z.ZodTypeDef,
  SpecialHours
> = z.object({
  id: z.string().optional(),
  day: PostApiLeadScraperMicroserviceApiV1AccountsDay$outboundSchema.default(
    "DAY_OF_WEEK_UNSPECIFIED",
  ),
  openTime: z.string().optional(),
  closeTime: z.string().optional(),
  closed: z.boolean().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SpecialHours$ {
  /** @deprecated use `SpecialHours$inboundSchema` instead. */
  export const inboundSchema = SpecialHours$inboundSchema;
  /** @deprecated use `SpecialHours$outboundSchema` instead. */
  export const outboundSchema = SpecialHours$outboundSchema;
  /** @deprecated use `SpecialHours$Outbound` instead. */
  export type Outbound = SpecialHours$Outbound;
}

export function specialHoursToJSON(specialHours: SpecialHours): string {
  return JSON.stringify(SpecialHours$outboundSchema.parse(specialHours));
}

export function specialHoursFromJSON(
  jsonString: string,
): SafeParseResult<SpecialHours, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SpecialHours$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SpecialHours' from JSON`,
  );
}

/** @internal */
export const Reviews$inboundSchema: z.ZodType<Reviews, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type Reviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const Reviews$outboundSchema: z.ZodType<
  Reviews$Outbound,
  z.ZodTypeDef,
  Reviews
> = z.object({
  id: z.string().optional(),
  author: z.string().optional(),
  rating: z.number().optional(),
  text: z.string().optional(),
  time: z.date().transform(v => v.toISOString()).optional(),
  language: z.string().optional(),
  profilePhotoUrl: z.string().optional(),
  reviewCount: z.number().int().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Reviews$ {
  /** @deprecated use `Reviews$inboundSchema` instead. */
  export const inboundSchema = Reviews$inboundSchema;
  /** @deprecated use `Reviews$outboundSchema` instead. */
  export const outboundSchema = Reviews$outboundSchema;
  /** @deprecated use `Reviews$Outbound` instead. */
  export type Outbound = Reviews$Outbound;
}

export function reviewsToJSON(reviews: Reviews): string {
  return JSON.stringify(Reviews$outboundSchema.parse(reviews));
}

export function reviewsFromJSON(
  jsonString: string,
): SafeParseResult<Reviews, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Reviews$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Reviews' from JSON`,
  );
}

/** @internal */
export const RevenueRange$inboundSchema: z.ZodNativeEnum<typeof RevenueRange> =
  z.nativeEnum(RevenueRange);

/** @internal */
export const RevenueRange$outboundSchema: z.ZodNativeEnum<typeof RevenueRange> =
  RevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevenueRange$ {
  /** @deprecated use `RevenueRange$inboundSchema` instead. */
  export const inboundSchema = RevenueRange$inboundSchema;
  /** @deprecated use `RevenueRange$outboundSchema` instead. */
  export const outboundSchema = RevenueRange$outboundSchema;
}

/** @internal */
export const EmployeeBenefits$inboundSchema: z.ZodNativeEnum<
  typeof EmployeeBenefits
> = z.nativeEnum(EmployeeBenefits);

/** @internal */
export const EmployeeBenefits$outboundSchema: z.ZodNativeEnum<
  typeof EmployeeBenefits
> = EmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmployeeBenefits$ {
  /** @deprecated use `EmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema = EmployeeBenefits$inboundSchema;
  /** @deprecated use `EmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema = EmployeeBenefits$outboundSchema;
}

/** @internal */
export const Leads$inboundSchema: z.ZodType<Leads, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(z.lazy(() => RegularHours$inboundSchema)).optional(),
    specialHours: z.array(z.lazy(() => SpecialHours$inboundSchema)).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(z.lazy(() => Reviews$inboundSchema)).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange: RevenueRange$inboundSchema.default(
      "REVENUE_RANGE_UNSPECIFIED",
    ),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(EmployeeBenefits$inboundSchema).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type Leads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?: Array<RegularHours$Outbound> | undefined;
  specialHours?: Array<SpecialHours$Outbound> | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?: Array<Reviews$Outbound> | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const Leads$outboundSchema: z.ZodType<
  Leads$Outbound,
  z.ZodTypeDef,
  Leads
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  website: z.string().optional(),
  phone: z.string().optional(),
  address: z.string().optional(),
  city: z.string().optional(),
  state: z.string().optional(),
  country: z.string().optional(),
  latitude: z.number().optional(),
  longitude: z.number().optional(),
  googleRating: z.number().optional(),
  reviewCount: z.number().int().optional(),
  industry: z.string().optional(),
  employeeCount: z.number().int().optional(),
  estimatedRevenue: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  placeId: z.string().optional(),
  googleMapsUrl: z.string().optional(),
  businessStatus: z.string().optional(),
  regularHours: z.array(z.lazy(() => RegularHours$outboundSchema)).optional(),
  specialHours: z.array(z.lazy(() => SpecialHours$outboundSchema)).optional(),
  photoReferences: z.array(z.string()).optional(),
  mainPhotoUrl: z.string().optional(),
  reviews: z.array(z.lazy(() => Reviews$outboundSchema)).optional(),
  types: z.array(z.string()).optional(),
  amenities: z.array(z.string()).optional(),
  servesVegetarianFood: z.boolean().optional(),
  outdoorSeating: z.boolean().optional(),
  paymentMethods: z.array(z.string()).optional(),
  wheelchairAccessible: z.boolean().optional(),
  parkingAvailable: z.boolean().optional(),
  socialMedia: z.record(z.string()).optional(),
  ratingCategory: z.string().optional(),
  rating: z.number().optional(),
  count: z.number().int().optional(),
  lastUpdated: z.date().transform(v => v.toISOString()).optional(),
  dataSourceVersion: z.string().optional(),
  scrapingSessionId: z.string().optional(),
  alternatePhones: z.array(z.string()).optional(),
  contactPersonName: z.string().optional(),
  contactPersonTitle: z.string().optional(),
  contactEmail: z.string().optional(),
  foundedYear: z.number().int().optional(),
  businessType: z.string().optional(),
  certifications: z.array(z.string()).optional(),
  licenseNumber: z.string().optional(),
  revenueRange: RevenueRange$outboundSchema.default(
    "REVENUE_RANGE_UNSPECIFIED",
  ),
  fundingStage: z.string().optional(),
  isPublicCompany: z.boolean().optional(),
  websiteLoadSpeed: z.number().optional(),
  hasSslCertificate: z.boolean().optional(),
  cmsUsed: z.string().optional(),
  ecommercePlatforms: z.array(z.string()).optional(),
  timezone: z.string().optional(),
  neighborhood: z.string().optional(),
  nearbyLandmarks: z.array(z.string()).optional(),
  transportationAccess: z.string().optional(),
  employeeBenefits: z.array(EmployeeBenefits$outboundSchema).optional(),
  parentCompany: z.string().optional(),
  subsidiaries: z.array(z.string()).optional(),
  isFranchise: z.boolean().optional(),
  seoKeywords: z.array(z.string()).optional(),
  usesGoogleAds: z.boolean().optional(),
  googleMyBusinessCategory: z.string().optional(),
  naicsCode: z.string().optional(),
  sicCode: z.string().optional(),
  unspscCode: z.string().optional(),
  isGreenCertified: z.boolean().optional(),
  energySources: z.array(z.string()).optional(),
  sustainabilityRating: z.string().optional(),
  recentAnnouncements: z.array(z.string()).optional(),
  lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
  hasLitigationHistory: z.boolean().optional(),
  exportControlStatus: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Leads$ {
  /** @deprecated use `Leads$inboundSchema` instead. */
  export const inboundSchema = Leads$inboundSchema;
  /** @deprecated use `Leads$outboundSchema` instead. */
  export const outboundSchema = Leads$outboundSchema;
  /** @deprecated use `Leads$Outbound` instead. */
  export type Outbound = Leads$Outbound;
}

export function leadsToJSON(leads: Leads): string {
  return JSON.stringify(Leads$outboundSchema.parse(leads));
}

export function leadsFromJSON(
  jsonString: string,
): SafeParseResult<Leads, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Leads$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Leads' from JSON`,
  );
}

/** @internal */
export const Jobs$inboundSchema: z.ZodType<Jobs, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status: PostApiLeadScraperMicroserviceApiV1AccountsStatus$inboundSchema
      .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: Lang$inboundSchema.default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(z.lazy(() => Leads$inboundSchema)).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type Jobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?: Array<Leads$Outbound> | undefined;
  url?: string | undefined;
};

/** @internal */
export const Jobs$outboundSchema: z.ZodType<Jobs$Outbound, z.ZodTypeDef, Jobs> =
  z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status: PostApiLeadScraperMicroserviceApiV1AccountsStatus$outboundSchema
      .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: Lang$outboundSchema.default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(z.lazy(() => Leads$outboundSchema)).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Jobs$ {
  /** @deprecated use `Jobs$inboundSchema` instead. */
  export const inboundSchema = Jobs$inboundSchema;
  /** @deprecated use `Jobs$outboundSchema` instead. */
  export const outboundSchema = Jobs$outboundSchema;
  /** @deprecated use `Jobs$Outbound` instead. */
  export type Outbound = Jobs$Outbound;
}

export function jobsToJSON(jobs: Jobs): string {
  return JSON.stringify(Jobs$outboundSchema.parse(jobs));
}

export function jobsFromJSON(
  jsonString: string,
): SafeParseResult<Jobs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Jobs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Jobs' from JSON`,
  );
}

/** @internal */
export const OutputFormat$inboundSchema: z.ZodNativeEnum<typeof OutputFormat> =
  z.nativeEnum(OutputFormat);

/** @internal */
export const OutputFormat$outboundSchema: z.ZodNativeEnum<typeof OutputFormat> =
  OutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutputFormat$ {
  /** @deprecated use `OutputFormat$inboundSchema` instead. */
  export const inboundSchema = OutputFormat$inboundSchema;
  /** @deprecated use `OutputFormat$outboundSchema` instead. */
  export const outboundSchema = OutputFormat$outboundSchema;
}

/** @internal */
export const Workflows$inboundSchema: z.ZodType<
  Workflows,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  cronExpression: z.string().optional(),
  nextRunTime: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  lastRunTime: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  status: Status$inboundSchema.default("WORKFLOW_STATUS_UNSPECIFIED"),
  retryCount: z.number().int().optional(),
  maxRetries: z.number().int().optional(),
  alertEmails: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  jobs: z.array(z.lazy(() => Jobs$inboundSchema)).optional(),
  geoFencingRadius: z.number().optional(),
  geoFencingLat: z.number().optional(),
  geoFencingLon: z.number().optional(),
  geoFencingZoomMin: z.number().int().optional(),
  geoFencingZoomMax: z.number().int().optional(),
  includeReviews: z.boolean().optional(),
  includePhotos: z.boolean().optional(),
  includeBusinessHours: z.boolean().optional(),
  maxReviewsPerBusiness: z.number().int().optional(),
  outputFormat: OutputFormat$inboundSchema.default("OUTPUT_FORMAT_UNSPECIFIED"),
  outputDestination: z.string().optional(),
  dataRetention: z.string().optional(),
  anonymizePii: z.boolean().optional(),
  notificationSlackChannel: z.string().optional(),
  notificationEmailGroup: z.string().optional(),
  notificationNotifyOnStart: z.boolean().optional(),
  notificationNotifyOnComplete: z.boolean().optional(),
  notificationNotifyOnFailure: z.boolean().optional(),
  contentFilterAllowedCountries: z.array(z.string()).optional(),
  contentFilterExcludedTypes: z.array(z.string()).optional(),
  contentFilterMinimumRating: z.number().optional(),
  contentFilterMinimumReviews: z.number().int().optional(),
  qosMaxConcurrentRequests: z.number().int().optional(),
  qosMaxRetries: z.number().int().optional(),
  qosRequestTimeout: z.string().optional(),
  qosEnableJavascript: z.boolean().optional(),
  respectRobotsTxt: z.boolean().optional(),
  acceptTermsOfService: z.boolean().optional(),
  userAgent: z.string().optional(),
  searchTerms: z.array(z.string()).optional(),
  scheduledEntryId: z.string().optional(),
});

/** @internal */
export type Workflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?: Array<Jobs$Outbound> | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const Workflows$outboundSchema: z.ZodType<
  Workflows$Outbound,
  z.ZodTypeDef,
  Workflows
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  cronExpression: z.string().optional(),
  nextRunTime: z.date().transform(v => v.toISOString()).optional(),
  lastRunTime: z.date().transform(v => v.toISOString()).optional(),
  status: Status$outboundSchema.default("WORKFLOW_STATUS_UNSPECIFIED"),
  retryCount: z.number().int().optional(),
  maxRetries: z.number().int().optional(),
  alertEmails: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  jobs: z.array(z.lazy(() => Jobs$outboundSchema)).optional(),
  geoFencingRadius: z.number().optional(),
  geoFencingLat: z.number().optional(),
  geoFencingLon: z.number().optional(),
  geoFencingZoomMin: z.number().int().optional(),
  geoFencingZoomMax: z.number().int().optional(),
  includeReviews: z.boolean().optional(),
  includePhotos: z.boolean().optional(),
  includeBusinessHours: z.boolean().optional(),
  maxReviewsPerBusiness: z.number().int().optional(),
  outputFormat: OutputFormat$outboundSchema.default(
    "OUTPUT_FORMAT_UNSPECIFIED",
  ),
  outputDestination: z.string().optional(),
  dataRetention: z.string().optional(),
  anonymizePii: z.boolean().optional(),
  notificationSlackChannel: z.string().optional(),
  notificationEmailGroup: z.string().optional(),
  notificationNotifyOnStart: z.boolean().optional(),
  notificationNotifyOnComplete: z.boolean().optional(),
  notificationNotifyOnFailure: z.boolean().optional(),
  contentFilterAllowedCountries: z.array(z.string()).optional(),
  contentFilterExcludedTypes: z.array(z.string()).optional(),
  contentFilterMinimumRating: z.number().optional(),
  contentFilterMinimumReviews: z.number().int().optional(),
  qosMaxConcurrentRequests: z.number().int().optional(),
  qosMaxRetries: z.number().int().optional(),
  qosRequestTimeout: z.string().optional(),
  qosEnableJavascript: z.boolean().optional(),
  respectRobotsTxt: z.boolean().optional(),
  acceptTermsOfService: z.boolean().optional(),
  userAgent: z.string().optional(),
  searchTerms: z.array(z.string()).optional(),
  scheduledEntryId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Workflows$ {
  /** @deprecated use `Workflows$inboundSchema` instead. */
  export const inboundSchema = Workflows$inboundSchema;
  /** @deprecated use `Workflows$outboundSchema` instead. */
  export const outboundSchema = Workflows$outboundSchema;
  /** @deprecated use `Workflows$Outbound` instead. */
  export type Outbound = Workflows$Outbound;
}

export function workflowsToJSON(workflows: Workflows): string {
  return JSON.stringify(Workflows$outboundSchema.parse(workflows));
}

export function workflowsFromJSON(
  jsonString: string,
): SafeParseResult<Workflows, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Workflows$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Workflows' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus
  > = PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsLang$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsLang> = z
    .nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsLang);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsLang$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsLang> =
    PostApiLeadScraperMicroserviceApiV1AccountsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay
  > = PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours
  > = z.object({
    id: z.string().optional(),
    day: PostApiLeadScraperMicroserviceApiV1AccountsAccountsDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsRegularHours:
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsRegularHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$Outbound = {
  id?: string | undefined;
  day: string;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsSpecialHours:
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsSpecialHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsReviews:
    PostApiLeadScraperMicroserviceApiV1AccountsReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsReviews$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsReviews,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsReviews$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange
  > = PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits
  > = PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$Outbound>
    | undefined;
  specialHours?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$Outbound>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsLeads:
    PostApiLeadScraperMicroserviceApiV1AccountsLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsLeads$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsLeads,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsLeads' from JSON`,
  );
}

/** @internal */
export const ScrapingJobs$inboundSchema: z.ZodType<
  ScrapingJobs,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  priority: z.number().int().optional(),
  payloadType: z.string().optional(),
  payload: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$inboundSchema
      .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
  name: z.string().optional(),
  keywords: z.array(z.string()).optional(),
  lang: PostApiLeadScraperMicroserviceApiV1AccountsLang$inboundSchema.default(
    "LANGUAGE_UNSPECIFIED",
  ),
  zoom: z.number().int().optional(),
  lat: z.string().optional(),
  lon: z.string().optional(),
  fastMode: z.boolean().optional(),
  radius: z.number().int().optional(),
  depth: z.number().int().optional(),
  email: z.boolean().optional(),
  maxTime: z.number().int().optional(),
  proxies: z.array(z.string()).optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  leads: z.array(
    z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsLeads$inboundSchema
    ),
  ).optional(),
  url: z.string().optional(),
});

/** @internal */
export type ScrapingJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const ScrapingJobs$outboundSchema: z.ZodType<
  ScrapingJobs$Outbound,
  z.ZodTypeDef,
  ScrapingJobs
> = z.object({
  id: z.string().optional(),
  priority: z.number().int().optional(),
  payloadType: z.string().optional(),
  payload: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsStatus$outboundSchema
      .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
  name: z.string().optional(),
  keywords: z.array(z.string()).optional(),
  lang: PostApiLeadScraperMicroserviceApiV1AccountsLang$outboundSchema.default(
    "LANGUAGE_UNSPECIFIED",
  ),
  zoom: z.number().int().optional(),
  lat: z.string().optional(),
  lon: z.string().optional(),
  fastMode: z.boolean().optional(),
  radius: z.number().int().optional(),
  depth: z.number().int().optional(),
  email: z.boolean().optional(),
  maxTime: z.number().int().optional(),
  proxies: z.array(z.string()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  leads: z.array(
    z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsLeads$outboundSchema
    ),
  ).optional(),
  url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScrapingJobs$ {
  /** @deprecated use `ScrapingJobs$inboundSchema` instead. */
  export const inboundSchema = ScrapingJobs$inboundSchema;
  /** @deprecated use `ScrapingJobs$outboundSchema` instead. */
  export const outboundSchema = ScrapingJobs$outboundSchema;
  /** @deprecated use `ScrapingJobs$Outbound` instead. */
  export type Outbound = ScrapingJobs$Outbound;
}

export function scrapingJobsToJSON(scrapingJobs: ScrapingJobs): string {
  return JSON.stringify(ScrapingJobs$outboundSchema.parse(scrapingJobs));
}

export function scrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<ScrapingJobs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ScrapingJobs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$outboundSchema;
}

/** @internal */
export const ApiKeys$inboundSchema: z.ZodType<ApiKeys, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type ApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const ApiKeys$outboundSchema: z.ZodType<
  ApiKeys$Outbound,
  z.ZodTypeDef,
  ApiKeys
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  keyHash: z.string().optional(),
  keyPrefix: z.string().optional(),
  scopes: z.array(z.string()).optional(),
  allowedIps: z.array(z.string()).optional(),
  allowedDomains: z.array(z.string()).optional(),
  allowedEnvironments: z.array(z.string()).optional(),
  isTestKey: z.boolean().optional(),
  requestsPerSecond: z.number().int().optional(),
  requestsPerDay: z.number().int().optional(),
  concurrentRequests: z.number().int().optional(),
  monthlyRequestQuota: z.string().optional(),
  costPerRequest: z.number().optional(),
  billingTier: z.string().optional(),
  totalRequests: z.string().optional(),
  totalErrors: z.string().optional(),
  lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
  averageResponseTime: z.number().optional(),
  endpointUsageJson: z.string().optional(),
  errorRatesJson: z.string().optional(),
  recentErrors: z.string().optional(),
  successfulRequestsCount: z.number().int().optional(),
  successRate: z.number().optional(),
  status:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRequestStatus$outboundSchema
      .default("STATUS_UNSPECIFIED"),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  expiresAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
  lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
  requiresClientSecret: z.boolean().optional(),
  clientSecretHash: z.string().optional(),
  enforceHttps: z.boolean().optional(),
  enforceSigning: z.boolean().optional(),
  allowedSignatureAlgorithms: z.array(z.string()).optional(),
  enforceMutualTls: z.boolean().optional(),
  clientCertificateHash: z.string().optional(),
  requireRequestSigning: z.boolean().optional(),
  description: z.string().optional(),
  metadataJson: z.string().optional(),
  tags: z.array(z.string()).optional(),
  apiVersion: z.string().optional(),
  supportedFeatures: z.array(z.string()).optional(),
  documentationUrl: z.string().optional(),
  supportContact: z.string().optional(),
  logAllRequests: z.boolean().optional(),
  lastRotationReason: z.string().optional(),
  lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
  rotationFrequencyDays: z.number().int().optional(),
  complianceStandards: z.array(z.string()).optional(),
  requiresAuditLogging: z.boolean().optional(),
  dataResidency: z.string().optional(),
  approvedIntegrations: z.array(z.string()).optional(),
  alertEmails: z.array(z.string()).optional(),
  webhookUrl: z.string().optional(),
  alertOnQuotaThreshold: z.boolean().optional(),
  quotaAlertThreshold: z.number().optional(),
  alertOnErrorSpike: z.boolean().optional(),
  errorAlertThreshold: z.number().optional(),
  monitoringIntegrations: z.array(z.string()).optional(),
  encrypted: z.boolean().optional(),
  dataClassification: z.string().optional(),
  maxUses: z.number().int().optional(),
  rateLimit: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiKeys$ {
  /** @deprecated use `ApiKeys$inboundSchema` instead. */
  export const inboundSchema = ApiKeys$inboundSchema;
  /** @deprecated use `ApiKeys$outboundSchema` instead. */
  export const outboundSchema = ApiKeys$outboundSchema;
  /** @deprecated use `ApiKeys$Outbound` instead. */
  export type Outbound = ApiKeys$Outbound;
}

export function apiKeysToJSON(apiKeys: ApiKeys): string {
  return JSON.stringify(ApiKeys$outboundSchema.parse(apiKeys));
}

export function apiKeysFromJSON(
  jsonString: string,
): SafeParseResult<ApiKeys, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiKeys$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiKeys' from JSON`,
  );
}

/** @internal */
export const TriggerEvents$inboundSchema: z.ZodNativeEnum<
  typeof TriggerEvents
> = z.nativeEnum(TriggerEvents);

/** @internal */
export const TriggerEvents$outboundSchema: z.ZodNativeEnum<
  typeof TriggerEvents
> = TriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggerEvents$ {
  /** @deprecated use `TriggerEvents$inboundSchema` instead. */
  export const inboundSchema = TriggerEvents$inboundSchema;
  /** @deprecated use `TriggerEvents$outboundSchema` instead. */
  export const outboundSchema = TriggerEvents$outboundSchema;
}

/** @internal */
export const IncludedFields$inboundSchema: z.ZodNativeEnum<
  typeof IncludedFields
> = z.nativeEnum(IncludedFields);

/** @internal */
export const IncludedFields$outboundSchema: z.ZodNativeEnum<
  typeof IncludedFields
> = IncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncludedFields$ {
  /** @deprecated use `IncludedFields$inboundSchema` instead. */
  export const inboundSchema = IncludedFields$inboundSchema;
  /** @deprecated use `IncludedFields$outboundSchema` instead. */
  export const outboundSchema = IncludedFields$outboundSchema;
}

/** @internal */
export const PayloadFormat$inboundSchema: z.ZodNativeEnum<
  typeof PayloadFormat
> = z.nativeEnum(PayloadFormat);

/** @internal */
export const PayloadFormat$outboundSchema: z.ZodNativeEnum<
  typeof PayloadFormat
> = PayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayloadFormat$ {
  /** @deprecated use `PayloadFormat$inboundSchema` instead. */
  export const inboundSchema = PayloadFormat$inboundSchema;
  /** @deprecated use `PayloadFormat$outboundSchema` instead. */
  export const outboundSchema = PayloadFormat$outboundSchema;
}

/** @internal */
export const Metadata$inboundSchema: z.ZodType<
  Metadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type Metadata$Outbound = {};

/** @internal */
export const Metadata$outboundSchema: z.ZodType<
  Metadata$Outbound,
  z.ZodTypeDef,
  Metadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metadata$ {
  /** @deprecated use `Metadata$inboundSchema` instead. */
  export const inboundSchema = Metadata$inboundSchema;
  /** @deprecated use `Metadata$outboundSchema` instead. */
  export const outboundSchema = Metadata$outboundSchema;
  /** @deprecated use `Metadata$Outbound` instead. */
  export type Outbound = Metadata$Outbound;
}

export function metadataToJSON(metadata: Metadata): string {
  return JSON.stringify(Metadata$outboundSchema.parse(metadata));
}

export function metadataFromJSON(
  jsonString: string,
): SafeParseResult<Metadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Metadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Metadata' from JSON`,
  );
}

/** @internal */
export const Webhooks$inboundSchema: z.ZodType<
  Webhooks,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string().optional(),
  authType: z.string().optional(),
  authToken: z.string().optional(),
  customHeaders: z.record(z.string()).optional(),
  maxRetries: z.number().int().optional(),
  retryInterval: z.string().optional(),
  triggerEvents: z.array(TriggerEvents$inboundSchema).optional(),
  includedFields: z.array(IncludedFields$inboundSchema).optional(),
  includeFullResults: z.boolean().optional(),
  payloadFormat: PayloadFormat$inboundSchema.default(
    "PAYLOAD_FORMAT_UNSPECIFIED",
  ),
  verifySsl: z.boolean().optional(),
  signingSecret: z.string().optional(),
  rateLimit: z.number().int().optional(),
  rateLimitInterval: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  successfulCalls: z.number().int().optional(),
  failedCalls: z.number().int().optional(),
  metadata: z.lazy(() => Metadata$inboundSchema).optional(),
  webhookName: z.string().optional(),
});

/** @internal */
export type Webhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?: Metadata$Outbound | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const Webhooks$outboundSchema: z.ZodType<
  Webhooks$Outbound,
  z.ZodTypeDef,
  Webhooks
> = z.object({
  id: z.string().optional(),
  url: z.string().optional(),
  authType: z.string().optional(),
  authToken: z.string().optional(),
  customHeaders: z.record(z.string()).optional(),
  maxRetries: z.number().int().optional(),
  retryInterval: z.string().optional(),
  triggerEvents: z.array(TriggerEvents$outboundSchema).optional(),
  includedFields: z.array(IncludedFields$outboundSchema).optional(),
  includeFullResults: z.boolean().optional(),
  payloadFormat: PayloadFormat$outboundSchema.default(
    "PAYLOAD_FORMAT_UNSPECIFIED",
  ),
  verifySsl: z.boolean().optional(),
  signingSecret: z.string().optional(),
  rateLimit: z.number().int().optional(),
  rateLimitInterval: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
  successfulCalls: z.number().int().optional(),
  failedCalls: z.number().int().optional(),
  metadata: z.lazy(() => Metadata$outboundSchema).optional(),
  webhookName: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Webhooks$ {
  /** @deprecated use `Webhooks$inboundSchema` instead. */
  export const inboundSchema = Webhooks$inboundSchema;
  /** @deprecated use `Webhooks$outboundSchema` instead. */
  export const outboundSchema = Webhooks$outboundSchema;
  /** @deprecated use `Webhooks$Outbound` instead. */
  export type Outbound = Webhooks$Outbound;
}

export function webhooksToJSON(webhooks: Webhooks): string {
  return JSON.stringify(Webhooks$outboundSchema.parse(webhooks));
}

export function webhooksFromJSON(
  jsonString: string,
): SafeParseResult<Webhooks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Webhooks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Webhooks' from JSON`,
  );
}

/** @internal */
export const WorkspaceType$inboundSchema: z.ZodNativeEnum<
  typeof WorkspaceType
> = z.nativeEnum(WorkspaceType);

/** @internal */
export const WorkspaceType$outboundSchema: z.ZodNativeEnum<
  typeof WorkspaceType
> = WorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkspaceType$ {
  /** @deprecated use `WorkspaceType$inboundSchema` instead. */
  export const inboundSchema = WorkspaceType$inboundSchema;
  /** @deprecated use `WorkspaceType$outboundSchema` instead. */
  export const outboundSchema = WorkspaceType$outboundSchema;
}

/** @internal */
export const Workspaces$inboundSchema: z.ZodType<
  Workspaces,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  industry: z.string().optional(),
  domain: z.string().optional(),
  gdprCompliant: z.boolean().optional(),
  hipaaCompliant: z.boolean().optional(),
  soc2Compliant: z.boolean().optional(),
  storageQuota: z.string().optional(),
  usedStorage: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  workflows: z.array(z.lazy(() => Workflows$inboundSchema)).optional(),
  jobsRunThisMonth: z.number().int().optional(),
  workspaceJobLimit: z.number().int().optional(),
  dailyJobQuota: z.number().int().optional(),
  activeScrapers: z.number().int().optional(),
  totalLeadsCollected: z.number().int().optional(),
  lastJobRun: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  scrapingJobs: z.array(z.lazy(() => ScrapingJobs$inboundSchema)).optional(),
  apiKeys: z.array(z.lazy(() => ApiKeys$inboundSchema)).optional(),
  webhooks: z.array(z.lazy(() => Webhooks$inboundSchema)).optional(),
  workspaceType: WorkspaceType$inboundSchema.default(
    "WORKSPACE_TYPE_UNSPECIFIED",
  ),
  description: z.string().optional(),
  metadata: z.record(z.string()).optional(),
  tags: z.array(z.string()).optional(),
  maxTeamMembers: z.number().int().optional(),
  currentTeamMembers: z.number().int().optional(),
  allowGuestAccess: z.boolean().optional(),
  allowedEmailDomains: z.array(z.string()).optional(),
  exportFormats: z.array(z.string()).optional(),
  exportSchedule: z.string().optional(),
  exportDestinations: z.array(z.string()).optional(),
  exportDestinationConfig: z.record(z.string()).optional(),
  compressExports: z.boolean().optional(),
  compressionFormat: z.string().optional(),
  salesforceEnabled: z.boolean().optional(),
  salesforceConfig: z.string().optional(),
  hubspotEnabled: z.boolean().optional(),
  hubspotConfig: z.string().optional(),
  zapierEnabled: z.boolean().optional(),
  zapierWebhook: z.string().optional(),
  activeIntegrations: z.array(z.string()).optional(),
  integrationSettings: z.record(z.string()).optional(),
});

/** @internal */
export type Workspaces$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  workflows?: Array<Workflows$Outbound> | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: string | undefined;
  scrapingJobs?: Array<ScrapingJobs$Outbound> | undefined;
  apiKeys?: Array<ApiKeys$Outbound> | undefined;
  webhooks?: Array<Webhooks$Outbound> | undefined;
  workspaceType: string;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

/** @internal */
export const Workspaces$outboundSchema: z.ZodType<
  Workspaces$Outbound,
  z.ZodTypeDef,
  Workspaces
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  industry: z.string().optional(),
  domain: z.string().optional(),
  gdprCompliant: z.boolean().optional(),
  hipaaCompliant: z.boolean().optional(),
  soc2Compliant: z.boolean().optional(),
  storageQuota: z.string().optional(),
  usedStorage: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  workflows: z.array(z.lazy(() => Workflows$outboundSchema)).optional(),
  jobsRunThisMonth: z.number().int().optional(),
  workspaceJobLimit: z.number().int().optional(),
  dailyJobQuota: z.number().int().optional(),
  activeScrapers: z.number().int().optional(),
  totalLeadsCollected: z.number().int().optional(),
  lastJobRun: z.date().transform(v => v.toISOString()).optional(),
  scrapingJobs: z.array(z.lazy(() => ScrapingJobs$outboundSchema)).optional(),
  apiKeys: z.array(z.lazy(() => ApiKeys$outboundSchema)).optional(),
  webhooks: z.array(z.lazy(() => Webhooks$outboundSchema)).optional(),
  workspaceType: WorkspaceType$outboundSchema.default(
    "WORKSPACE_TYPE_UNSPECIFIED",
  ),
  description: z.string().optional(),
  metadata: z.record(z.string()).optional(),
  tags: z.array(z.string()).optional(),
  maxTeamMembers: z.number().int().optional(),
  currentTeamMembers: z.number().int().optional(),
  allowGuestAccess: z.boolean().optional(),
  allowedEmailDomains: z.array(z.string()).optional(),
  exportFormats: z.array(z.string()).optional(),
  exportSchedule: z.string().optional(),
  exportDestinations: z.array(z.string()).optional(),
  exportDestinationConfig: z.record(z.string()).optional(),
  compressExports: z.boolean().optional(),
  compressionFormat: z.string().optional(),
  salesforceEnabled: z.boolean().optional(),
  salesforceConfig: z.string().optional(),
  hubspotEnabled: z.boolean().optional(),
  hubspotConfig: z.string().optional(),
  zapierEnabled: z.boolean().optional(),
  zapierWebhook: z.string().optional(),
  activeIntegrations: z.array(z.string()).optional(),
  integrationSettings: z.record(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Workspaces$ {
  /** @deprecated use `Workspaces$inboundSchema` instead. */
  export const inboundSchema = Workspaces$inboundSchema;
  /** @deprecated use `Workspaces$outboundSchema` instead. */
  export const outboundSchema = Workspaces$outboundSchema;
  /** @deprecated use `Workspaces$Outbound` instead. */
  export type Outbound = Workspaces$Outbound;
}

export function workspacesToJSON(workspaces: Workspaces): string {
  return JSON.stringify(Workspaces$outboundSchema.parse(workspaces));
}

export function workspacesFromJSON(
  jsonString: string,
): SafeParseResult<Workspaces, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Workspaces$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Workspaces' from JSON`,
  );
}

/** @internal */
export const Settings$inboundSchema: z.ZodType<
  Settings,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  emailNotifications: z.boolean().optional(),
  slackNotifications: z.boolean().optional(),
  defaultDataRetention: z.string().optional(),
  autoPurgeEnabled: z.boolean().optional(),
  require2fa: z.boolean().optional(),
  sessionTimeout: z.string().optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type Settings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const Settings$outboundSchema: z.ZodType<
  Settings$Outbound,
  z.ZodTypeDef,
  Settings
> = z.object({
  id: z.string().optional(),
  emailNotifications: z.boolean().optional(),
  slackNotifications: z.boolean().optional(),
  defaultDataRetention: z.string().optional(),
  autoPurgeEnabled: z.boolean().optional(),
  require2fa: z.boolean().optional(),
  sessionTimeout: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Settings$ {
  /** @deprecated use `Settings$inboundSchema` instead. */
  export const inboundSchema = Settings$inboundSchema;
  /** @deprecated use `Settings$outboundSchema` instead. */
  export const outboundSchema = Settings$outboundSchema;
  /** @deprecated use `Settings$Outbound` instead. */
  export type Outbound = Settings$Outbound;
}

export function settingsToJSON(settings: Settings): string {
  return JSON.stringify(Settings$outboundSchema.parse(settings));
}

export function settingsFromJSON(
  jsonString: string,
): SafeParseResult<Settings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Settings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Settings' from JSON`,
  );
}

/** @internal */
export const Account$inboundSchema: z.ZodType<Account, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus: AccountStatus$inboundSchema.default(
      "ACCOUNT_STATUS_UNSPECIFIED",
    ),
    roles: z.array(Roles$inboundSchema).optional(),
    permissions: z.array(Permissions$inboundSchema).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone: Timezone$inboundSchema.default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(z.lazy(() => Workspaces$inboundSchema)).optional(),
    settings: z.lazy(() => Settings$inboundSchema).optional(),
  });

/** @internal */
export type Account$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?: Array<Workspaces$Outbound> | undefined;
  settings?: Settings$Outbound | undefined;
};

/** @internal */
export const Account$outboundSchema: z.ZodType<
  Account$Outbound,
  z.ZodTypeDef,
  Account
> = z.object({
  id: z.string().optional(),
  authPlatformUserId: z.string().optional(),
  email: z.string().optional(),
  deletedAt: z.date().transform(v => v.toISOString()).optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  accountStatus: AccountStatus$outboundSchema.default(
    "ACCOUNT_STATUS_UNSPECIFIED",
  ),
  roles: z.array(Roles$outboundSchema).optional(),
  permissions: z.array(Permissions$outboundSchema).optional(),
  mfaEnabled: z.boolean().optional(),
  lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
  timezone: Timezone$outboundSchema.default("TIMEZONE_UNSPECIFIED"),
  totalJobsRun: z.number().int().optional(),
  monthlyJobLimit: z.number().int().optional(),
  concurrentJobLimit: z.number().int().optional(),
  workspaces: z.array(z.lazy(() => Workspaces$outboundSchema)).optional(),
  settings: z.lazy(() => Settings$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Account$ {
  /** @deprecated use `Account$inboundSchema` instead. */
  export const inboundSchema = Account$inboundSchema;
  /** @deprecated use `Account$outboundSchema` instead. */
  export const outboundSchema = Account$outboundSchema;
  /** @deprecated use `Account$Outbound` instead. */
  export type Outbound = Account$Outbound;
}

export function accountToJSON(account: Account): string {
  return JSON.stringify(Account$outboundSchema.parse(account));
}

export function accountFromJSON(
  jsonString: string,
): SafeParseResult<Account, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Account$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Account' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account: z.lazy(() => Account$inboundSchema).optional(),
    initialWorkspaceName: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$Outbound = {
  account?: Account$Outbound | undefined;
  initialWorkspaceName?: string | undefined;
  organizationId?: string | undefined;
  tenantId?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody
  > = z.object({
    account: z.lazy(() => Account$outboundSchema).optional(),
    initialWorkspaceName: z.string().optional(),
    organizationId: z.string().optional(),
    tenantId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsRequestBodyToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsRequestBody:
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsRequestBody,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus
  > = PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRoles$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsRoles> = z
    .nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsRoles);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsRoles$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsRoles> =
    PostApiLeadScraperMicroserviceApiV1AccountsRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsRoles$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRoles$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRoles$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsRoles$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsRoles$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsPermissions
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsPermissions);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsPermissions
  > = PostApiLeadScraperMicroserviceApiV1AccountsPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsPermissions$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsPermissions$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsPermissions$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsPermissions$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsPermissions$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsTimezone$inboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsTimezone> =
    z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsTimezone);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsTimezone$outboundSchema:
  z.ZodNativeEnum<typeof PostApiLeadScraperMicroserviceApiV1AccountsTimezone> =
    PostApiLeadScraperMicroserviceApiV1AccountsTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsTimezone$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsTimezone$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsTimezone$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsTimezone$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsTimezone$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$outboundSchema
      .parse(
        postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews,
      ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$Outbound
    >
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsJobsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsJobs:
    PostApiLeadScraperMicroserviceApiV1AccountsJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsJobs$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsJobs,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat
  > = PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: string | undefined;
  lastRunTime?: string | undefined;
  status: string;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  jobs?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsJobs$Outbound>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat: string;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseStatus$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      PostApiLeadScraperMicroserviceApiV1AccountsOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsWorkflowsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsWorkflows:
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsWorkflows,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsWorkflows' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang
  > = PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHoursToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsReviewsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsReviews:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsAccountsReviews),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsLeadsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccountsLeads:
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsAccountsLeads),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$Outbound>
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200Status$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: PostApiLeadScraperMicroserviceApiV1AccountsAccountsLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsAccountsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsScrapingJobsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsScrapingJobs:
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsScrapingJobs),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus
  > =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  scopes?: Array<string> | undefined;
  allowedIps?: Array<string> | undefined;
  allowedDomains?: Array<string> | undefined;
  allowedEnvironments?: Array<string> | undefined;
  isTestKey?: boolean | undefined;
  requestsPerSecond?: number | undefined;
  requestsPerDay?: number | undefined;
  concurrentRequests?: number | undefined;
  monthlyRequestQuota?: string | undefined;
  costPerRequest?: number | undefined;
  billingTier?: string | undefined;
  totalRequests?: string | undefined;
  totalErrors?: string | undefined;
  lastUsedAt?: string | undefined;
  averageResponseTime?: number | undefined;
  endpointUsageJson?: string | undefined;
  errorRatesJson?: string | undefined;
  recentErrors?: string | undefined;
  successfulRequestsCount?: number | undefined;
  successRate?: number | undefined;
  status: string;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  expiresAt?: string | undefined;
  deletedAt?: string | undefined;
  lastRotatedAt?: string | undefined;
  lastSecurityReviewAt?: string | undefined;
  requiresClientSecret?: boolean | undefined;
  clientSecretHash?: string | undefined;
  enforceHttps?: boolean | undefined;
  enforceSigning?: boolean | undefined;
  allowedSignatureAlgorithms?: Array<string> | undefined;
  enforceMutualTls?: boolean | undefined;
  clientCertificateHash?: string | undefined;
  requireRequestSigning?: boolean | undefined;
  description?: string | undefined;
  metadataJson?: string | undefined;
  tags?: Array<string> | undefined;
  apiVersion?: string | undefined;
  supportedFeatures?: Array<string> | undefined;
  documentationUrl?: string | undefined;
  supportContact?: string | undefined;
  logAllRequests?: boolean | undefined;
  lastRotationReason?: string | undefined;
  lastRotationDate?: string | undefined;
  rotationFrequencyDays?: number | undefined;
  complianceStandards?: Array<string> | undefined;
  requiresAuditLogging?: boolean | undefined;
  dataResidency?: string | undefined;
  approvedIntegrations?: Array<string> | undefined;
  alertEmails?: Array<string> | undefined;
  webhookUrl?: string | undefined;
  alertOnQuotaThreshold?: boolean | undefined;
  quotaAlertThreshold?: number | undefined;
  alertOnErrorSpike?: boolean | undefined;
  errorAlertThreshold?: number | undefined;
  monitoringIntegrations?: Array<string> | undefined;
  encrypted?: boolean | undefined;
  dataClassification?: string | undefined;
  maxUses?: number | undefined;
  rateLimit?: number | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountsResponse200ApplicationJSONStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsApiKeysToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsApiKeys:
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsApiKeys,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsApiKeys' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents
  > = PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields
  > = PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat
  > = PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsMetadata$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsMetadata$Outbound = {};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsMetadata$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsMetadata$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsMetadata$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsMetadataToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsMetadata:
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsMetadata$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsMetadata,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsMetadata' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$Outbound = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?: Array<string> | undefined;
  includedFields?: Array<string> | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat: string;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastTriggeredAt?: string | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | PostApiLeadScraperMicroserviceApiV1AccountsMetadata$Outbound
    | undefined;
  webhookName?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      PostApiLeadScraperMicroserviceApiV1AccountsPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsWebhooksToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsWebhooks:
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsWebhooks,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsWebhooks' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType
  > = z.nativeEnum(PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType);

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType
  > = PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$outboundSchema;
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  workflows?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$Outbound>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: string | undefined;
  scrapingJobs?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$Outbound>
    | undefined;
  apiKeys?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$Outbound>
    | undefined;
  webhooks?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$Outbound>
    | undefined;
  workspaceType: string;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      PostApiLeadScraperMicroserviceApiV1AccountsWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsWorkspacesToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsWorkspaces:
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsWorkspaces,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsSettings$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsSettings$Outbound = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsSettings$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsSettings$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsSettings$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSettings$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsSettings$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSettings$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsSettings$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsSettings$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsSettings$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsSettingsToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsSettings:
    PostApiLeadScraperMicroserviceApiV1AccountsSettings,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsSettings$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsSettings,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsSettings' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccount$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccount,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone: PostApiLeadScraperMicroserviceApiV1AccountsTimezone$inboundSchema
      .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsAccount$Outbound = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: string | undefined;
  createdAt?: string | undefined;
  accountStatus: string;
  roles?: Array<string> | undefined;
  permissions?: Array<string> | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: string | undefined;
  timezone: string;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$Outbound>
    | undefined;
  settings?:
    | PostApiLeadScraperMicroserviceApiV1AccountsSettings$Outbound
    | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsAccount$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsAccount$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsAccount
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      PostApiLeadScraperMicroserviceApiV1AccountsAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      PostApiLeadScraperMicroserviceApiV1AccountsPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone: PostApiLeadScraperMicroserviceApiV1AccountsTimezone$outboundSchema
      .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        PostApiLeadScraperMicroserviceApiV1AccountsWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsAccount$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccount$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccount$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccount$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsAccount$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsAccount$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsAccount$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsAccount:
    PostApiLeadScraperMicroserviceApiV1AccountsAccount,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsAccount$outboundSchema.parse(
      postApiLeadScraperMicroserviceApiV1AccountsAccount,
    ),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsAccountFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsAccount,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccount$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsAccount' from JSON`,
  );
}

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$inboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccount$inboundSchema
    ).optional(),
    initialWorkspaceId: z.string().optional(),
  });

/** @internal */
export type PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$Outbound = {
  account?:
    | PostApiLeadScraperMicroserviceApiV1AccountsAccount$Outbound
    | undefined;
  initialWorkspaceId?: string | undefined;
};

/** @internal */
export const PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$outboundSchema:
  z.ZodType<
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$Outbound,
    z.ZodTypeDef,
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody
  > = z.object({
    account: z.lazy(() =>
      PostApiLeadScraperMicroserviceApiV1AccountsAccount$outboundSchema
    ).optional(),
    initialWorkspaceId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$ {
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$inboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$outboundSchema;
  /** @deprecated use `PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$Outbound` instead. */
  export type Outbound =
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$Outbound;
}

export function postApiLeadScraperMicroserviceApiV1AccountsResponseBodyToJSON(
  postApiLeadScraperMicroserviceApiV1AccountsResponseBody:
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody,
): string {
  return JSON.stringify(
    PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$outboundSchema
      .parse(postApiLeadScraperMicroserviceApiV1AccountsResponseBody),
  );
}

export function postApiLeadScraperMicroserviceApiV1AccountsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiLeadScraperMicroserviceApiV1AccountsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiLeadScraperMicroserviceApiV1AccountsResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiLeadScraperMicroserviceApiV1AccountsResponseBody' from JSON`,
  );
}
