/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes =
  {
    TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
    TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
    TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
    TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
    TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
    TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
    TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
    TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
    TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
    TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
    TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
    TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
    TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
    TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
    TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
    TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
    TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
    TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus
      | undefined;
    scopes?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes
      >
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody =
  {
    apiKey?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey
      | undefined;
  };

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus
  >;

export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes =
  {
    TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
    TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
    TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
    TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
    TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
    TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
    TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
    TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
    TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
    TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
    TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
    TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
    TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
    TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
    TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
    TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
    TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
    TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
  } as const;
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes =
  ClosedEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes
  >;

export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus
      | undefined;
    scopes?:
      | Array<
        PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes
      >
      | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

/**
 * Updates an existing tenant API key&#x27;s configuration
 */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody =
  {
    apiKey?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKeyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKeyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    apiKey: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$Outbound =
  {
    apiKey?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody
  > = z.object({
    apiKey: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysApiKey$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes
  > = z.nativeEnum(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes,
  );

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes
  > =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$outboundSchema;
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$Outbound =
  {
    id?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    status: string;
    scopes?: Array<string> | undefined;
    maxUses?: number | undefined;
    allowedIps?: Array<string> | undefined;
    useCount?: number | undefined;
    expiresAt?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKeyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKeyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey' from JSON`,
  );
}

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$inboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    apiKey: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$inboundSchema
    ).optional(),
  });

/** @internal */
export type PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$Outbound =
  {
    apiKey?:
      | PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$Outbound
      | undefined;
  };

/** @internal */
export const PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$outboundSchema:
  z.ZodType<
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$Outbound,
    z.ZodTypeDef,
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody
  > = z.object({
    apiKey: z.lazy(() =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysTenantApiKeysApiKey$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$ {
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$inboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$outboundSchema;
  /** @deprecated use `PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$Outbound` instead. */
  export type Outbound =
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$Outbound;
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBodyToJSON(
  putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody:
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody,
): string {
  return JSON.stringify(
    PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$outboundSchema
      .parse(
        putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody,
      ),
  );
}

export function putApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody' from JSON`,
  );
}
