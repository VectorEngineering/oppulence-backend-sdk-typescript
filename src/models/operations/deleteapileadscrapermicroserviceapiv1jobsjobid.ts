/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest = {
  jobId: string;
  userId: string;
  orgId: string;
  tenantId: string;
};

/**
 * This endpoint deletes a specific Google Maps scraping job
 */
export type DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody = {
  success?: boolean | undefined;
};

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    jobId: z.string(),
    userId: z.string(),
    orgId: z.string(),
    tenantId: z.string(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$Outbound = {
  jobId: string;
  userId: string;
  orgId: string;
  tenantId: string;
};

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest
  > = z.object({
    jobId: z.string(),
    userId: z.string(),
    orgId: z.string(),
    tenantId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1JobsJobIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$outboundSchema.parse(
      deleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest,
    ),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1JobsJobIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1JobsJobIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1JobsJobIdResponseBody' from JSON`,
  );
}
