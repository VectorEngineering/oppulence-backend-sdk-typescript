/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest = {
  id: string;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan = {
  BillingPlanUnspecified: "BILLING_PLAN_UNSPECIFIED",
  BillingPlanStartup: "BILLING_PLAN_STARTUP",
  BillingPlanBusiness: "BILLING_PLAN_BUSINESS",
  BillingPlanEnterprise: "BILLING_PLAN_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus = {
  AccountStatusUnspecified: "ACCOUNT_STATUS_UNSPECIFIED",
  AccountStatusActive: "ACCOUNT_STATUS_ACTIVE",
  AccountStatusSuspended: "ACCOUNT_STATUS_SUSPENDED",
  AccountStatusPendingVerification: "ACCOUNT_STATUS_PENDING_VERIFICATION",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles = {
  RoleUnspecified: "ROLE_UNSPECIFIED",
  RoleAdmin: "ROLE_ADMIN",
  RoleUser: "ROLE_USER",
  RoleViewer: "ROLE_VIEWER",
  RoleManager: "ROLE_MANAGER",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions = {
  PermissionUnspecified: "PERMISSION_UNSPECIFIED",
  PermissionRead: "PERMISSION_READ",
  PermissionWrite: "PERMISSION_WRITE",
  PermissionDelete: "PERMISSION_DELETE",
  PermissionManageUsers: "PERMISSION_MANAGE_USERS",
  PermissionManageBilling: "PERMISSION_MANAGE_BILLING",
  PermissionViewAnalytics: "PERMISSION_VIEW_ANALYTICS",
  PermissionManageWorkflows: "PERMISSION_MANAGE_WORKFLOWS",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone = {
  TimezoneUnspecified: "TIMEZONE_UNSPECIFIED",
  TimezoneUtc: "TIMEZONE_UTC",
  TimezoneEst: "TIMEZONE_EST",
  TimezoneCst: "TIMEZONE_CST",
  TimezoneMst: "TIMEZONE_MST",
  TimezonePst: "TIMEZONE_PST",
  TimezoneGmt: "TIMEZONE_GMT",
  TimezoneCet: "TIMEZONE_CET",
  TimezoneIst: "TIMEZONE_IST",
  TimezoneJst: "TIMEZONE_JST",
  TimezoneAest: "TIMEZONE_AEST",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status =
  {
    WorkflowStatusUnspecified: "WORKFLOW_STATUS_UNSPECIFIED",
    WorkflowStatusDraft: "WORKFLOW_STATUS_DRAFT",
    WorkflowStatusActive: "WORKFLOW_STATUS_ACTIVE",
    WorkflowStatusPaused: "WORKFLOW_STATUS_PAUSED",
    WorkflowStatusFailed: "WORKFLOW_STATUS_FAILED",
    WorkflowStatusCompleted: "WORKFLOW_STATUS_COMPLETED",
    WorkflowStatusArchived: "WORKFLOW_STATUS_ARCHIVED",
    WorkflowStatusPendingApproval: "WORKFLOW_STATUS_PENDING_APPROVAL",
    WorkflowStatusValidating: "WORKFLOW_STATUS_VALIDATING",
    WorkflowStatusQuotaExceeded: "WORKFLOW_STATUS_QUOTA_EXCEEDED",
    WorkflowStatusWarning: "WORKFLOW_STATUS_WARNING",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang =
  {
    LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
    LanguageEnglish: "LANGUAGE_ENGLISH",
    LanguageSpanish: "LANGUAGE_SPANISH",
    LanguageFrench: "LANGUAGE_FRENCH",
    LanguageGerman: "LANGUAGE_GERMAN",
    LanguageItalian: "LANGUAGE_ITALIAN",
    LanguagePortuguese: "LANGUAGE_PORTUGUESE",
    LanguageDutch: "LANGUAGE_DUTCH",
    LanguageRussian: "LANGUAGE_RUSSIAN",
    LanguageChinese: "LANGUAGE_CHINESE",
    LanguageJapanese: "LANGUAGE_JAPANESE",
    LanguageKorean: "LANGUAGE_KOREAN",
    LanguageArabic: "LANGUAGE_ARABIC",
    LanguageHindi: "LANGUAGE_HINDI",
    LanguageGreek: "LANGUAGE_GREEK",
    LanguageTurkish: "LANGUAGE_TURKISH",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours =
  {
    id?: string | undefined;
    day?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day
      | undefined;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: Date | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange =
  {
    RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
    RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
    RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
    RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
    RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
    RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: Date | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange
      | undefined;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits
      >
      | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: Date | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang
    | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat = {
  OutputFormatUnspecified: "OUTPUT_FORMAT_UNSPECIFIED",
  OutputFormatJson: "OUTPUT_FORMAT_JSON",
  OutputFormatCsv: "OUTPUT_FORMAT_CSV",
  OutputFormatBigquery: "OUTPUT_FORMAT_BIGQUERY",
  OutputFormatPostgres: "OUTPUT_FORMAT_POSTGRES",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows = {
  id?: string | undefined;
  name?: string | undefined;
  cronExpression?: string | undefined;
  nextRunTime?: Date | undefined;
  lastRunTime?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status
    | undefined;
  retryCount?: number | undefined;
  maxRetries?: number | undefined;
  alertEmails?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  jobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs>
    | undefined;
  geoFencingRadius?: number | undefined;
  geoFencingLat?: number | undefined;
  geoFencingLon?: number | undefined;
  geoFencingZoomMin?: number | undefined;
  geoFencingZoomMax?: number | undefined;
  includeReviews?: boolean | undefined;
  includePhotos?: boolean | undefined;
  includeBusinessHours?: boolean | undefined;
  maxReviewsPerBusiness?: number | undefined;
  outputFormat?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat
    | undefined;
  outputDestination?: string | undefined;
  dataRetention?: string | undefined;
  anonymizePii?: boolean | undefined;
  notificationSlackChannel?: string | undefined;
  notificationEmailGroup?: string | undefined;
  notificationNotifyOnStart?: boolean | undefined;
  notificationNotifyOnComplete?: boolean | undefined;
  notificationNotifyOnFailure?: boolean | undefined;
  contentFilterAllowedCountries?: Array<string> | undefined;
  contentFilterExcludedTypes?: Array<string> | undefined;
  contentFilterMinimumRating?: number | undefined;
  contentFilterMinimumReviews?: number | undefined;
  qosMaxConcurrentRequests?: number | undefined;
  qosMaxRetries?: number | undefined;
  qosRequestTimeout?: string | undefined;
  qosEnableJavascript?: boolean | undefined;
  respectRobotsTxt?: boolean | undefined;
  acceptTermsOfService?: boolean | undefined;
  userAgent?: string | undefined;
  searchTerms?: Array<string> | undefined;
  scheduledEntryId?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus =
  {
    BackgroundJobStatusUnspecified: "BACKGROUND_JOB_STATUS_UNSPECIFIED",
    BackgroundJobStatusQueued: "BACKGROUND_JOB_STATUS_QUEUED",
    BackgroundJobStatusInProgress: "BACKGROUND_JOB_STATUS_IN_PROGRESS",
    BackgroundJobStatusCompleted: "BACKGROUND_JOB_STATUS_COMPLETED",
    BackgroundJobStatusFailed: "BACKGROUND_JOB_STATUS_FAILED",
    BackgroundJobStatusCancelled: "BACKGROUND_JOB_STATUS_CANCELLED",
    BackgroundJobStatusTimedOut: "BACKGROUND_JOB_STATUS_TIMED_OUT",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdLang = {
  LanguageUnspecified: "LANGUAGE_UNSPECIFIED",
  LanguageEnglish: "LANGUAGE_ENGLISH",
  LanguageSpanish: "LANGUAGE_SPANISH",
  LanguageFrench: "LANGUAGE_FRENCH",
  LanguageGerman: "LANGUAGE_GERMAN",
  LanguageItalian: "LANGUAGE_ITALIAN",
  LanguagePortuguese: "LANGUAGE_PORTUGUESE",
  LanguageDutch: "LANGUAGE_DUTCH",
  LanguageRussian: "LANGUAGE_RUSSIAN",
  LanguageChinese: "LANGUAGE_CHINESE",
  LanguageJapanese: "LANGUAGE_JAPANESE",
  LanguageKorean: "LANGUAGE_KOREAN",
  LanguageArabic: "LANGUAGE_ARABIC",
  LanguageHindi: "LANGUAGE_HINDI",
  LanguageGreek: "LANGUAGE_GREEK",
  LanguageTurkish: "LANGUAGE_TURKISH",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdLang = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdLang
>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdDay = {
  DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
  DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
  DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
  DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
  DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
  DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
  DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
  DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdDay = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdDay
>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours = {
  id?: string | undefined;
  day?: GetApiLeadScraperMicroserviceApiV1OrganizationIdDay | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay =
  {
    DayOfWeekUnspecified: "DAY_OF_WEEK_UNSPECIFIED",
    DayOfWeekMonday: "DAY_OF_WEEK_MONDAY",
    DayOfWeekTuesday: "DAY_OF_WEEK_TUESDAY",
    DayOfWeekWednesday: "DAY_OF_WEEK_WEDNESDAY",
    DayOfWeekThursday: "DAY_OF_WEEK_THURSDAY",
    DayOfWeekFriday: "DAY_OF_WEEK_FRIDAY",
    DayOfWeekSaturday: "DAY_OF_WEEK_SATURDAY",
    DayOfWeekSunday: "DAY_OF_WEEK_SUNDAY",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours = {
  id?: string | undefined;
  day?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay
    | undefined;
  openTime?: string | undefined;
  closeTime?: string | undefined;
  closed?: boolean | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: Date | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange = {
  RevenueRangeUnspecified: "REVENUE_RANGE_UNSPECIFIED",
  RevenueRangeUnder100K: "REVENUE_RANGE_UNDER_100K",
  RevenueRange100KTo1M: "REVENUE_RANGE_100K_TO_1M",
  RevenueRange1MTo10M: "REVENUE_RANGE_1M_TO_10M",
  RevenueRange10MTo50M: "REVENUE_RANGE_10M_TO_50M",
  RevenueRangeOver50M: "REVENUE_RANGE_OVER_50M",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits =
  {
    EmployeeBenefitUnspecified: "EMPLOYEE_BENEFIT_UNSPECIFIED",
    EmployeeBenefitHealthInsurance: "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
    EmployeeBenefitRetirementPlan: "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
    EmployeeBenefitPaidTimeOff: "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
    EmployeeBenefitRemoteWork: "EMPLOYEE_BENEFIT_REMOTE_WORK",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours>
    | undefined;
  specialHours?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours>
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: Date | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange
    | undefined;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits>
    | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: Date | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus
    | undefined;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang?: GetApiLeadScraperMicroserviceApiV1OrganizationIdLang | undefined;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  leads?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads>
    | undefined;
  url?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: Date | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus
      | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    expiresAt?: Date | undefined;
    deletedAt?: Date | undefined;
    lastRotatedAt?: Date | undefined;
    lastSecurityReviewAt?: Date | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: Date | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents = {
  TriggerEventUnspecified: "TRIGGER_EVENT_UNSPECIFIED",
  TriggerEventJobStarted: "TRIGGER_EVENT_JOB_STARTED",
  TriggerEventJobCompleted: "TRIGGER_EVENT_JOB_COMPLETED",
  TriggerEventJobFailed: "TRIGGER_EVENT_JOB_FAILED",
  TriggerEventLeadFound: "TRIGGER_EVENT_LEAD_FOUND",
  TriggerEventQuotaExceeded: "TRIGGER_EVENT_QUOTA_EXCEEDED",
  TriggerEventErrorThresholdReached: "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
  TriggerEventRateLimitReached: "TRIGGER_EVENT_RATE_LIMIT_REACHED",
  TriggerEventDataValidationFailed: "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
  TriggerEventNewProxyNeeded: "TRIGGER_EVENT_NEW_PROXY_NEEDED",
  TriggerEventScheduledMaintenance: "TRIGGER_EVENT_SCHEDULED_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields = {
  IncludedFieldUnspecified: "INCLUDED_FIELD_UNSPECIFIED",
  IncludedFieldName: "INCLUDED_FIELD_NAME",
  IncludedFieldWebsite: "INCLUDED_FIELD_WEBSITE",
  IncludedFieldPhone: "INCLUDED_FIELD_PHONE",
  IncludedFieldAddress: "INCLUDED_FIELD_ADDRESS",
  IncludedFieldLocation: "INCLUDED_FIELD_LOCATION",
  IncludedFieldCoordinates: "INCLUDED_FIELD_COORDINATES",
  IncludedFieldGoogleRating: "INCLUDED_FIELD_GOOGLE_RATING",
  IncludedFieldReviewCount: "INCLUDED_FIELD_REVIEW_COUNT",
  IncludedFieldReviews: "INCLUDED_FIELD_REVIEWS",
  IncludedFieldBusinessHours: "INCLUDED_FIELD_BUSINESS_HOURS",
  IncludedFieldBusinessStatus: "INCLUDED_FIELD_BUSINESS_STATUS",
  IncludedFieldPlaceId: "INCLUDED_FIELD_PLACE_ID",
  IncludedFieldGoogleMapsUrl: "INCLUDED_FIELD_GOOGLE_MAPS_URL",
  IncludedFieldPhotos: "INCLUDED_FIELD_PHOTOS",
  IncludedFieldMainPhoto: "INCLUDED_FIELD_MAIN_PHOTO",
  IncludedFieldBusinessTypes: "INCLUDED_FIELD_BUSINESS_TYPES",
  IncludedFieldAmenities: "INCLUDED_FIELD_AMENITIES",
  IncludedFieldPaymentMethods: "INCLUDED_FIELD_PAYMENT_METHODS",
  IncludedFieldSocialProfiles: "INCLUDED_FIELD_SOCIAL_PROFILES",
  IncludedFieldEmployeeCount: "INCLUDED_FIELD_EMPLOYEE_COUNT",
  IncludedFieldRevenueInfo: "INCLUDED_FIELD_REVENUE_INFO",
  IncludedFieldFoundedYear: "INCLUDED_FIELD_FOUNDED_YEAR",
  IncludedFieldCertifications: "INCLUDED_FIELD_CERTIFICATIONS",
  IncludedFieldNaicsCode: "INCLUDED_FIELD_NAICS_CODE",
  IncludedFieldSicCode: "INCLUDED_FIELD_SIC_CODE",
  IncludedFieldScrapingMetadata: "INCLUDED_FIELD_SCRAPING_METADATA",
  IncludedFieldComplianceInfo: "INCLUDED_FIELD_COMPLIANCE_INFO",
  IncludedFieldAlternatePhones: "INCLUDED_FIELD_ALTERNATE_PHONES",
  IncludedFieldContactPerson: "INCLUDED_FIELD_CONTACT_PERSON",
  IncludedFieldContactEmail: "INCLUDED_FIELD_CONTACT_EMAIL",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat = {
  PayloadFormatUnspecified: "PAYLOAD_FORMAT_UNSPECIFIED",
  PayloadFormatJson: "PAYLOAD_FORMAT_JSON",
  PayloadFormatXml: "PAYLOAD_FORMAT_XML",
  PayloadFormatFormData: "PAYLOAD_FORMAT_FORM_DATA",
  PayloadFormatProtobuf: "PAYLOAD_FORMAT_PROTOBUF",
  PayloadFormatYaml: "PAYLOAD_FORMAT_YAML",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata = {};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks = {
  id?: string | undefined;
  url?: string | undefined;
  authType?: string | undefined;
  authToken?: string | undefined;
  customHeaders?: { [k: string]: string } | undefined;
  maxRetries?: number | undefined;
  retryInterval?: string | undefined;
  triggerEvents?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents>
    | undefined;
  includedFields?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields>
    | undefined;
  includeFullResults?: boolean | undefined;
  payloadFormat?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat
    | undefined;
  verifySsl?: boolean | undefined;
  signingSecret?: string | undefined;
  rateLimit?: number | undefined;
  rateLimitInterval?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastTriggeredAt?: Date | undefined;
  successfulCalls?: number | undefined;
  failedCalls?: number | undefined;
  metadata?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata
    | undefined;
  webhookName?: string | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType = {
  WorkspaceTypeUnspecified: "WORKSPACE_TYPE_UNSPECIFIED",
  WorkspaceTypePersonal: "WORKSPACE_TYPE_PERSONAL",
  WorkspaceTypeTeam: "WORKSPACE_TYPE_TEAM",
  WorkspaceTypeEnterprise: "WORKSPACE_TYPE_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces = {
  id?: string | undefined;
  name?: string | undefined;
  industry?: string | undefined;
  domain?: string | undefined;
  gdprCompliant?: boolean | undefined;
  hipaaCompliant?: boolean | undefined;
  soc2Compliant?: boolean | undefined;
  storageQuota?: string | undefined;
  usedStorage?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  workflows?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows>
    | undefined;
  jobsRunThisMonth?: number | undefined;
  workspaceJobLimit?: number | undefined;
  dailyJobQuota?: number | undefined;
  activeScrapers?: number | undefined;
  totalLeadsCollected?: number | undefined;
  lastJobRun?: Date | undefined;
  scrapingJobs?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs>
    | undefined;
  apiKeys?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys
    >
    | undefined;
  webhooks?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks>
    | undefined;
  workspaceType?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType
    | undefined;
  description?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  tags?: Array<string> | undefined;
  maxTeamMembers?: number | undefined;
  currentTeamMembers?: number | undefined;
  allowGuestAccess?: boolean | undefined;
  allowedEmailDomains?: Array<string> | undefined;
  exportFormats?: Array<string> | undefined;
  exportSchedule?: string | undefined;
  exportDestinations?: Array<string> | undefined;
  exportDestinationConfig?: { [k: string]: string } | undefined;
  compressExports?: boolean | undefined;
  compressionFormat?: string | undefined;
  salesforceEnabled?: boolean | undefined;
  salesforceConfig?: string | undefined;
  hubspotEnabled?: boolean | undefined;
  hubspotConfig?: string | undefined;
  zapierEnabled?: boolean | undefined;
  zapierWebhook?: string | undefined;
  activeIntegrations?: Array<string> | undefined;
  integrationSettings?: { [k: string]: string } | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings = {
  id?: string | undefined;
  emailNotifications?: boolean | undefined;
  slackNotifications?: boolean | undefined;
  defaultDataRetention?: string | undefined;
  autoPurgeEnabled?: boolean | undefined;
  require2fa?: boolean | undefined;
  sessionTimeout?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts = {
  id?: string | undefined;
  authPlatformUserId?: string | undefined;
  email?: string | undefined;
  deletedAt?: Date | undefined;
  createdAt?: Date | undefined;
  accountStatus?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus
    | undefined;
  roles?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles>
    | undefined;
  permissions?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions>
    | undefined;
  mfaEnabled?: boolean | undefined;
  lastLoginAt?: Date | undefined;
  timezone?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone
    | undefined;
  totalJobsRun?: number | undefined;
  monthlyJobLimit?: number | undefined;
  concurrentJobLimit?: number | undefined;
  workspaces?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces>
    | undefined;
  settings?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings
    | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes = {
  TenantApiKeyScopeUnspecified: "TENANT_API_KEY_SCOPE_UNSPECIFIED",
  TenantApiKeyScopeReadJobs: "TENANT_API_KEY_SCOPE_READ_JOBS",
  TenantApiKeyScopeReadLeads: "TENANT_API_KEY_SCOPE_READ_LEADS",
  TenantApiKeyScopeReadWorkflows: "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
  TenantApiKeyScopeReadAnalytics: "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
  TenantApiKeyScopeReadSettings: "TENANT_API_KEY_SCOPE_READ_SETTINGS",
  TenantApiKeyScopeWriteJobs: "TENANT_API_KEY_SCOPE_WRITE_JOBS",
  TenantApiKeyScopeWriteLeads: "TENANT_API_KEY_SCOPE_WRITE_LEADS",
  TenantApiKeyScopeWriteWorkflows: "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
  TenantApiKeyScopeWriteSettings: "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
  TenantApiKeyScopeDeleteJobs: "TENANT_API_KEY_SCOPE_DELETE_JOBS",
  TenantApiKeyScopeDeleteLeads: "TENANT_API_KEY_SCOPE_DELETE_LEADS",
  TenantApiKeyScopeDeleteWorkflows: "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
  TenantApiKeyScopeExportData: "TENANT_API_KEY_SCOPE_EXPORT_DATA",
  TenantApiKeyScopeManageKeys: "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
  TenantApiKeyScopeBillingRead: "TENANT_API_KEY_SCOPE_BILLING_READ",
  TenantApiKeyScopeBillingWrite: "TENANT_API_KEY_SCOPE_BILLING_WRITE",
  TenantApiKeyScopeAdmin: "TENANT_API_KEY_SCOPE_ADMIN",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes
>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys = {
  id?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus
    | undefined;
  scopes?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes>
    | undefined;
  maxUses?: number | undefined;
  allowedIps?: Array<string> | undefined;
  useCount?: number | undefined;
  expiresAt?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus =
  {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusActive: "STATUS_ACTIVE",
    StatusSuspended: "STATUS_SUSPENDED",
    StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
    StatusRevoked: "STATUS_REVOKED",
    StatusExpired: "STATUS_EXPIRED",
    StatusRateLimited: "STATUS_RATE_LIMITED",
    StatusPendingReview: "STATUS_PENDING_REVIEW",
    StatusDeprecated: "STATUS_DEPRECATED",
    StatusMaintenance: "STATUS_MAINTENANCE",
  } as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  status?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus
    | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier = {
  PlanTierUnspecified: "PLAN_TIER_UNSPECIFIED",
  PlanTierFree: "PLAN_TIER_FREE",
  PlanTierStarter: "PLAN_TIER_STARTER",
  PlanTierProfessional: "PLAN_TIER_PROFESSIONAL",
  PlanTierEnterprise: "PLAN_TIER_ENTERPRISE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier =
  ClosedEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier>;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode = {
  BillingModeUnspecified: "BILLING_MODE_UNSPECIFIED",
  BillingModeLicensed: "BILLING_MODE_LICENSED",
  BillingModeMetered: "BILLING_MODE_METERED",
  BillingModeHybrid: "BILLING_MODE_HYBRID",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval = {
  IntervalUnspecified: "INTERVAL_UNSPECIFIED",
  IntervalMonthly: "INTERVAL_MONTHLY",
  IntervalYearly: "INTERVAL_YEARLY",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval
  >;

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus = {
  PaymentStatusUnspecified: "PAYMENT_STATUS_UNSPECIFIED",
  PaymentStatusPaid: "PAYMENT_STATUS_PAID",
  PaymentStatusPastDue: "PAYMENT_STATUS_PAST_DUE",
  PaymentStatusFailed: "PAYMENT_STATUS_FAILED",
  PaymentStatusCanceled: "PAYMENT_STATUS_CANCELED",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus =
  ClosedEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus
  >;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions = {
  id?: string | undefined;
  stripeCustomerId?: string | undefined;
  stripeSubscriptionId?: string | undefined;
  stripePriceId?: string | undefined;
  stripeProductId?: string | undefined;
  planTier?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier
    | undefined;
  billingMode?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode
    | undefined;
  includedJobs?: number | undefined;
  perJobRate?: number | undefined;
  maxConcurrentJobs?: number | undefined;
  includedStorage?: string | undefined;
  perGbRate?: number | undefined;
  advancedFilteringEnabled?: boolean | undefined;
  prioritySupportEnabled?: boolean | undefined;
  customExportsEnabled?: boolean | undefined;
  apiAccessEnabled?: boolean | undefined;
  customProxiesEnabled?: boolean | undefined;
  advancedAnalyticsEnabled?: boolean | undefined;
  retentionDays?: number | undefined;
  maxResultsPerJob?: number | undefined;
  currentPeriodStart?: Date | undefined;
  currentPeriodEnd?: Date | undefined;
  currentPeriodUsage?: number | undefined;
  currency?: string | undefined;
  basePrice?: number | undefined;
  billingInterval?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval
    | undefined;
  autoRenew?: boolean | undefined;
  paymentStatus?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus
    | undefined;
  isTrial?: boolean | undefined;
  trialStart?: Date | undefined;
  trialEnd?: Date | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  canceledAt?: Date | undefined;
  endedAt?: Date | undefined;
};

export const GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus = {
  StatusUnspecified: "STATUS_UNSPECIFIED",
  StatusActive: "STATUS_ACTIVE",
  StatusSuspended: "STATUS_SUSPENDED",
  StatusPendingVerification: "STATUS_PENDING_VERIFICATION",
  StatusRevoked: "STATUS_REVOKED",
  StatusExpired: "STATUS_EXPIRED",
  StatusRateLimited: "STATUS_RATE_LIMITED",
  StatusPendingReview: "STATUS_PENDING_REVIEW",
  StatusDeprecated: "STATUS_DEPRECATED",
  StatusMaintenance: "STATUS_MAINTENANCE",
} as const;
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus = ClosedEnum<
  typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus
>;

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  website?: string | undefined;
  description?: string | undefined;
  billingEmail?: string | undefined;
  technicalEmail?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  ssoEnabled?: boolean | undefined;
  ssoProvider?: string | undefined;
  ssoDomain?: string | undefined;
  allowedDomains?: Array<string> | undefined;
  enforce2fa?: boolean | undefined;
  billingPlan?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan
    | undefined;
  billingCurrency?: string | undefined;
  autoBilling?: boolean | undefined;
  taxId?: string | undefined;
  complianceFrameworks?: Array<string> | undefined;
  dataProcessingAgreement?: boolean | undefined;
  dataRegion?: string | undefined;
  maxTenants?: number | undefined;
  totalStorageLimit?: string | undefined;
  maxApiKeys?: number | undefined;
  maxUsers?: number | undefined;
  tenants?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants>
    | undefined;
  subscriptions?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions
    | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  deletedAt?: Date | undefined;
  createdBy?: string | undefined;
  status?: GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus | undefined;
};

export type GetApiLeadScraperMicroserviceApiV1OrganizationIdData = {
  organization?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization
    | undefined;
};

/**
 * Retrieves details of a specific organization
 */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody = {
  data: GetApiLeadScraperMicroserviceApiV1OrganizationIdData;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdRequestToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdRequest:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdRequest),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdRequest' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Day$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$Outbound =
  {
    id?: string | undefined;
    author?: string | undefined;
    rating?: number | undefined;
    text?: string | undefined;
    time?: string | undefined;
    language?: string | undefined;
    profilePhotoUrl?: string | undefined;
    reviewCount?: number | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    website?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    city?: string | undefined;
    state?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    googleRating?: number | undefined;
    reviewCount?: number | undefined;
    industry?: string | undefined;
    employeeCount?: number | undefined;
    estimatedRevenue?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    placeId?: string | undefined;
    googleMapsUrl?: string | undefined;
    businessStatus?: string | undefined;
    regularHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$Outbound
      >
      | undefined;
    specialHours?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$Outbound
      >
      | undefined;
    photoReferences?: Array<string> | undefined;
    mainPhotoUrl?: string | undefined;
    reviews?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$Outbound
      >
      | undefined;
    types?: Array<string> | undefined;
    amenities?: Array<string> | undefined;
    servesVegetarianFood?: boolean | undefined;
    outdoorSeating?: boolean | undefined;
    paymentMethods?: Array<string> | undefined;
    wheelchairAccessible?: boolean | undefined;
    parkingAvailable?: boolean | undefined;
    socialMedia?: { [k: string]: string } | undefined;
    ratingCategory?: string | undefined;
    rating?: number | undefined;
    count?: number | undefined;
    lastUpdated?: string | undefined;
    dataSourceVersion?: string | undefined;
    scrapingSessionId?: string | undefined;
    alternatePhones?: Array<string> | undefined;
    contactPersonName?: string | undefined;
    contactPersonTitle?: string | undefined;
    contactEmail?: string | undefined;
    foundedYear?: number | undefined;
    businessType?: string | undefined;
    certifications?: Array<string> | undefined;
    licenseNumber?: string | undefined;
    revenueRange: string;
    fundingStage?: string | undefined;
    isPublicCompany?: boolean | undefined;
    websiteLoadSpeed?: number | undefined;
    hasSslCertificate?: boolean | undefined;
    cmsUsed?: string | undefined;
    ecommercePlatforms?: Array<string> | undefined;
    timezone?: string | undefined;
    neighborhood?: string | undefined;
    nearbyLandmarks?: Array<string> | undefined;
    transportationAccess?: string | undefined;
    employeeBenefits?: Array<string> | undefined;
    parentCompany?: string | undefined;
    subsidiaries?: Array<string> | undefined;
    isFranchise?: boolean | undefined;
    seoKeywords?: Array<string> | undefined;
    usesGoogleAds?: boolean | undefined;
    googleMyBusinessCategory?: string | undefined;
    naicsCode?: string | undefined;
    sicCode?: string | undefined;
    unspscCode?: string | undefined;
    isGreenCertified?: boolean | undefined;
    energySources?: Array<string> | undefined;
    sustainabilityRating?: string | undefined;
    recentAnnouncements?: Array<string> | undefined;
    lastProductLaunch?: string | undefined;
    hasLitigationHistory?: boolean | undefined;
    exportControlStatus?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$inboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$Outbound = {
  id?: string | undefined;
  priority?: number | undefined;
  payloadType?: string | undefined;
  payload?: string | undefined;
  createdAt?: string | undefined;
  status: string;
  name?: string | undefined;
  keywords?: Array<string> | undefined;
  lang: string;
  zoom?: number | undefined;
  lat?: string | undefined;
  lon?: string | undefined;
  fastMode?: boolean | undefined;
  radius?: number | undefined;
  depth?: number | undefined;
  email?: boolean | undefined;
  maxTime?: number | undefined;
  proxies?: Array<string> | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  leads?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$Outbound
    >
    | undefined;
  url?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyDataStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLang$outboundSchema
        .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationIdJobs,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastRunTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$inboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$inboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$inboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    cronExpression?: string | undefined;
    nextRunTime?: string | undefined;
    lastRunTime?: string | undefined;
    status: string;
    retryCount?: number | undefined;
    maxRetries?: number | undefined;
    alertEmails?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    jobs?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$Outbound>
      | undefined;
    geoFencingRadius?: number | undefined;
    geoFencingLat?: number | undefined;
    geoFencingLon?: number | undefined;
    geoFencingZoomMin?: number | undefined;
    geoFencingZoomMax?: number | undefined;
    includeReviews?: boolean | undefined;
    includePhotos?: boolean | undefined;
    includeBusinessHours?: boolean | undefined;
    maxReviewsPerBusiness?: number | undefined;
    outputFormat: string;
    outputDestination?: string | undefined;
    dataRetention?: string | undefined;
    anonymizePii?: boolean | undefined;
    notificationSlackChannel?: string | undefined;
    notificationEmailGroup?: string | undefined;
    notificationNotifyOnStart?: boolean | undefined;
    notificationNotifyOnComplete?: boolean | undefined;
    notificationNotifyOnFailure?: boolean | undefined;
    contentFilterAllowedCountries?: Array<string> | undefined;
    contentFilterExcludedTypes?: Array<string> | undefined;
    contentFilterMinimumRating?: number | undefined;
    contentFilterMinimumReviews?: number | undefined;
    qosMaxConcurrentRequests?: number | undefined;
    qosMaxRetries?: number | undefined;
    qosRequestTimeout?: string | undefined;
    qosEnableJavascript?: boolean | undefined;
    respectRobotsTxt?: boolean | undefined;
    acceptTermsOfService?: boolean | undefined;
    userAgent?: string | undefined;
    searchTerms?: Array<string> | undefined;
    scheduledEntryId?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    cronExpression: z.string().optional(),
    nextRunTime: z.date().transform(v => v.toISOString()).optional(),
    lastRunTime: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200Status$outboundSchema
        .default("WORKFLOW_STATUS_UNSPECIFIED"),
    retryCount: z.number().int().optional(),
    maxRetries: z.number().int().optional(),
    alertEmails: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    jobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdJobs$outboundSchema
      ),
    ).optional(),
    geoFencingRadius: z.number().optional(),
    geoFencingLat: z.number().optional(),
    geoFencingLon: z.number().optional(),
    geoFencingZoomMin: z.number().int().optional(),
    geoFencingZoomMax: z.number().int().optional(),
    includeReviews: z.boolean().optional(),
    includePhotos: z.boolean().optional(),
    includeBusinessHours: z.boolean().optional(),
    maxReviewsPerBusiness: z.number().int().optional(),
    outputFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOutputFormat$outboundSchema
        .default("OUTPUT_FORMAT_UNSPECIFIED"),
    outputDestination: z.string().optional(),
    dataRetention: z.string().optional(),
    anonymizePii: z.boolean().optional(),
    notificationSlackChannel: z.string().optional(),
    notificationEmailGroup: z.string().optional(),
    notificationNotifyOnStart: z.boolean().optional(),
    notificationNotifyOnComplete: z.boolean().optional(),
    notificationNotifyOnFailure: z.boolean().optional(),
    contentFilterAllowedCountries: z.array(z.string()).optional(),
    contentFilterExcludedTypes: z.array(z.string()).optional(),
    contentFilterMinimumRating: z.number().optional(),
    contentFilterMinimumReviews: z.number().int().optional(),
    qosMaxConcurrentRequests: z.number().int().optional(),
    qosMaxRetries: z.number().int().optional(),
    qosRequestTimeout: z.string().optional(),
    qosEnableJavascript: z.boolean().optional(),
    respectRobotsTxt: z.boolean().optional(),
    acceptTermsOfService: z.boolean().optional(),
    userAgent: z.string().optional(),
    searchTerms: z.array(z.string()).optional(),
    scheduledEntryId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWorkflowsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWorkflowsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdLang> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdLang);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdLang> =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$inboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdDay> =
    z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdDay);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$outboundSchema:
  z.ZodNativeEnum<typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdDay> =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$inboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours
  > = z.object({
    id: z.string().optional(),
    day: GetApiLeadScraperMicroserviceApiV1OrganizationIdDay$outboundSchema
      .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdRegularHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdRegularHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$inboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$Outbound =
  {
    id?: string | undefined;
    day: string;
    openTime?: string | undefined;
    closeTime?: string | undefined;
    closed?: boolean | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours
  > = z.object({
    id: z.string().optional(),
    day:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsDay$outboundSchema
        .default("DAY_OF_WEEK_UNSPECIFIED"),
    openTime: z.string().optional(),
    closeTime: z.string().optional(),
    closed: z.boolean().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHoursToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHoursFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$Outbound = {
  id?: string | undefined;
  author?: string | undefined;
  rating?: number | undefined;
  text?: string | undefined;
  time?: string | undefined;
  language?: string | undefined;
  profilePhotoUrl?: string | undefined;
  reviewCount?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews
  > = z.object({
    id: z.string().optional(),
    author: z.string().optional(),
    rating: z.number().optional(),
    text: z.string().optional(),
    time: z.date().transform(v => v.toISOString()).optional(),
    language: z.string().optional(),
    profilePhotoUrl: z.string().optional(),
    reviewCount: z.number().int().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdReviewsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdReviews:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdReviews),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdReviewsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$inboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$inboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$inboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$inboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$inboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  phone?: string | undefined;
  address?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  country?: string | undefined;
  latitude?: number | undefined;
  longitude?: number | undefined;
  googleRating?: number | undefined;
  reviewCount?: number | undefined;
  industry?: string | undefined;
  employeeCount?: number | undefined;
  estimatedRevenue?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  placeId?: string | undefined;
  googleMapsUrl?: string | undefined;
  businessStatus?: string | undefined;
  regularHours?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$Outbound
    >
    | undefined;
  specialHours?:
    | Array<
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$Outbound
    >
    | undefined;
  photoReferences?: Array<string> | undefined;
  mainPhotoUrl?: string | undefined;
  reviews?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$Outbound>
    | undefined;
  types?: Array<string> | undefined;
  amenities?: Array<string> | undefined;
  servesVegetarianFood?: boolean | undefined;
  outdoorSeating?: boolean | undefined;
  paymentMethods?: Array<string> | undefined;
  wheelchairAccessible?: boolean | undefined;
  parkingAvailable?: boolean | undefined;
  socialMedia?: { [k: string]: string } | undefined;
  ratingCategory?: string | undefined;
  rating?: number | undefined;
  count?: number | undefined;
  lastUpdated?: string | undefined;
  dataSourceVersion?: string | undefined;
  scrapingSessionId?: string | undefined;
  alternatePhones?: Array<string> | undefined;
  contactPersonName?: string | undefined;
  contactPersonTitle?: string | undefined;
  contactEmail?: string | undefined;
  foundedYear?: number | undefined;
  businessType?: string | undefined;
  certifications?: Array<string> | undefined;
  licenseNumber?: string | undefined;
  revenueRange: string;
  fundingStage?: string | undefined;
  isPublicCompany?: boolean | undefined;
  websiteLoadSpeed?: number | undefined;
  hasSslCertificate?: boolean | undefined;
  cmsUsed?: string | undefined;
  ecommercePlatforms?: Array<string> | undefined;
  timezone?: string | undefined;
  neighborhood?: string | undefined;
  nearbyLandmarks?: Array<string> | undefined;
  transportationAccess?: string | undefined;
  employeeBenefits?: Array<string> | undefined;
  parentCompany?: string | undefined;
  subsidiaries?: Array<string> | undefined;
  isFranchise?: boolean | undefined;
  seoKeywords?: Array<string> | undefined;
  usesGoogleAds?: boolean | undefined;
  googleMyBusinessCategory?: string | undefined;
  naicsCode?: string | undefined;
  sicCode?: string | undefined;
  unspscCode?: string | undefined;
  isGreenCertified?: boolean | undefined;
  energySources?: Array<string> | undefined;
  sustainabilityRating?: string | undefined;
  recentAnnouncements?: Array<string> | undefined;
  lastProductLaunch?: string | undefined;
  hasLitigationHistory?: boolean | undefined;
  exportControlStatus?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    website: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    latitude: z.number().optional(),
    longitude: z.number().optional(),
    googleRating: z.number().optional(),
    reviewCount: z.number().int().optional(),
    industry: z.string().optional(),
    employeeCount: z.number().int().optional(),
    estimatedRevenue: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    placeId: z.string().optional(),
    googleMapsUrl: z.string().optional(),
    businessStatus: z.string().optional(),
    regularHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdRegularHours$outboundSchema
      ),
    ).optional(),
    specialHours: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdSpecialHours$outboundSchema
      ),
    ).optional(),
    photoReferences: z.array(z.string()).optional(),
    mainPhotoUrl: z.string().optional(),
    reviews: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdReviews$outboundSchema
      ),
    ).optional(),
    types: z.array(z.string()).optional(),
    amenities: z.array(z.string()).optional(),
    servesVegetarianFood: z.boolean().optional(),
    outdoorSeating: z.boolean().optional(),
    paymentMethods: z.array(z.string()).optional(),
    wheelchairAccessible: z.boolean().optional(),
    parkingAvailable: z.boolean().optional(),
    socialMedia: z.record(z.string()).optional(),
    ratingCategory: z.string().optional(),
    rating: z.number().optional(),
    count: z.number().int().optional(),
    lastUpdated: z.date().transform(v => v.toISOString()).optional(),
    dataSourceVersion: z.string().optional(),
    scrapingSessionId: z.string().optional(),
    alternatePhones: z.array(z.string()).optional(),
    contactPersonName: z.string().optional(),
    contactPersonTitle: z.string().optional(),
    contactEmail: z.string().optional(),
    foundedYear: z.number().int().optional(),
    businessType: z.string().optional(),
    certifications: z.array(z.string()).optional(),
    licenseNumber: z.string().optional(),
    revenueRange:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRevenueRange$outboundSchema
        .default("REVENUE_RANGE_UNSPECIFIED"),
    fundingStage: z.string().optional(),
    isPublicCompany: z.boolean().optional(),
    websiteLoadSpeed: z.number().optional(),
    hasSslCertificate: z.boolean().optional(),
    cmsUsed: z.string().optional(),
    ecommercePlatforms: z.array(z.string()).optional(),
    timezone: z.string().optional(),
    neighborhood: z.string().optional(),
    nearbyLandmarks: z.array(z.string()).optional(),
    transportationAccess: z.string().optional(),
    employeeBenefits: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdEmployeeBenefits$outboundSchema,
    ).optional(),
    parentCompany: z.string().optional(),
    subsidiaries: z.array(z.string()).optional(),
    isFranchise: z.boolean().optional(),
    seoKeywords: z.array(z.string()).optional(),
    usesGoogleAds: z.boolean().optional(),
    googleMyBusinessCategory: z.string().optional(),
    naicsCode: z.string().optional(),
    sicCode: z.string().optional(),
    unspscCode: z.string().optional(),
    isGreenCertified: z.boolean().optional(),
    energySources: z.array(z.string()).optional(),
    sustainabilityRating: z.string().optional(),
    recentAnnouncements: z.array(z.string()).optional(),
    lastProductLaunch: z.date().transform(v => v.toISOString()).optional(),
    hasLitigationHistory: z.boolean().optional(),
    exportControlStatus: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdLeadsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdLeads:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationIdLeads,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdLeadsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$inboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$inboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$inboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$Outbound =
  {
    id?: string | undefined;
    priority?: number | undefined;
    payloadType?: string | undefined;
    payload?: string | undefined;
    createdAt?: string | undefined;
    status: string;
    name?: string | undefined;
    keywords?: Array<string> | undefined;
    lang: string;
    zoom?: number | undefined;
    lat?: string | undefined;
    lon?: string | undefined;
    fastMode?: boolean | undefined;
    radius?: number | undefined;
    depth?: number | undefined;
    email?: boolean | undefined;
    maxTime?: number | undefined;
    proxies?: Array<string> | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    leads?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$Outbound>
      | undefined;
    url?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs
  > = z.object({
    id: z.string().optional(),
    priority: z.number().int().optional(),
    payloadType: z.string().optional(),
    payload: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONStatus$outboundSchema
        .default("BACKGROUND_JOB_STATUS_UNSPECIFIED"),
    name: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    lang: GetApiLeadScraperMicroserviceApiV1OrganizationIdLang$outboundSchema
      .default("LANGUAGE_UNSPECIFIED"),
    zoom: z.number().int().optional(),
    lat: z.string().optional(),
    lon: z.string().optional(),
    fastMode: z.boolean().optional(),
    radius: z.number().int().optional(),
    depth: z.number().int().optional(),
    email: z.boolean().optional(),
    maxTime: z.number().int().optional(),
    proxies: z.array(z.string()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    leads: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdLeads$outboundSchema
      ),
    ).optional(),
    url: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastRotatedAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastSecurityReviewAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    keyHash?: string | undefined;
    keyPrefix?: string | undefined;
    scopes?: Array<string> | undefined;
    allowedIps?: Array<string> | undefined;
    allowedDomains?: Array<string> | undefined;
    allowedEnvironments?: Array<string> | undefined;
    isTestKey?: boolean | undefined;
    requestsPerSecond?: number | undefined;
    requestsPerDay?: number | undefined;
    concurrentRequests?: number | undefined;
    monthlyRequestQuota?: string | undefined;
    costPerRequest?: number | undefined;
    billingTier?: string | undefined;
    totalRequests?: string | undefined;
    totalErrors?: string | undefined;
    lastUsedAt?: string | undefined;
    averageResponseTime?: number | undefined;
    endpointUsageJson?: string | undefined;
    errorRatesJson?: string | undefined;
    recentErrors?: string | undefined;
    successfulRequestsCount?: number | undefined;
    successRate?: number | undefined;
    status: string;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    expiresAt?: string | undefined;
    deletedAt?: string | undefined;
    lastRotatedAt?: string | undefined;
    lastSecurityReviewAt?: string | undefined;
    requiresClientSecret?: boolean | undefined;
    clientSecretHash?: string | undefined;
    enforceHttps?: boolean | undefined;
    enforceSigning?: boolean | undefined;
    allowedSignatureAlgorithms?: Array<string> | undefined;
    enforceMutualTls?: boolean | undefined;
    clientCertificateHash?: string | undefined;
    requireRequestSigning?: boolean | undefined;
    description?: string | undefined;
    metadataJson?: string | undefined;
    tags?: Array<string> | undefined;
    apiVersion?: string | undefined;
    supportedFeatures?: Array<string> | undefined;
    documentationUrl?: string | undefined;
    supportContact?: string | undefined;
    logAllRequests?: boolean | undefined;
    lastRotationReason?: string | undefined;
    lastRotationDate?: string | undefined;
    rotationFrequencyDays?: number | undefined;
    complianceStandards?: Array<string> | undefined;
    requiresAuditLogging?: boolean | undefined;
    dataResidency?: string | undefined;
    approvedIntegrations?: Array<string> | undefined;
    alertEmails?: Array<string> | undefined;
    webhookUrl?: string | undefined;
    alertOnQuotaThreshold?: boolean | undefined;
    quotaAlertThreshold?: number | undefined;
    alertOnErrorSpike?: boolean | undefined;
    errorAlertThreshold?: number | undefined;
    monitoringIntegrations?: Array<string> | undefined;
    encrypted?: boolean | undefined;
    dataClassification?: string | undefined;
    maxUses?: number | undefined;
    rateLimit?: number | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    allowedIps: z.array(z.string()).optional(),
    allowedDomains: z.array(z.string()).optional(),
    allowedEnvironments: z.array(z.string()).optional(),
    isTestKey: z.boolean().optional(),
    requestsPerSecond: z.number().int().optional(),
    requestsPerDay: z.number().int().optional(),
    concurrentRequests: z.number().int().optional(),
    monthlyRequestQuota: z.string().optional(),
    costPerRequest: z.number().optional(),
    billingTier: z.string().optional(),
    totalRequests: z.string().optional(),
    totalErrors: z.string().optional(),
    lastUsedAt: z.date().transform(v => v.toISOString()).optional(),
    averageResponseTime: z.number().optional(),
    endpointUsageJson: z.string().optional(),
    errorRatesJson: z.string().optional(),
    recentErrors: z.string().optional(),
    successfulRequestsCount: z.number().int().optional(),
    successRate: z.number().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    lastRotatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastSecurityReviewAt: z.date().transform(v => v.toISOString()).optional(),
    requiresClientSecret: z.boolean().optional(),
    clientSecretHash: z.string().optional(),
    enforceHttps: z.boolean().optional(),
    enforceSigning: z.boolean().optional(),
    allowedSignatureAlgorithms: z.array(z.string()).optional(),
    enforceMutualTls: z.boolean().optional(),
    clientCertificateHash: z.string().optional(),
    requireRequestSigning: z.boolean().optional(),
    description: z.string().optional(),
    metadataJson: z.string().optional(),
    tags: z.array(z.string()).optional(),
    apiVersion: z.string().optional(),
    supportedFeatures: z.array(z.string()).optional(),
    documentationUrl: z.string().optional(),
    supportContact: z.string().optional(),
    logAllRequests: z.boolean().optional(),
    lastRotationReason: z.string().optional(),
    lastRotationDate: z.date().transform(v => v.toISOString()).optional(),
    rotationFrequencyDays: z.number().int().optional(),
    complianceStandards: z.array(z.string()).optional(),
    requiresAuditLogging: z.boolean().optional(),
    dataResidency: z.string().optional(),
    approvedIntegrations: z.array(z.string()).optional(),
    alertEmails: z.array(z.string()).optional(),
    webhookUrl: z.string().optional(),
    alertOnQuotaThreshold: z.boolean().optional(),
    quotaAlertThreshold: z.number().optional(),
    alertOnErrorSpike: z.boolean().optional(),
    errorAlertThreshold: z.number().optional(),
    monitoringIntegrations: z.array(z.string()).optional(),
    encrypted: z.boolean().optional(),
    dataClassification: z.string().optional(),
    maxUses: z.number().int().optional(),
    rateLimit: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$outboundSchema
      .parse(
        getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys,
      ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$Outbound =
  {};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdMetadataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdMetadata:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdMetadata),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$inboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$inboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$inboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    lastTriggeredAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$inboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$Outbound =
  {
    id?: string | undefined;
    url?: string | undefined;
    authType?: string | undefined;
    authToken?: string | undefined;
    customHeaders?: { [k: string]: string } | undefined;
    maxRetries?: number | undefined;
    retryInterval?: string | undefined;
    triggerEvents?: Array<string> | undefined;
    includedFields?: Array<string> | undefined;
    includeFullResults?: boolean | undefined;
    payloadFormat: string;
    verifySsl?: boolean | undefined;
    signingSecret?: string | undefined;
    rateLimit?: number | undefined;
    rateLimitInterval?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    lastTriggeredAt?: string | undefined;
    successfulCalls?: number | undefined;
    failedCalls?: number | undefined;
    metadata?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$Outbound
      | undefined;
    webhookName?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks
  > = z.object({
    id: z.string().optional(),
    url: z.string().optional(),
    authType: z.string().optional(),
    authToken: z.string().optional(),
    customHeaders: z.record(z.string()).optional(),
    maxRetries: z.number().int().optional(),
    retryInterval: z.string().optional(),
    triggerEvents: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdTriggerEvents$outboundSchema,
    ).optional(),
    includedFields: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdIncludedFields$outboundSchema,
    ).optional(),
    includeFullResults: z.boolean().optional(),
    payloadFormat:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPayloadFormat$outboundSchema
        .default("PAYLOAD_FORMAT_UNSPECIFIED"),
    verifySsl: z.boolean().optional(),
    signingSecret: z.string().optional(),
    rateLimit: z.number().int().optional(),
    rateLimitInterval: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    lastTriggeredAt: z.date().transform(v => v.toISOString()).optional(),
    successfulCalls: z.number().int().optional(),
    failedCalls: z.number().int().optional(),
    metadata: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdMetadata$outboundSchema
    ).optional(),
    webhookName: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWebhooksToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWebhooksFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$inboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$inboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$inboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$inboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    domain?: string | undefined;
    gdprCompliant?: boolean | undefined;
    hipaaCompliant?: boolean | undefined;
    soc2Compliant?: boolean | undefined;
    storageQuota?: string | undefined;
    usedStorage?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    workflows?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$Outbound
      >
      | undefined;
    jobsRunThisMonth?: number | undefined;
    workspaceJobLimit?: number | undefined;
    dailyJobQuota?: number | undefined;
    activeScrapers?: number | undefined;
    totalLeadsCollected?: number | undefined;
    lastJobRun?: string | undefined;
    scrapingJobs?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$Outbound
      >
      | undefined;
    apiKeys?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$Outbound
      >
      | undefined;
    webhooks?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$Outbound>
      | undefined;
    workspaceType: string;
    description?: string | undefined;
    metadata?: { [k: string]: string } | undefined;
    tags?: Array<string> | undefined;
    maxTeamMembers?: number | undefined;
    currentTeamMembers?: number | undefined;
    allowGuestAccess?: boolean | undefined;
    allowedEmailDomains?: Array<string> | undefined;
    exportFormats?: Array<string> | undefined;
    exportSchedule?: string | undefined;
    exportDestinations?: Array<string> | undefined;
    exportDestinationConfig?: { [k: string]: string } | undefined;
    compressExports?: boolean | undefined;
    compressionFormat?: string | undefined;
    salesforceEnabled?: boolean | undefined;
    salesforceConfig?: string | undefined;
    hubspotEnabled?: boolean | undefined;
    hubspotConfig?: string | undefined;
    zapierEnabled?: boolean | undefined;
    zapierWebhook?: string | undefined;
    activeIntegrations?: Array<string> | undefined;
    integrationSettings?: { [k: string]: string } | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    industry: z.string().optional(),
    domain: z.string().optional(),
    gdprCompliant: z.boolean().optional(),
    hipaaCompliant: z.boolean().optional(),
    soc2Compliant: z.boolean().optional(),
    storageQuota: z.string().optional(),
    usedStorage: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    workflows: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkflows$outboundSchema
      ),
    ).optional(),
    jobsRunThisMonth: z.number().int().optional(),
    workspaceJobLimit: z.number().int().optional(),
    dailyJobQuota: z.number().int().optional(),
    activeScrapers: z.number().int().optional(),
    totalLeadsCollected: z.number().int().optional(),
    lastJobRun: z.date().transform(v => v.toISOString()).optional(),
    scrapingJobs: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdScrapingJobs$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsApiKeys$outboundSchema
      ),
    ).optional(),
    webhooks: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWebhooks$outboundSchema
      ),
    ).optional(),
    workspaceType:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaceType$outboundSchema
        .default("WORKSPACE_TYPE_UNSPECIFIED"),
    description: z.string().optional(),
    metadata: z.record(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    maxTeamMembers: z.number().int().optional(),
    currentTeamMembers: z.number().int().optional(),
    allowGuestAccess: z.boolean().optional(),
    allowedEmailDomains: z.array(z.string()).optional(),
    exportFormats: z.array(z.string()).optional(),
    exportSchedule: z.string().optional(),
    exportDestinations: z.array(z.string()).optional(),
    exportDestinationConfig: z.record(z.string()).optional(),
    compressExports: z.boolean().optional(),
    compressionFormat: z.string().optional(),
    salesforceEnabled: z.boolean().optional(),
    salesforceConfig: z.string().optional(),
    hubspotEnabled: z.boolean().optional(),
    hubspotConfig: z.string().optional(),
    zapierEnabled: z.boolean().optional(),
    zapierWebhook: z.string().optional(),
    activeIntegrations: z.array(z.string()).optional(),
    integrationSettings: z.record(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWorkspacesToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdWorkspacesFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$Outbound =
  {
    id?: string | undefined;
    emailNotifications?: boolean | undefined;
    slackNotifications?: boolean | undefined;
    defaultDataRetention?: string | undefined;
    autoPurgeEnabled?: boolean | undefined;
    require2fa?: boolean | undefined;
    sessionTimeout?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings
  > = z.object({
    id: z.string().optional(),
    emailNotifications: z.boolean().optional(),
    slackNotifications: z.boolean().optional(),
    defaultDataRetention: z.string().optional(),
    autoPurgeEnabled: z.boolean().optional(),
    require2fa: z.boolean().optional(),
    sessionTimeout: z.string().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSettingsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdSettings:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdSettings),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$inboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$inboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$inboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$inboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$inboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$Outbound =
  {
    id?: string | undefined;
    authPlatformUserId?: string | undefined;
    email?: string | undefined;
    deletedAt?: string | undefined;
    createdAt?: string | undefined;
    accountStatus: string;
    roles?: Array<string> | undefined;
    permissions?: Array<string> | undefined;
    mfaEnabled?: boolean | undefined;
    lastLoginAt?: string | undefined;
    timezone: string;
    totalJobsRun?: number | undefined;
    monthlyJobLimit?: number | undefined;
    concurrentJobLimit?: number | undefined;
    workspaces?:
      | Array<
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$Outbound
      >
      | undefined;
    settings?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$Outbound
      | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts
  > = z.object({
    id: z.string().optional(),
    authPlatformUserId: z.string().optional(),
    email: z.string().optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    accountStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdAccountStatus$outboundSchema
        .default("ACCOUNT_STATUS_UNSPECIFIED"),
    roles: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdRoles$outboundSchema,
    ).optional(),
    permissions: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPermissions$outboundSchema,
    ).optional(),
    mfaEnabled: z.boolean().optional(),
    lastLoginAt: z.date().transform(v => v.toISOString()).optional(),
    timezone:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdTimezone$outboundSchema
        .default("TIMEZONE_UNSPECIFIED"),
    totalJobsRun: z.number().int().optional(),
    monthlyJobLimit: z.number().int().optional(),
    concurrentJobLimit: z.number().int().optional(),
    workspaces: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdWorkspaces$outboundSchema
      ),
    ).optional(),
    settings: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSettings$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdAccountsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdAccounts:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdAccounts),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdAccountsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$inboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$Outbound = {
  id?: string | undefined;
  keyHash?: string | undefined;
  keyPrefix?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  status: string;
  scopes?: Array<string> | undefined;
  maxUses?: number | undefined;
  allowedIps?: Array<string> | undefined;
  useCount?: number | undefined;
  expiresAt?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys
  > = z.object({
    id: z.string().optional(),
    keyHash: z.string().optional(),
    keyPrefix: z.string().optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsResponseStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
    scopes: z.array(
      GetApiLeadScraperMicroserviceApiV1OrganizationIdScopes$outboundSchema,
    ).optional(),
    maxUses: z.number().int().optional(),
    allowedIps: z.array(z.string()).optional(),
    useCount: z.number().int().optional(),
    expiresAt: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdApiKeysToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdApiKeysFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$inboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$inboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$inboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  apiBaseUrl?: string | undefined;
  environmentVariables?: { [k: string]: string } | undefined;
  allowedOrigins?: Array<string> | undefined;
  storageQuota?: string | undefined;
  monthlyRequestLimit?: string | undefined;
  maxConcurrentJobs?: number | undefined;
  enableCaching?: boolean | undefined;
  enableRateLimiting?: boolean | undefined;
  enableRequestLogging?: boolean | undefined;
  accounts?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$Outbound>
    | undefined;
  apiKeys?:
    | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$Outbound>
    | undefined;
  totalRequests?: string | undefined;
  totalStorageUsed?: string | undefined;
  averageResponseTime?: number | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  deletedAt?: string | undefined;
  status: string;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    description: z.string().optional(),
    apiBaseUrl: z.string().optional(),
    environmentVariables: z.record(z.string()).optional(),
    allowedOrigins: z.array(z.string()).optional(),
    storageQuota: z.string().optional(),
    monthlyRequestLimit: z.string().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    enableCaching: z.boolean().optional(),
    enableRateLimiting: z.boolean().optional(),
    enableRequestLogging: z.boolean().optional(),
    accounts: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdAccounts$outboundSchema
      ),
    ).optional(),
    apiKeys: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdApiKeys$outboundSchema
      ),
    ).optional(),
    totalRequests: z.string().optional(),
    totalStorageUsed: z.string().optional(),
    averageResponseTime: z.number().optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationsStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdTenantsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdTenants:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdTenants),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdTenantsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus
  > = z.nativeEnum(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus,
  );

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus
  > =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$inboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$inboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodEnd: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$inboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$inboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    trialEnd: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    canceledAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    endedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$Outbound =
  {
    id?: string | undefined;
    stripeCustomerId?: string | undefined;
    stripeSubscriptionId?: string | undefined;
    stripePriceId?: string | undefined;
    stripeProductId?: string | undefined;
    planTier: string;
    billingMode: string;
    includedJobs?: number | undefined;
    perJobRate?: number | undefined;
    maxConcurrentJobs?: number | undefined;
    includedStorage?: string | undefined;
    perGbRate?: number | undefined;
    advancedFilteringEnabled?: boolean | undefined;
    prioritySupportEnabled?: boolean | undefined;
    customExportsEnabled?: boolean | undefined;
    apiAccessEnabled?: boolean | undefined;
    customProxiesEnabled?: boolean | undefined;
    advancedAnalyticsEnabled?: boolean | undefined;
    retentionDays?: number | undefined;
    maxResultsPerJob?: number | undefined;
    currentPeriodStart?: string | undefined;
    currentPeriodEnd?: string | undefined;
    currentPeriodUsage?: number | undefined;
    currency?: string | undefined;
    basePrice?: number | undefined;
    billingInterval: string;
    autoRenew?: boolean | undefined;
    paymentStatus: string;
    isTrial?: boolean | undefined;
    trialStart?: string | undefined;
    trialEnd?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    canceledAt?: string | undefined;
    endedAt?: string | undefined;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions
  > = z.object({
    id: z.string().optional(),
    stripeCustomerId: z.string().optional(),
    stripeSubscriptionId: z.string().optional(),
    stripePriceId: z.string().optional(),
    stripeProductId: z.string().optional(),
    planTier:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPlanTier$outboundSchema
        .default("PLAN_TIER_UNSPECIFIED"),
    billingMode:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingMode$outboundSchema
        .default("BILLING_MODE_UNSPECIFIED"),
    includedJobs: z.number().int().optional(),
    perJobRate: z.number().optional(),
    maxConcurrentJobs: z.number().int().optional(),
    includedStorage: z.string().optional(),
    perGbRate: z.number().optional(),
    advancedFilteringEnabled: z.boolean().optional(),
    prioritySupportEnabled: z.boolean().optional(),
    customExportsEnabled: z.boolean().optional(),
    apiAccessEnabled: z.boolean().optional(),
    customProxiesEnabled: z.boolean().optional(),
    advancedAnalyticsEnabled: z.boolean().optional(),
    retentionDays: z.number().int().optional(),
    maxResultsPerJob: z.number().int().optional(),
    currentPeriodStart: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodEnd: z.date().transform(v => v.toISOString()).optional(),
    currentPeriodUsage: z.number().optional(),
    currency: z.string().optional(),
    basePrice: z.number().optional(),
    billingInterval:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingInterval$outboundSchema
        .default("INTERVAL_UNSPECIFIED"),
    autoRenew: z.boolean().optional(),
    paymentStatus:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdPaymentStatus$outboundSchema
        .default("PAYMENT_STATUS_UNSPECIFIED"),
    isTrial: z.boolean().optional(),
    trialStart: z.date().transform(v => v.toISOString()).optional(),
    trialEnd: z.date().transform(v => v.toISOString()).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    canceledAt: z.date().transform(v => v.toISOString()).optional(),
    endedAt: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptionsToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus
  > = z.nativeEnum(GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus);

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus
  > = GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$outboundSchema;
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$inboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$inboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$inboundSchema
    ).optional(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    deletedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    createdBy: z.string().optional(),
    status: GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$inboundSchema
      .default("STATUS_UNSPECIFIED"),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    displayName?: string | undefined;
    website?: string | undefined;
    description?: string | undefined;
    billingEmail?: string | undefined;
    technicalEmail?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    ssoEnabled?: boolean | undefined;
    ssoProvider?: string | undefined;
    ssoDomain?: string | undefined;
    allowedDomains?: Array<string> | undefined;
    enforce2fa?: boolean | undefined;
    billingPlan: string;
    billingCurrency?: string | undefined;
    autoBilling?: boolean | undefined;
    taxId?: string | undefined;
    complianceFrameworks?: Array<string> | undefined;
    dataProcessingAgreement?: boolean | undefined;
    dataRegion?: string | undefined;
    maxTenants?: number | undefined;
    totalStorageLimit?: string | undefined;
    maxApiKeys?: number | undefined;
    maxUsers?: number | undefined;
    tenants?:
      | Array<GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$Outbound>
      | undefined;
    subscriptions?:
      | GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$Outbound
      | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    deletedAt?: string | undefined;
    createdBy?: string | undefined;
    status: string;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization
  > = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    displayName: z.string().optional(),
    website: z.string().optional(),
    description: z.string().optional(),
    billingEmail: z.string().optional(),
    technicalEmail: z.string().optional(),
    phone: z.string().optional(),
    address: z.string().optional(),
    ssoEnabled: z.boolean().optional(),
    ssoProvider: z.string().optional(),
    ssoDomain: z.string().optional(),
    allowedDomains: z.array(z.string()).optional(),
    enforce2fa: z.boolean().optional(),
    billingPlan:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdBillingPlan$outboundSchema
        .default("BILLING_PLAN_UNSPECIFIED"),
    billingCurrency: z.string().optional(),
    autoBilling: z.boolean().optional(),
    taxId: z.string().optional(),
    complianceFrameworks: z.array(z.string()).optional(),
    dataProcessingAgreement: z.boolean().optional(),
    dataRegion: z.string().optional(),
    maxTenants: z.number().int().optional(),
    totalStorageLimit: z.string().optional(),
    maxApiKeys: z.number().int().optional(),
    maxUsers: z.number().int().optional(),
    tenants: z.array(
      z.lazy(() =>
        GetApiLeadScraperMicroserviceApiV1OrganizationIdTenants$outboundSchema
      ),
    ).optional(),
    subscriptions: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdSubscriptions$outboundSchema
    ).optional(),
    createdAt: z.date().transform(v => v.toISOString()).optional(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    deletedAt: z.date().transform(v => v.toISOString()).optional(),
    createdBy: z.string().optional(),
    status:
      GetApiLeadScraperMicroserviceApiV1OrganizationIdStatus$outboundSchema
        .default("STATUS_UNSPECIFIED"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdOrganization:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdOrganization),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdOrganizationFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdData$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$inboundSchema
    ).optional(),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdData$Outbound = {
  organization?:
    | GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$Outbound
    | undefined;
};

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdData$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData
  > = z.object({
    organization: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdOrganization$outboundSchema
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdData$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdData$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdData$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdData$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdDataToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdData:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdData$outboundSchema.parse(
      getApiLeadScraperMicroserviceApiV1OrganizationIdData,
    ),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdData' from JSON`,
  );
}

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$inboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdData$inboundSchema
    ),
  });

/** @internal */
export type GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$Outbound =
  {
    data: GetApiLeadScraperMicroserviceApiV1OrganizationIdData$Outbound;
  };

/** @internal */
export const GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$outboundSchema:
  z.ZodType<
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody
  > = z.object({
    data: z.lazy(() =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$ {
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$inboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$outboundSchema;
  /** @deprecated use `GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$Outbound` instead. */
  export type Outbound =
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$Outbound;
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdResponseBodyToJSON(
  getApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody:
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody,
): string {
  return JSON.stringify(
    GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$outboundSchema
      .parse(getApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody),
  );
}

export function getApiLeadScraperMicroserviceApiV1OrganizationIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetApiLeadScraperMicroserviceApiV1OrganizationIdResponseBody' from JSON`,
  );
}
