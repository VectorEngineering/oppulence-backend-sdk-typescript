/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest = {
  keyId: string;
  organizationId?: string | undefined;
  workspaceId?: string | undefined;
  tenantId?: string | undefined;
  accountId?: string | undefined;
};

/**
 * Permanently deletes an API key
 */
export type DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody = {
  success?: boolean | undefined;
};

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    keyId: z.string(),
    organizationId: z.string().optional(),
    workspaceId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$Outbound =
  {
    keyId: string;
    organizationId?: string | undefined;
    workspaceId?: string | undefined;
    tenantId?: string | undefined;
    accountId?: string | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest
  > = z.object({
    keyId: z.string(),
    organizationId: z.string().optional(),
    workspaceId: z.string().optional(),
    tenantId: z.string().optional(),
    accountId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequestToJSON(
  deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest:
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean().optional(),
  });

/** @internal */
export type DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$Outbound =
  {
    success?: boolean | undefined;
  };

/** @internal */
export const DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody
  > = z.object({
    success: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$ {
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$Outbound` instead. */
  export type Outbound =
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$Outbound;
}

export function deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBodyToJSON(
  deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody:
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$outboundSchema
      .parse(deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody),
  );
}

export function deleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiLeadScraperMicroserviceApiV1ApiKeysKeyIdResponseBody' from JSON`,
  );
}
