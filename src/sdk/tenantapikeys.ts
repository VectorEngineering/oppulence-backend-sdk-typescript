/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tenantApiKeysCreate } from "../funcs/tenantApiKeysCreate.js";
import { tenantApiKeysUpdate } from "../funcs/tenantApiKeysUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TenantApiKeys extends ClientSDK {
  /**
   * Create a new tenant API key
   *
   * @remarks
   * Creates a new API key for a tenant with specified permissions
   */
  async create(
    request:
      operations.PostApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
    options?: RequestOptions,
  ): Promise<
    operations.PostApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody
  > {
    return unwrapAsync(tenantApiKeysCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update tenant API key
   *
   * @remarks
   * Updates an existing tenant API key&#x27;s configuration
   */
  async update(
    request:
      operations.PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysRequestBody,
    options?: RequestOptions,
  ): Promise<
    operations.PutApiLeadScraperMicroserviceApiV1OrganizationsTenantsApiKeysResponseBody
  > {
    return unwrapAsync(tenantApiKeysUpdate(
      this,
      request,
      options,
    ));
  }
}
